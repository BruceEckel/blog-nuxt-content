[{"data":1,"prerenderedAt":207},["ShallowReactive",2],{"post-/topics/events":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"category":15,"dropdown":16,"tags":17,"meta":23,"canonicalUrl":40,"newsletter":7,"topics":41,"created_at":45,"last_modified":46,"body":47,"_type":201,"_id":202,"_source":203,"_file":204,"_stem":205,"_extension":206},"/vuejs-emit-multiple-values-from-child-to-parent","",false,"VueJS Custom Event - Emit Multiple Values","Use a VueJS's custom event to emit multiple parameters between components.","post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2020-09-07T00:00:00.000Z","tutorials","VueJS",[18,19,20,21,22],"vue","Vue","nuxt","Nuxt","Code",[24,26,28,31,34,36,38],{"name":25,"content":8},"og:title",{"name":27,"content":9},"og:description",{"name":29,"content":30},"og:image","https://codybontecou.com/images/vuejs-emit-multiple-params-meta.png",{"name":32,"content":33},"og:image:alt","Emit Multiple Values from Child to Parent in a VueJS Custom Event with code snippet showcasing example provided in blog post.",{"name":25,"content":35},"Emit Multiple Values from Child to Parent in a VueJS Custom Event",{"name":37,"content":35},"twitter:title",{"name":39,"content":35},"twitter:text:title","https://codybontecou.com/vuejs-emit-multiple-values-from-child-to-parent.html",[18,42,43,44],"events","components","composition","2024-10-31T14:26","2024-11-09T21:19",{"type":48,"children":49,"toc":196},"root",[50,62,78,83,90,103,108,131,137,164,177,186,191],{"type":51,"tag":52,"props":53,"children":54},"element","blockquote",{},[55],{"type":51,"tag":56,"props":57,"children":58},"p",{},[59],{"type":60,"value":61},"text","VueJS custom events are a great way to communicate between child and parent components.",{"type":51,"tag":56,"props":63,"children":64},{},[65,67,76],{"type":60,"value":66},"I was recently was in need of a way to pass more than one value from child to parent within a single custom event. The ",{"type":51,"tag":68,"props":69,"children":73},"a",{"href":70,"rel":71},"https://vuejs.org/v2/guide/components-custom-events.html",[72],"nofollow",[74],{"type":60,"value":75},"VueJS Docs",{"type":60,"value":77}," do not provide any example showcasing this and instead I needed to refer to some comments within a Stack Overflow thread.",{"type":51,"tag":56,"props":79,"children":80},{},[81],{"type":60,"value":82},"Here is what I found.",{"type":51,"tag":84,"props":85,"children":87},"h2",{"id":86},"to-emit-more-than-one-parameter-its-best-to-pass-the-data-as-an-object",[88],{"type":60,"value":89},"To emit more than one parameter, it's best to pass the data as an object:",{"type":51,"tag":91,"props":92,"children":97},"pre",{"className":93,"code":95,"language":96,"meta":6},[94],"language-js","this.$emit('success', {\n  username: 'CodyBontecou',\n  error: false,\n})\n","js",[98],{"type":51,"tag":99,"props":100,"children":101},"code",{"__ignoreMap":6},[102],{"type":60,"value":95},{"type":51,"tag":56,"props":104,"children":105},{},[106],{"type":60,"value":107},"VueJS's custom events only accepts two parameters:",{"type":51,"tag":109,"props":110,"children":111},"ol",{},[112,126],{"type":51,"tag":113,"props":114,"children":115},"li",{},[116,118,124],{"type":60,"value":117},"The name of the event. In this case, the event name is ",{"type":51,"tag":99,"props":119,"children":121},{"className":120},[],[122],{"type":60,"value":123},"success",{"type":60,"value":125},".",{"type":51,"tag":113,"props":127,"children":128},{},[129],{"type":60,"value":130},"Data you want to pass. This can be a string, object, number, boolean, or function.",{"type":51,"tag":84,"props":132,"children":134},{"id":133},"access-the-parameters-from-the-parent-component-using-an-event-listener",[135],{"type":60,"value":136},"Access the parameters from the parent component using an event listener:",{"type":51,"tag":56,"props":138,"children":139},{},[140,142,147,149,155,157,163],{"type":60,"value":141},"We emitted the ",{"type":51,"tag":99,"props":143,"children":145},{"className":144},[],[146],{"type":60,"value":123},{"type":60,"value":148}," event from the child component. This event can be captured within the parent component where the child is rendered using the ",{"type":51,"tag":99,"props":150,"children":152},{"className":151},[],[153],{"type":60,"value":154},"@",{"type":60,"value":156}," sign, in this case, ",{"type":51,"tag":99,"props":158,"children":160},{"className":159},[],[161],{"type":60,"value":162},"@success",{"type":60,"value":125},{"type":51,"tag":109,"props":165,"children":166},{},[167,172],{"type":51,"tag":113,"props":168,"children":169},{},[170],{"type":60,"value":171},"@success calls the onSuccess method when success is emitted from the child component.",{"type":51,"tag":113,"props":173,"children":174},{},[175],{"type":60,"value":176},"The username and message params are destructured from the object passed into the success emit and are now usable within the onSuccuss function to do as you please.",{"type":51,"tag":91,"props":178,"children":181},{"className":179,"code":180,"language":96,"meta":6},[94],"\u003CLoginForm @success=\"onSuccess\" />\n\nmethods: {\n  onSuccess({ username, error }) {\n    ...\n  },\n}\n",[182],{"type":51,"tag":99,"props":183,"children":184},{"__ignoreMap":6},[185],{"type":60,"value":180},{"type":51,"tag":56,"props":187,"children":188},{},[189],{"type":60,"value":190},"It took me a little while to find the solution to this problem, so I figured it was best to document it within a blog post for others to benefit from.",{"type":51,"tag":56,"props":192,"children":193},{},[194],{"type":60,"value":195},"I hope it helped!",{"title":6,"searchDepth":197,"depth":197,"links":198},2,[199,200],{"id":86,"depth":197,"text":89},{"id":133,"depth":197,"text":136},"markdown","content:vuejs-emit-multiple-values-from-child-to-parent.md","content","vuejs-emit-multiple-values-from-child-to-parent.md","vuejs-emit-multiple-values-from-child-to-parent","md",1731652194217]