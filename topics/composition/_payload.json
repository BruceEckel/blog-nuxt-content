[{"data":1,"prerenderedAt":469},["ShallowReactive",2],{"post-/topics/composition":3},[4,301],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"category":15,"dropdown":16,"tags":17,"meta":22,"canonicalUrl":37,"topics":38,"created_at":41,"last_modified":42,"body":43,"_type":295,"_id":296,"_source":297,"_file":298,"_stem":299,"_extension":300},"/using-url-query-params-in-nuxt-3","",false,"Using URL Query Params in Nuxt 3","Use Nuxt3's useRoute function to use URL parameters to determine state.","post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2022-02-15","tutorials","NuxtJS",[18,19,20,21],"vue","Vite","Route","nuxt",[23,25,27,30,32,33,35],{"name":24,"content":8},"og:title",{"name":26,"content":9},"og:description",{"name":28,"content":29},"og:image","https://codybontecou.com/images/using-url-query-params-in-nuxt-3-meta.png",{"name":31,"content":8},"og:image:alt",{"name":24,"content":8},{"name":34,"content":8},"twitter:title",{"name":36,"content":8},"twitter:text:title","https://codybontecou.com/using-url-query-params-in-nuxt-3.html",[21,39,40],"vue-router","composition","2024-10-31T14:26","2024-12-12T11:10",{"type":44,"children":45,"toc":288},"root",[46,68,75,89,102,108,121,126,154,166,178,184,204,209,230,239,259,271,277],{"type":47,"tag":48,"props":49,"children":50},"element","blockquote",{},[51],{"type":47,"tag":52,"props":53,"children":54},"p",{},[55,58,66],{"type":56,"value":57},"text","This is a continuation of my previous ",{"type":47,"tag":59,"props":60,"children":64},"a",{"href":61,"rel":62},"https://codybontecou.com/silently-update-url-nuxt-3.html",[63],"nofollow",[65],{"type":56,"value":10},{"type":56,"value":67}," on how to set query parameters in Nuxt 3. We'll be continuing with the code written there so make sure you check it out.",{"type":47,"tag":69,"props":70,"children":72},"h2",{"id":71},"the-problem-were-solving",[73],{"type":56,"value":74},"The problem we're solving",{"type":47,"tag":52,"props":76,"children":77},{},[78,80,87],{"type":56,"value":79},"We left off with our URL looking like ",{"type":47,"tag":81,"props":82,"children":84},"code",{"className":83},[],[85],{"type":56,"value":86},"localhost:3000/test?streamer=faker",{"type":56,"value":88},". This is nice but contained a few cases that are less than ideal.",{"type":47,"tag":52,"props":90,"children":91},{},[92,94,100],{"type":56,"value":93},"Because the URL parameter is being updated using our input's v-model, if the page is refreshed, we lose that local state and the value stored in ",{"type":47,"tag":81,"props":95,"children":97},{"className":96},[],[98],{"type":56,"value":99},"twitchStreamer",{"type":56,"value":101},".",{"type":47,"tag":69,"props":103,"children":105},{"id":104},"using-useroute-in-nuxt",[106],{"type":56,"value":107},"Using useRoute in Nuxt",{"type":47,"tag":52,"props":109,"children":110},{},[111,113,119],{"type":56,"value":112},"NuxtJS relies on ",{"type":47,"tag":59,"props":114,"children":117},{"href":115,"rel":116},"https://router.vuejs.org/",[63],[118],{"type":56,"value":39},{"type":56,"value":120}," for most of its routing logic.",{"type":47,"tag":52,"props":122,"children":123},{},[124],{"type":56,"value":125},"In our example, we are using the Composition API, one of the new features built into Nuxt 3.",{"type":47,"tag":52,"props":127,"children":128},{},[129,131,137,139,145,147,152],{"type":56,"value":130},"In order to get our route, we use bring ",{"type":47,"tag":81,"props":132,"children":134},{"className":133},[],[135],{"type":56,"value":136},"useRoute()",{"type":56,"value":138}," into our ",{"type":47,"tag":81,"props":140,"children":142},{"className":141},[],[143],{"type":56,"value":144},"setup()",{"type":56,"value":146},". Nuxt 3 auto-imports ",{"type":47,"tag":81,"props":148,"children":150},{"className":149},[],[151],{"type":56,"value":136},{"type":56,"value":153}," so we can chose to be explicit or implicit.",{"type":47,"tag":155,"props":156,"children":161},"pre",{"className":157,"code":159,"language":160,"meta":6},[158],"language-js","setup() {\n  const route = useRoute()\n}\n","js",[162],{"type":47,"tag":81,"props":163,"children":164},{"__ignoreMap":6},[165],{"type":56,"value":159},{"type":47,"tag":52,"props":167,"children":168},{},[169,171,176],{"type":56,"value":170},"Having our route unlocks all of the benefits of ",{"type":47,"tag":81,"props":172,"children":174},{"className":173},[],[175],{"type":56,"value":39},{"type":56,"value":177},", including access to our query params!",{"type":47,"tag":69,"props":179,"children":181},{"id":180},"making-the-query-param-persist",[182],{"type":56,"value":183},"Making the query param persist",{"type":47,"tag":52,"props":185,"children":186},{},[187,189,195,197,203],{"type":56,"value":188},"With access to our route, we can check the query variable (what's after the = in ",{"type":47,"tag":81,"props":190,"children":192},{"className":191},[],[193],{"type":56,"value":194},"streamer=",{"type":56,"value":196},") using ",{"type":47,"tag":81,"props":198,"children":200},{"className":199},[],[201],{"type":56,"value":202},"route.query.streamer",{"type":56,"value":101},{"type":47,"tag":52,"props":205,"children":206},{},[207],{"type":56,"value":208},"Easy!",{"type":47,"tag":52,"props":210,"children":211},{},[212,214,221,223,228],{"type":56,"value":213},"I now use this logic alongside a ",{"type":47,"tag":59,"props":215,"children":218},{"href":216,"rel":217},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator",[63],[219],{"type":56,"value":220},"ternary operator",{"type":56,"value":222}," with the ",{"type":47,"tag":81,"props":224,"children":226},{"className":225},[],[227],{"type":56,"value":99},{"type":56,"value":229}," variable.",{"type":47,"tag":155,"props":231,"children":234},{"className":232,"code":233,"language":160,"meta":6},[158],"const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n",[235],{"type":47,"tag":81,"props":236,"children":237},{"__ignoreMap":6},[238],{"type":56,"value":233},{"type":47,"tag":52,"props":240,"children":241},{},[242,244,249,251,257],{"type":56,"value":243},"Now, every time the page is navigated to or refreshed, our ",{"type":47,"tag":81,"props":245,"children":247},{"className":246},[],[248],{"type":56,"value":99},{"type":56,"value":250}," will check if our ",{"type":47,"tag":81,"props":252,"children":254},{"className":253},[],[255],{"type":56,"value":256},"route",{"type":56,"value":258}," has a streamer query parameter.",{"type":47,"tag":52,"props":260,"children":261},{},[262,264,269],{"type":56,"value":263},"If it does, our ",{"type":47,"tag":81,"props":265,"children":267},{"className":266},[],[268],{"type":56,"value":99},{"type":56,"value":270}," will contain the parameter's value. Otherwise, it'll be an empty string.",{"type":47,"tag":69,"props":272,"children":274},{"id":273},"final-code-snippet",[275],{"type":56,"value":276},"Final code snippet",{"type":47,"tag":155,"props":278,"children":283},{"className":279,"code":281,"language":282,"meta":6},[280],"language-html","\u003C!-- pages/example.vue -->\n\u003Ctemplate>\n  \u003Cinput v-model=\"twitchStreamer\" />\n\u003C/template>\n\n\u003Cscript>\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n\n    watch(twitchStreamer, (twitchStreamer, previous) => {\n      router.push({\n        path: '/test',\n        query: { streamer: twitchStreamer },\n      })\n    })\n\n    return { twitchStreamer }\n\u003C/script>\n","html",[284],{"type":47,"tag":81,"props":285,"children":286},{"__ignoreMap":6},[287],{"type":56,"value":281},{"title":6,"searchDepth":289,"depth":289,"links":290},2,[291,292,293,294],{"id":71,"depth":289,"text":74},{"id":104,"depth":289,"text":107},{"id":180,"depth":289,"text":183},{"id":273,"depth":289,"text":276},"markdown","content:using-url-query-params-in-nuxt-3.md","content","using-url-query-params-in-nuxt-3.md","using-url-query-params-in-nuxt-3","md",{"_path":302,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":303,"description":304,"type":10,"author":305,"date":306,"category":15,"dropdown":307,"tags":308,"meta":311,"canonicalUrl":322,"newsletter":7,"topics":323,"created_at":41,"last_modified":42,"body":326,"_type":295,"_id":466,"_source":297,"_file":467,"_stem":468,"_extension":300},"/vuejs-emit-multiple-values-from-child-to-parent","VueJS Custom Event - Emit Multiple Values","Use a VueJS's custom event to emit multiple parameters between components.",{"name":12,"image":13},"2020-09-07","VueJS",[18,21,309,310],"Nuxt","Code",[312,313,314,316,318,320,321],{"name":24,"content":303},{"name":26,"content":304},{"name":28,"content":315},"https://codybontecou.com/images/vuejs-emit-multiple-params-meta.png",{"name":31,"content":317},"Emit Multiple Values from Child to Parent in a VueJS Custom Event with code snippet showcasing example provided in blog post.",{"name":24,"content":319},"Emit Multiple Values from Child to Parent in a VueJS Custom Event",{"name":34,"content":319},{"name":36,"content":319},"https://codybontecou.com/vuejs-emit-multiple-values-from-child-to-parent.html",[18,324,325,40],"events","components",{"type":44,"children":327,"toc":462},[328,336,350,355,361,370,375,397,403,430,443,452,457],{"type":47,"tag":48,"props":329,"children":330},{},[331],{"type":47,"tag":52,"props":332,"children":333},{},[334],{"type":56,"value":335},"VueJS custom events are a great way to communicate between child and parent components.",{"type":47,"tag":52,"props":337,"children":338},{},[339,341,348],{"type":56,"value":340},"I was recently was in need of a way to pass more than one value from child to parent within a single custom event. The ",{"type":47,"tag":59,"props":342,"children":345},{"href":343,"rel":344},"https://vuejs.org/v2/guide/components-custom-events.html",[63],[346],{"type":56,"value":347},"VueJS Docs",{"type":56,"value":349}," do not provide any example showcasing this and instead I needed to refer to some comments within a Stack Overflow thread.",{"type":47,"tag":52,"props":351,"children":352},{},[353],{"type":56,"value":354},"Here is what I found.",{"type":47,"tag":69,"props":356,"children":358},{"id":357},"to-emit-more-than-one-parameter-its-best-to-pass-the-data-as-an-object",[359],{"type":56,"value":360},"To emit more than one parameter, it's best to pass the data as an object:",{"type":47,"tag":155,"props":362,"children":365},{"className":363,"code":364,"language":160,"meta":6},[158],"this.$emit('success', {\n  username: 'CodyBontecou',\n  error: false,\n})\n",[366],{"type":47,"tag":81,"props":367,"children":368},{"__ignoreMap":6},[369],{"type":56,"value":364},{"type":47,"tag":52,"props":371,"children":372},{},[373],{"type":56,"value":374},"VueJS's custom events only accepts two parameters:",{"type":47,"tag":376,"props":377,"children":378},"ol",{},[379,392],{"type":47,"tag":380,"props":381,"children":382},"li",{},[383,385,391],{"type":56,"value":384},"The name of the event. In this case, the event name is ",{"type":47,"tag":81,"props":386,"children":388},{"className":387},[],[389],{"type":56,"value":390},"success",{"type":56,"value":101},{"type":47,"tag":380,"props":393,"children":394},{},[395],{"type":56,"value":396},"Data you want to pass. This can be a string, object, number, boolean, or function.",{"type":47,"tag":69,"props":398,"children":400},{"id":399},"access-the-parameters-from-the-parent-component-using-an-event-listener",[401],{"type":56,"value":402},"Access the parameters from the parent component using an event listener:",{"type":47,"tag":52,"props":404,"children":405},{},[406,408,413,415,421,423,429],{"type":56,"value":407},"We emitted the ",{"type":47,"tag":81,"props":409,"children":411},{"className":410},[],[412],{"type":56,"value":390},{"type":56,"value":414}," event from the child component. This event can be captured within the parent component where the child is rendered using the ",{"type":47,"tag":81,"props":416,"children":418},{"className":417},[],[419],{"type":56,"value":420},"@",{"type":56,"value":422}," sign, in this case, ",{"type":47,"tag":81,"props":424,"children":426},{"className":425},[],[427],{"type":56,"value":428},"@success",{"type":56,"value":101},{"type":47,"tag":376,"props":431,"children":432},{},[433,438],{"type":47,"tag":380,"props":434,"children":435},{},[436],{"type":56,"value":437},"@success calls the onSuccess method when success is emitted from the child component.",{"type":47,"tag":380,"props":439,"children":440},{},[441],{"type":56,"value":442},"The username and message params are destructured from the object passed into the success emit and are now usable within the onSuccuss function to do as you please.",{"type":47,"tag":155,"props":444,"children":447},{"className":445,"code":446,"language":160,"meta":6},[158],"\u003CLoginForm @success=\"onSuccess\" />\n\nmethods: {\n  onSuccess({ username, error }) {\n    ...\n  },\n}\n",[448],{"type":47,"tag":81,"props":449,"children":450},{"__ignoreMap":6},[451],{"type":56,"value":446},{"type":47,"tag":52,"props":453,"children":454},{},[455],{"type":56,"value":456},"It took me a little while to find the solution to this problem, so I figured it was best to document it within a blog post for others to benefit from.",{"type":47,"tag":52,"props":458,"children":459},{},[460],{"type":56,"value":461},"I hope it helped!",{"title":6,"searchDepth":289,"depth":289,"links":463},[464,465],{"id":357,"depth":289,"text":360},{"id":399,"depth":289,"text":402},"content:vuejs-emit-multiple-values-from-child-to-parent.md","vuejs-emit-multiple-values-from-child-to-parent.md","vuejs-emit-multiple-values-from-child-to-parent",1734028156126]