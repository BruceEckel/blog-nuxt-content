[{"data":1,"prerenderedAt":479},["ShallowReactive",2],{"post-/topics/composition":3},[4,306],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"category":15,"dropdown":16,"tags":17,"meta":23,"canonicalUrl":38,"topics":39,"body":42,"_type":301,"_id":302,"_source":303,"_file":304,"_stem":49,"_extension":305},"/using-url-query-params-in-nuxt-3","",false,"Using URL Query Params in Nuxt 3","Use Nuxt3's useRoute function to use URL parameters to determine state.","post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2022-02-15T00:00:00.000Z","tutorials","NuxtJS",[18,19,20,21,22],"vue","Vue","Vite","Route","nuxt",[24,26,28,31,33,34,36],{"name":25,"content":8},"og:title",{"name":27,"content":9},"og:description",{"name":29,"content":30},"og:image","https://codybontecou.com/images/using-url-query-params-in-nuxt-3-meta.png",{"name":32,"content":8},"og:image:alt",{"name":25,"content":8},{"name":35,"content":8},"twitter:title",{"name":37,"content":8},"twitter:text:title","https://codybontecou.com/using-url-query-params-in-nuxt-3.html",[22,40,41],"vue router","composition",{"type":43,"children":44,"toc":294},"root",[45,53,73,80,94,107,113,127,132,160,172,184,190,210,215,236,245,265,277,283],{"type":46,"tag":47,"props":48,"children":50},"element","h1",{"id":49},"using-url-query-params-in-nuxt-3",[51],{"type":52,"value":8},"text",{"type":46,"tag":54,"props":55,"children":56},"blockquote",{},[57],{"type":46,"tag":58,"props":59,"children":60},"p",{},[61,63,71],{"type":52,"value":62},"This is a continuation of my previous ",{"type":46,"tag":64,"props":65,"children":69},"a",{"href":66,"rel":67},"https://codybontecou.com/silently-update-url-nuxt-3.html",[68],"nofollow",[70],{"type":52,"value":10},{"type":52,"value":72}," on how to set query parameters in Nuxt 3. We'll be continuing with the code written there so make sure you check it out.",{"type":46,"tag":74,"props":75,"children":77},"h2",{"id":76},"the-problem-were-solving",[78],{"type":52,"value":79},"The problem we're solving",{"type":46,"tag":58,"props":81,"children":82},{},[83,85,92],{"type":52,"value":84},"We left off with our URL looking like ",{"type":46,"tag":86,"props":87,"children":89},"code",{"className":88},[],[90],{"type":52,"value":91},"localhost:3000/test?streamer=faker",{"type":52,"value":93},". This is nice but contained a few cases that are less than ideal.",{"type":46,"tag":58,"props":95,"children":96},{},[97,99,105],{"type":52,"value":98},"Because the URL parameter is being updated using our input's v-model, if the page is refreshed, we lose that local state and the value stored in ",{"type":46,"tag":86,"props":100,"children":102},{"className":101},[],[103],{"type":52,"value":104},"twitchStreamer",{"type":52,"value":106},".",{"type":46,"tag":74,"props":108,"children":110},{"id":109},"using-useroute-in-nuxt",[111],{"type":52,"value":112},"Using useRoute in Nuxt",{"type":46,"tag":58,"props":114,"children":115},{},[116,118,125],{"type":52,"value":117},"NuxtJS relies on ",{"type":46,"tag":64,"props":119,"children":122},{"href":120,"rel":121},"https://router.vuejs.org/",[68],[123],{"type":52,"value":124},"vue-router",{"type":52,"value":126}," for most of its routing logic.",{"type":46,"tag":58,"props":128,"children":129},{},[130],{"type":52,"value":131},"In our example, we are using the Composition API, one of the new features built into Nuxt 3.",{"type":46,"tag":58,"props":133,"children":134},{},[135,137,143,145,151,153,158],{"type":52,"value":136},"In order to get our route, we use bring ",{"type":46,"tag":86,"props":138,"children":140},{"className":139},[],[141],{"type":52,"value":142},"useRoute()",{"type":52,"value":144}," into our ",{"type":46,"tag":86,"props":146,"children":148},{"className":147},[],[149],{"type":52,"value":150},"setup()",{"type":52,"value":152},". Nuxt 3 auto-imports ",{"type":46,"tag":86,"props":154,"children":156},{"className":155},[],[157],{"type":52,"value":142},{"type":52,"value":159}," so we can chose to be explicit or implicit.",{"type":46,"tag":161,"props":162,"children":167},"pre",{"className":163,"code":165,"language":166,"meta":6},[164],"language-js","setup() {\n  const route = useRoute()\n}\n","js",[168],{"type":46,"tag":86,"props":169,"children":170},{"__ignoreMap":6},[171],{"type":52,"value":165},{"type":46,"tag":58,"props":173,"children":174},{},[175,177,182],{"type":52,"value":176},"Having our route unlocks all of the benefits of ",{"type":46,"tag":86,"props":178,"children":180},{"className":179},[],[181],{"type":52,"value":124},{"type":52,"value":183},", including access to our query params!",{"type":46,"tag":74,"props":185,"children":187},{"id":186},"making-the-query-param-persist",[188],{"type":52,"value":189},"Making the query param persist",{"type":46,"tag":58,"props":191,"children":192},{},[193,195,201,203,209],{"type":52,"value":194},"With access to our route, we can check the query variable (what's after the = in ",{"type":46,"tag":86,"props":196,"children":198},{"className":197},[],[199],{"type":52,"value":200},"streamer=",{"type":52,"value":202},") using ",{"type":46,"tag":86,"props":204,"children":206},{"className":205},[],[207],{"type":52,"value":208},"route.query.streamer",{"type":52,"value":106},{"type":46,"tag":58,"props":211,"children":212},{},[213],{"type":52,"value":214},"Easy!",{"type":46,"tag":58,"props":216,"children":217},{},[218,220,227,229,234],{"type":52,"value":219},"I now use this logic alongside a ",{"type":46,"tag":64,"props":221,"children":224},{"href":222,"rel":223},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator",[68],[225],{"type":52,"value":226},"ternary operator",{"type":52,"value":228}," with the ",{"type":46,"tag":86,"props":230,"children":232},{"className":231},[],[233],{"type":52,"value":104},{"type":52,"value":235}," variable.",{"type":46,"tag":161,"props":237,"children":240},{"className":238,"code":239,"language":166,"meta":6},[164],"const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n",[241],{"type":46,"tag":86,"props":242,"children":243},{"__ignoreMap":6},[244],{"type":52,"value":239},{"type":46,"tag":58,"props":246,"children":247},{},[248,250,255,257,263],{"type":52,"value":249},"Now, every time the page is navigated to or refreshed, our ",{"type":46,"tag":86,"props":251,"children":253},{"className":252},[],[254],{"type":52,"value":104},{"type":52,"value":256}," will check if our ",{"type":46,"tag":86,"props":258,"children":260},{"className":259},[],[261],{"type":52,"value":262},"route",{"type":52,"value":264}," has a streamer query parameter.",{"type":46,"tag":58,"props":266,"children":267},{},[268,270,275],{"type":52,"value":269},"If it does, our ",{"type":46,"tag":86,"props":271,"children":273},{"className":272},[],[274],{"type":52,"value":104},{"type":52,"value":276}," will contain the parameter's value. Otherwise, it'll be an empty string.",{"type":46,"tag":74,"props":278,"children":280},{"id":279},"final-code-snippet",[281],{"type":52,"value":282},"Final code snippet",{"type":46,"tag":161,"props":284,"children":289},{"className":285,"code":287,"language":288,"meta":6},[286],"language-html","\u003C!-- pages/example.vue -->\n\u003Ctemplate>\n  \u003Cinput v-model=\"twitchStreamer\" />\n\u003C/template>\n\n\u003Cscript>\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n\n    watch(twitchStreamer, (twitchStreamer, previous) => {\n      router.push({\n        path: '/test',\n        query: { streamer: twitchStreamer },\n      })\n    })\n\n    return { twitchStreamer }\n\u003C/script>\n","html",[290],{"type":46,"tag":86,"props":291,"children":292},{"__ignoreMap":6},[293],{"type":52,"value":287},{"title":6,"searchDepth":295,"depth":295,"links":296},2,[297,298,299,300],{"id":76,"depth":295,"text":79},{"id":109,"depth":295,"text":112},{"id":186,"depth":295,"text":189},{"id":279,"depth":295,"text":282},"markdown","content:using-url-query-params-in-nuxt-3.md","content","using-url-query-params-in-nuxt-3.md","md",{"_path":307,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":308,"description":309,"type":10,"author":310,"date":311,"category":15,"dropdown":312,"tags":313,"meta":316,"canonicalUrl":327,"newsletter":7,"topics":328,"body":331,"_type":301,"_id":476,"_source":303,"_file":477,"_stem":478,"_extension":305},"/vuejs-emit-multiple-values-from-child-to-parent","VueJS Custom Event - Emit Multiple Values","Use a VueJS's custom event to emit multiple parameters between components.",{"name":12,"image":13},"2020-09-07T00:00:00.000Z","VueJS",[18,19,22,314,315],"Nuxt","Code",[317,318,319,321,323,325,326],{"name":25,"content":308},{"name":27,"content":309},{"name":29,"content":320},"https://codybontecou.com/images/vuejs-emit-multiple-params-meta.png",{"name":32,"content":322},"Emit Multiple Values from Child to Parent in a VueJS Custom Event with code snippet showcasing example provided in blog post.",{"name":25,"content":324},"Emit Multiple Values from Child to Parent in a VueJS Custom Event",{"name":35,"content":324},{"name":37,"content":324},"https://codybontecou.com/vuejs-emit-multiple-values-from-child-to-parent.html",[18,329,330,41],"events","components",{"type":43,"children":332,"toc":472},[333,338,346,360,365,371,380,385,407,413,440,453,462,467],{"type":46,"tag":47,"props":334,"children":336},{"id":335},"emit-multiple-values-from-child-to-parent-in-a-vuejs-custom-event",[337],{"type":52,"value":324},{"type":46,"tag":54,"props":339,"children":340},{},[341],{"type":46,"tag":58,"props":342,"children":343},{},[344],{"type":52,"value":345},"VueJS custom events are a great way to communicate between child and parent components.",{"type":46,"tag":58,"props":347,"children":348},{},[349,351,358],{"type":52,"value":350},"I was recently was in need of a way to pass more than one value from child to parent within a single custom event. The ",{"type":46,"tag":64,"props":352,"children":355},{"href":353,"rel":354},"https://vuejs.org/v2/guide/components-custom-events.html",[68],[356],{"type":52,"value":357},"VueJS Docs",{"type":52,"value":359}," do not provide any example showcasing this and instead I needed to refer to some comments within a Stack Overflow thread.",{"type":46,"tag":58,"props":361,"children":362},{},[363],{"type":52,"value":364},"Here is what I found.",{"type":46,"tag":74,"props":366,"children":368},{"id":367},"to-emit-more-than-one-parameter-its-best-to-pass-the-data-as-an-object",[369],{"type":52,"value":370},"To emit more than one parameter, it's best to pass the data as an object:",{"type":46,"tag":161,"props":372,"children":375},{"className":373,"code":374,"language":166,"meta":6},[164],"this.$emit('success', {\n  username: 'CodyBontecou',\n  error: false,\n})\n",[376],{"type":46,"tag":86,"props":377,"children":378},{"__ignoreMap":6},[379],{"type":52,"value":374},{"type":46,"tag":58,"props":381,"children":382},{},[383],{"type":52,"value":384},"VueJS's custom events only accepts two parameters:",{"type":46,"tag":386,"props":387,"children":388},"ol",{},[389,402],{"type":46,"tag":390,"props":391,"children":392},"li",{},[393,395,401],{"type":52,"value":394},"The name of the event. In this case, the event name is ",{"type":46,"tag":86,"props":396,"children":398},{"className":397},[],[399],{"type":52,"value":400},"success",{"type":52,"value":106},{"type":46,"tag":390,"props":403,"children":404},{},[405],{"type":52,"value":406},"Data you want to pass. This can be a string, object, number, boolean, or function.",{"type":46,"tag":74,"props":408,"children":410},{"id":409},"access-the-parameters-from-the-parent-component-using-an-event-listener",[411],{"type":52,"value":412},"Access the parameters from the parent component using an event listener:",{"type":46,"tag":58,"props":414,"children":415},{},[416,418,423,425,431,433,439],{"type":52,"value":417},"We emitted the ",{"type":46,"tag":86,"props":419,"children":421},{"className":420},[],[422],{"type":52,"value":400},{"type":52,"value":424}," event from the child component. This event can be captured within the parent component where the child is rendered using the ",{"type":46,"tag":86,"props":426,"children":428},{"className":427},[],[429],{"type":52,"value":430},"@",{"type":52,"value":432}," sign, in this case, ",{"type":46,"tag":86,"props":434,"children":436},{"className":435},[],[437],{"type":52,"value":438},"@success",{"type":52,"value":106},{"type":46,"tag":386,"props":441,"children":442},{},[443,448],{"type":46,"tag":390,"props":444,"children":445},{},[446],{"type":52,"value":447},"@success calls the onSuccess method when success is emitted from the child component.",{"type":46,"tag":390,"props":449,"children":450},{},[451],{"type":52,"value":452},"The username and message params are destructured from the object passed into the success emit and are now usable within the onSuccuss function to do as you please.",{"type":46,"tag":161,"props":454,"children":457},{"className":455,"code":456,"language":166,"meta":6},[164],"\u003CLoginForm @success=\"onSuccess\" />\n\nmethods: {\n  onSuccess({ username, error }) {\n    ...\n  },\n}\n",[458],{"type":46,"tag":86,"props":459,"children":460},{"__ignoreMap":6},[461],{"type":52,"value":456},{"type":46,"tag":58,"props":463,"children":464},{},[465],{"type":52,"value":466},"It took me a little while to find the solution to this problem, so I figured it was best to document it within a blog post for others to benefit from.",{"type":46,"tag":58,"props":468,"children":469},{},[470],{"type":52,"value":471},"I hope it helped!",{"title":6,"searchDepth":295,"depth":295,"links":473},[474,475],{"id":367,"depth":295,"text":370},{"id":409,"depth":295,"text":412},"content:vuejs-emit-multiple-values-from-child-to-parent.md","vuejs-emit-multiple-values-from-child-to-parent.md","vuejs-emit-multiple-values-from-child-to-parent",1731043215299]