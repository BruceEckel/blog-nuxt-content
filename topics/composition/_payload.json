[{"data":1,"prerenderedAt":471},["ShallowReactive",2],{"post-/topics/composition":3},[4,303],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"category":15,"dropdown":16,"tags":17,"meta":23,"canonicalUrl":38,"topics":39,"created_at":42,"last_modified":43,"body":44,"_type":297,"_id":298,"_source":299,"_file":300,"_stem":301,"_extension":302},"/using-url-query-params-in-nuxt-3","",false,"Using URL Query Params in Nuxt 3","Use Nuxt3's useRoute function to use URL parameters to determine state.","post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2022-02-15T00:00:00.000Z","tutorials","NuxtJS",[18,19,20,21,22],"vue","Vue","Vite","Route","nuxt",[24,26,28,31,33,34,36],{"name":25,"content":8},"og:title",{"name":27,"content":9},"og:description",{"name":29,"content":30},"og:image","https://codybontecou.com/images/using-url-query-params-in-nuxt-3-meta.png",{"name":32,"content":8},"og:image:alt",{"name":25,"content":8},{"name":35,"content":8},"twitter:title",{"name":37,"content":8},"twitter:text:title","https://codybontecou.com/using-url-query-params-in-nuxt-3.html",[22,40,41],"vue router","composition","2024-10-31T14:26","2024-11-09T21:19",{"type":45,"children":46,"toc":290},"root",[47,69,76,90,103,109,123,128,156,168,180,186,206,211,232,241,261,273,279],{"type":48,"tag":49,"props":50,"children":51},"element","blockquote",{},[52],{"type":48,"tag":53,"props":54,"children":55},"p",{},[56,59,67],{"type":57,"value":58},"text","This is a continuation of my previous ",{"type":48,"tag":60,"props":61,"children":65},"a",{"href":62,"rel":63},"https://codybontecou.com/silently-update-url-nuxt-3.html",[64],"nofollow",[66],{"type":57,"value":10},{"type":57,"value":68}," on how to set query parameters in Nuxt 3. We'll be continuing with the code written there so make sure you check it out.",{"type":48,"tag":70,"props":71,"children":73},"h2",{"id":72},"the-problem-were-solving",[74],{"type":57,"value":75},"The problem we're solving",{"type":48,"tag":53,"props":77,"children":78},{},[79,81,88],{"type":57,"value":80},"We left off with our URL looking like ",{"type":48,"tag":82,"props":83,"children":85},"code",{"className":84},[],[86],{"type":57,"value":87},"localhost:3000/test?streamer=faker",{"type":57,"value":89},". This is nice but contained a few cases that are less than ideal.",{"type":48,"tag":53,"props":91,"children":92},{},[93,95,101],{"type":57,"value":94},"Because the URL parameter is being updated using our input's v-model, if the page is refreshed, we lose that local state and the value stored in ",{"type":48,"tag":82,"props":96,"children":98},{"className":97},[],[99],{"type":57,"value":100},"twitchStreamer",{"type":57,"value":102},".",{"type":48,"tag":70,"props":104,"children":106},{"id":105},"using-useroute-in-nuxt",[107],{"type":57,"value":108},"Using useRoute in Nuxt",{"type":48,"tag":53,"props":110,"children":111},{},[112,114,121],{"type":57,"value":113},"NuxtJS relies on ",{"type":48,"tag":60,"props":115,"children":118},{"href":116,"rel":117},"https://router.vuejs.org/",[64],[119],{"type":57,"value":120},"vue-router",{"type":57,"value":122}," for most of its routing logic.",{"type":48,"tag":53,"props":124,"children":125},{},[126],{"type":57,"value":127},"In our example, we are using the Composition API, one of the new features built into Nuxt 3.",{"type":48,"tag":53,"props":129,"children":130},{},[131,133,139,141,147,149,154],{"type":57,"value":132},"In order to get our route, we use bring ",{"type":48,"tag":82,"props":134,"children":136},{"className":135},[],[137],{"type":57,"value":138},"useRoute()",{"type":57,"value":140}," into our ",{"type":48,"tag":82,"props":142,"children":144},{"className":143},[],[145],{"type":57,"value":146},"setup()",{"type":57,"value":148},". Nuxt 3 auto-imports ",{"type":48,"tag":82,"props":150,"children":152},{"className":151},[],[153],{"type":57,"value":138},{"type":57,"value":155}," so we can chose to be explicit or implicit.",{"type":48,"tag":157,"props":158,"children":163},"pre",{"className":159,"code":161,"language":162,"meta":6},[160],"language-js","setup() {\n  const route = useRoute()\n}\n","js",[164],{"type":48,"tag":82,"props":165,"children":166},{"__ignoreMap":6},[167],{"type":57,"value":161},{"type":48,"tag":53,"props":169,"children":170},{},[171,173,178],{"type":57,"value":172},"Having our route unlocks all of the benefits of ",{"type":48,"tag":82,"props":174,"children":176},{"className":175},[],[177],{"type":57,"value":120},{"type":57,"value":179},", including access to our query params!",{"type":48,"tag":70,"props":181,"children":183},{"id":182},"making-the-query-param-persist",[184],{"type":57,"value":185},"Making the query param persist",{"type":48,"tag":53,"props":187,"children":188},{},[189,191,197,199,205],{"type":57,"value":190},"With access to our route, we can check the query variable (what's after the = in ",{"type":48,"tag":82,"props":192,"children":194},{"className":193},[],[195],{"type":57,"value":196},"streamer=",{"type":57,"value":198},") using ",{"type":48,"tag":82,"props":200,"children":202},{"className":201},[],[203],{"type":57,"value":204},"route.query.streamer",{"type":57,"value":102},{"type":48,"tag":53,"props":207,"children":208},{},[209],{"type":57,"value":210},"Easy!",{"type":48,"tag":53,"props":212,"children":213},{},[214,216,223,225,230],{"type":57,"value":215},"I now use this logic alongside a ",{"type":48,"tag":60,"props":217,"children":220},{"href":218,"rel":219},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator",[64],[221],{"type":57,"value":222},"ternary operator",{"type":57,"value":224}," with the ",{"type":48,"tag":82,"props":226,"children":228},{"className":227},[],[229],{"type":57,"value":100},{"type":57,"value":231}," variable.",{"type":48,"tag":157,"props":233,"children":236},{"className":234,"code":235,"language":162,"meta":6},[160],"const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n",[237],{"type":48,"tag":82,"props":238,"children":239},{"__ignoreMap":6},[240],{"type":57,"value":235},{"type":48,"tag":53,"props":242,"children":243},{},[244,246,251,253,259],{"type":57,"value":245},"Now, every time the page is navigated to or refreshed, our ",{"type":48,"tag":82,"props":247,"children":249},{"className":248},[],[250],{"type":57,"value":100},{"type":57,"value":252}," will check if our ",{"type":48,"tag":82,"props":254,"children":256},{"className":255},[],[257],{"type":57,"value":258},"route",{"type":57,"value":260}," has a streamer query parameter.",{"type":48,"tag":53,"props":262,"children":263},{},[264,266,271],{"type":57,"value":265},"If it does, our ",{"type":48,"tag":82,"props":267,"children":269},{"className":268},[],[270],{"type":57,"value":100},{"type":57,"value":272}," will contain the parameter's value. Otherwise, it'll be an empty string.",{"type":48,"tag":70,"props":274,"children":276},{"id":275},"final-code-snippet",[277],{"type":57,"value":278},"Final code snippet",{"type":48,"tag":157,"props":280,"children":285},{"className":281,"code":283,"language":284,"meta":6},[282],"language-html","\u003C!-- pages/example.vue -->\n\u003Ctemplate>\n  \u003Cinput v-model=\"twitchStreamer\" />\n\u003C/template>\n\n\u003Cscript>\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n\n    watch(twitchStreamer, (twitchStreamer, previous) => {\n      router.push({\n        path: '/test',\n        query: { streamer: twitchStreamer },\n      })\n    })\n\n    return { twitchStreamer }\n\u003C/script>\n","html",[286],{"type":48,"tag":82,"props":287,"children":288},{"__ignoreMap":6},[289],{"type":57,"value":283},{"title":6,"searchDepth":291,"depth":291,"links":292},2,[293,294,295,296],{"id":72,"depth":291,"text":75},{"id":105,"depth":291,"text":108},{"id":182,"depth":291,"text":185},{"id":275,"depth":291,"text":278},"markdown","content:using-url-query-params-in-nuxt-3.md","content","using-url-query-params-in-nuxt-3.md","using-url-query-params-in-nuxt-3","md",{"_path":304,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":305,"description":306,"type":10,"author":307,"date":308,"category":15,"dropdown":309,"tags":310,"meta":313,"canonicalUrl":324,"newsletter":7,"topics":325,"created_at":42,"last_modified":43,"body":328,"_type":297,"_id":468,"_source":299,"_file":469,"_stem":470,"_extension":302},"/vuejs-emit-multiple-values-from-child-to-parent","VueJS Custom Event - Emit Multiple Values","Use a VueJS's custom event to emit multiple parameters between components.",{"name":12,"image":13},"2020-09-07T00:00:00.000Z","VueJS",[18,19,22,311,312],"Nuxt","Code",[314,315,316,318,320,322,323],{"name":25,"content":305},{"name":27,"content":306},{"name":29,"content":317},"https://codybontecou.com/images/vuejs-emit-multiple-params-meta.png",{"name":32,"content":319},"Emit Multiple Values from Child to Parent in a VueJS Custom Event with code snippet showcasing example provided in blog post.",{"name":25,"content":321},"Emit Multiple Values from Child to Parent in a VueJS Custom Event",{"name":35,"content":321},{"name":37,"content":321},"https://codybontecou.com/vuejs-emit-multiple-values-from-child-to-parent.html",[18,326,327,41],"events","components",{"type":45,"children":329,"toc":464},[330,338,352,357,363,372,377,399,405,432,445,454,459],{"type":48,"tag":49,"props":331,"children":332},{},[333],{"type":48,"tag":53,"props":334,"children":335},{},[336],{"type":57,"value":337},"VueJS custom events are a great way to communicate between child and parent components.",{"type":48,"tag":53,"props":339,"children":340},{},[341,343,350],{"type":57,"value":342},"I was recently was in need of a way to pass more than one value from child to parent within a single custom event. The ",{"type":48,"tag":60,"props":344,"children":347},{"href":345,"rel":346},"https://vuejs.org/v2/guide/components-custom-events.html",[64],[348],{"type":57,"value":349},"VueJS Docs",{"type":57,"value":351}," do not provide any example showcasing this and instead I needed to refer to some comments within a Stack Overflow thread.",{"type":48,"tag":53,"props":353,"children":354},{},[355],{"type":57,"value":356},"Here is what I found.",{"type":48,"tag":70,"props":358,"children":360},{"id":359},"to-emit-more-than-one-parameter-its-best-to-pass-the-data-as-an-object",[361],{"type":57,"value":362},"To emit more than one parameter, it's best to pass the data as an object:",{"type":48,"tag":157,"props":364,"children":367},{"className":365,"code":366,"language":162,"meta":6},[160],"this.$emit('success', {\n  username: 'CodyBontecou',\n  error: false,\n})\n",[368],{"type":48,"tag":82,"props":369,"children":370},{"__ignoreMap":6},[371],{"type":57,"value":366},{"type":48,"tag":53,"props":373,"children":374},{},[375],{"type":57,"value":376},"VueJS's custom events only accepts two parameters:",{"type":48,"tag":378,"props":379,"children":380},"ol",{},[381,394],{"type":48,"tag":382,"props":383,"children":384},"li",{},[385,387,393],{"type":57,"value":386},"The name of the event. In this case, the event name is ",{"type":48,"tag":82,"props":388,"children":390},{"className":389},[],[391],{"type":57,"value":392},"success",{"type":57,"value":102},{"type":48,"tag":382,"props":395,"children":396},{},[397],{"type":57,"value":398},"Data you want to pass. This can be a string, object, number, boolean, or function.",{"type":48,"tag":70,"props":400,"children":402},{"id":401},"access-the-parameters-from-the-parent-component-using-an-event-listener",[403],{"type":57,"value":404},"Access the parameters from the parent component using an event listener:",{"type":48,"tag":53,"props":406,"children":407},{},[408,410,415,417,423,425,431],{"type":57,"value":409},"We emitted the ",{"type":48,"tag":82,"props":411,"children":413},{"className":412},[],[414],{"type":57,"value":392},{"type":57,"value":416}," event from the child component. This event can be captured within the parent component where the child is rendered using the ",{"type":48,"tag":82,"props":418,"children":420},{"className":419},[],[421],{"type":57,"value":422},"@",{"type":57,"value":424}," sign, in this case, ",{"type":48,"tag":82,"props":426,"children":428},{"className":427},[],[429],{"type":57,"value":430},"@success",{"type":57,"value":102},{"type":48,"tag":378,"props":433,"children":434},{},[435,440],{"type":48,"tag":382,"props":436,"children":437},{},[438],{"type":57,"value":439},"@success calls the onSuccess method when success is emitted from the child component.",{"type":48,"tag":382,"props":441,"children":442},{},[443],{"type":57,"value":444},"The username and message params are destructured from the object passed into the success emit and are now usable within the onSuccuss function to do as you please.",{"type":48,"tag":157,"props":446,"children":449},{"className":447,"code":448,"language":162,"meta":6},[160],"\u003CLoginForm @success=\"onSuccess\" />\n\nmethods: {\n  onSuccess({ username, error }) {\n    ...\n  },\n}\n",[450],{"type":48,"tag":82,"props":451,"children":452},{"__ignoreMap":6},[453],{"type":57,"value":448},{"type":48,"tag":53,"props":455,"children":456},{},[457],{"type":57,"value":458},"It took me a little while to find the solution to this problem, so I figured it was best to document it within a blog post for others to benefit from.",{"type":48,"tag":53,"props":460,"children":461},{},[462],{"type":57,"value":463},"I hope it helped!",{"title":6,"searchDepth":291,"depth":291,"links":465},[466,467],{"id":359,"depth":291,"text":362},{"id":401,"depth":291,"text":404},"content:vuejs-emit-multiple-values-from-child-to-parent.md","vuejs-emit-multiple-values-from-child-to-parent.md","vuejs-emit-multiple-values-from-child-to-parent",1731603789140]