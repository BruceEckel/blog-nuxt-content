[{"data":1,"prerenderedAt":1708},["ShallowReactive",2],{"post-/topics/nodejs":3},[4,619,994],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"author":10,"date":13,"dropdown":14,"meta":15,"type":30,"canonicalUrl":31,"topics":32,"created_at":36,"last_modified":37,"body":38,"_type":613,"_id":614,"_source":615,"_file":616,"_stem":617,"_extension":618},"/post-to-reddit-with-nodejs-and-typescript","",false,"Post to Reddit using its API","Interacting with Reddit through their API. In this post I discuss how to use snoowrap to post to Reddit and specific subreddits.",{"name":11,"image":12},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2020-07-18","NodeJS",[16,18,20,23,26,28],{"name":17,"content":8},"og:title",{"name":19,"content":9},"og:description",{"name":21,"content":22},"og:image","https://codybontecou.com/images/typescript-with-reddit-meta.png",{"name":24,"content":25},"og:image:alt","Illustration of a man with a baret waving his hands with Reddit and Typescript logos above him",{"name":27,"content":8},"twitter:title",{"name":29,"content":8},"twitter:text:title","post","https://codybontecou.com/post-to-reddit-with-nodejs-and-typescript",[33,34,35],"nodejs","typescript","reddit","2024-10-31T14:26","2024-11-09T21:19",{"type":39,"children":40,"toc":603},"root",[41,72,79,84,105,126,135,141,153,170,187,209,221,228,281,287,308,320,331,344,354,360,374,383,392,401,427,436,443,452,464,473,500,519,528,533,542,554,567,573,578,587,591],{"type":42,"tag":43,"props":44,"children":45},"element","blockquote",{},[46],{"type":42,"tag":47,"props":48,"children":49},"p",{},[50,53,59,61,70],{"type":51,"value":52},"text","This post is for ",{"type":42,"tag":54,"props":55,"children":56},"strong",{},[57],{"type":51,"value":58},"day 2",{"type":51,"value":60}," of my ",{"type":42,"tag":62,"props":63,"children":67},"a",{"href":64,"rel":65},"https://twitter.com/hashtag/100DaysOfCode?src=hashtag_click",[66],"nofollow",[68],{"type":51,"value":69},"#100DaysOfCode",{"type":51,"value":71},". In this post I'll be discussing how to programmatically post to Reddit using NodeJS and Typescript.",{"type":42,"tag":73,"props":74,"children":76},"h2",{"id":75},"getting-authenticated",[77],{"type":51,"value":78},"Getting Authenticated",{"type":42,"tag":47,"props":80,"children":81},{},[82],{"type":51,"value":83},"Getting an authentication token for Reddit is complicated.",{"type":42,"tag":47,"props":85,"children":86},{},[87,89,94,96,103],{"type":51,"value":88},"If you have a ",{"type":42,"tag":54,"props":90,"children":91},{},[92],{"type":51,"value":93},"business",{"type":51,"value":95}," and plan on this token generating income, follow ",{"type":42,"tag":62,"props":97,"children":100},{"href":98,"rel":99},"https://docs.google.com/forms/d/e/1FAIpQLSezNdDNK1-P8mspSbmtC2r86Ee9ZRbC66u929cG2GX0T9UMyw/viewform",[66],[101],{"type":51,"value":102},"this form",{"type":51,"value":104},".",{"type":42,"tag":47,"props":106,"children":107},{},[108,110,115,117,124],{"type":51,"value":109},"For ",{"type":42,"tag":54,"props":111,"children":112},{},[113],{"type":51,"value":114},"personal",{"type":51,"value":116}," use, navigate to your Reddit ",{"type":42,"tag":62,"props":118,"children":121},{"href":119,"rel":120},"https://www.reddit.com/prefs/apps",[66],[122],{"type":51,"value":123},"apps",{"type":51,"value":125}," and scroll to the bottom of the page. You should see a grey button that says \"create another app...\". Click the button and fill out the form. Successfully submitting this form should generate",{"type":42,"tag":47,"props":127,"children":128},{},[129],{"type":42,"tag":130,"props":131,"children":134},"img",{"alt":132,"src":133},"Reddit developer application information. Includes your client ID and client Secret needed for API calls","https://codybontecou.com/images/reddit-developer-app-info.png",[],{"type":42,"tag":73,"props":136,"children":138},{"id":137},"laying-the-foundations-of-your-app",[139],{"type":51,"value":140},"Laying the Foundations of Your App",{"type":42,"tag":47,"props":142,"children":143},{},[144,151],{"type":42,"tag":62,"props":145,"children":148},{"href":146,"rel":147},"https://github.com/CodyBontecou/post-to-reddit-with-typescript",[66],[149],{"type":51,"value":150},"Github Repo",{"type":51,"value":152}," to follow along",{"type":42,"tag":47,"props":154,"children":155},{},[156],{"type":42,"tag":157,"props":158,"children":159},"em",{},[160,162,168],{"type":51,"value":161},"Make sure you have ",{"type":42,"tag":62,"props":163,"children":166},{"href":164,"rel":165},"https://nodejs.org/en/",[66],[167],{"type":51,"value":14},{"type":51,"value":169}," installed",{"type":42,"tag":47,"props":171,"children":172},{},[173],{"type":42,"tag":157,"props":174,"children":175},{},[176,178,185],{"type":51,"value":177},"I prefer ",{"type":42,"tag":62,"props":179,"children":182},{"href":180,"rel":181},"https://yarnpkg.com/",[66],[183],{"type":51,"value":184},"yarn",{"type":51,"value":186},", but you can use npm instead if you prefer",{"type":42,"tag":47,"props":188,"children":189},{},[190,192,199,201,207],{"type":51,"value":191},"Copy this ",{"type":42,"tag":193,"props":194,"children":196},"code",{"className":195},[],[197],{"type":51,"value":198},"package.json",{"type":51,"value":200}," file and run ",{"type":42,"tag":193,"props":202,"children":204},{"className":203},[],[205],{"type":51,"value":206},"yarn install",{"type":51,"value":208}," to install the dependencies.",{"type":42,"tag":210,"props":211,"children":216},"pre",{"className":212,"code":214,"language":215,"meta":6},[213],"language-json","{\n  \"name\": \"reddit-post\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"dev\": \"ts-node index.ts\"\n  },\n  \"devDependencies\": {\n    \"ts-node\": \"^10.1.0\",\n    \"typescript\": \"^4.3.5\"\n  },\n  \"dependencies\": {\n    \"dotenv\": \"^10.0.0\",\n    \"snoowrap\": \"^1.23.0\"\n  }\n}\n","json",[217],{"type":42,"tag":193,"props":218,"children":219},{"__ignoreMap":6},[220],{"type":51,"value":214},{"type":42,"tag":222,"props":223,"children":225},"h3",{"id":224},"packages-explained",[226],{"type":51,"value":227},"Packages explained:",{"type":42,"tag":229,"props":230,"children":231},"ul",{},[232,245,257,269],{"type":42,"tag":233,"props":234,"children":235},"li",{},[236,243],{"type":42,"tag":62,"props":237,"children":240},{"href":238,"rel":239},"https://github.com/TypeStrong/ts-node",[66],[241],{"type":51,"value":242},"ts-node",{"type":51,"value":244}," is a handy tool for executing Typescript files without having to first compile to Javascript.",{"type":42,"tag":233,"props":246,"children":247},{},[248,255],{"type":42,"tag":62,"props":249,"children":252},{"href":250,"rel":251},"https://www.typescriptlang.org/",[66],[253],{"type":51,"value":254},"Typescript",{"type":51,"value":256}," superset of Javascript. I'm simply using it to try to become more comfortable with it in day-to-day projects.",{"type":42,"tag":233,"props":258,"children":259},{},[260,267],{"type":42,"tag":62,"props":261,"children":264},{"href":262,"rel":263},"https://github.com/motdotla/dotenv#readme",[66],[265],{"type":51,"value":266},"dotenv",{"type":51,"value":268}," to safely manage .env variables and your auth tokens.",{"type":42,"tag":233,"props":270,"children":271},{},[272,279],{"type":42,"tag":62,"props":273,"children":276},{"href":274,"rel":275},"https://github.com/not-an-aardvark/snoowrap",[66],[277],{"type":51,"value":278},"snoowrap",{"type":51,"value":280}," provides a simple interface to access every reddit API endpoint.",{"type":42,"tag":222,"props":282,"children":284},{"id":283},"create-a-env-file",[285],{"type":51,"value":286},"Create a .env file",{"type":42,"tag":47,"props":288,"children":289},{},[290,292,298,300,306],{"type":51,"value":291},".env files are used as a best practice to keep secret keys (such as our authentication tokens) off of GitHub. Make sure to have a ",{"type":42,"tag":193,"props":293,"children":295},{"className":294},[],[296],{"type":51,"value":297},".gitignore",{"type":51,"value":299}," file and add ",{"type":42,"tag":193,"props":301,"children":303},{"className":302},[],[304],{"type":51,"value":305},".env",{"type":51,"value":307}," to it.",{"type":42,"tag":47,"props":309,"children":310},{},[311,313,318],{"type":51,"value":312},"The ",{"type":42,"tag":193,"props":314,"children":316},{"className":315},[],[317],{"type":51,"value":305},{"type":51,"value":319}," file should look like this:",{"type":42,"tag":210,"props":321,"children":326},{"className":322,"code":324,"language":325,"meta":6},[323],"language-js","username = '\u003CREDDIT USERNAME>'\npassword = '\u003CREDDIT PASSWORD>'\nclientId = 'CLIENT_ID'\nclientSecret = 'CLIENT SECRET'\n","js",[327],{"type":42,"tag":193,"props":328,"children":329},{"__ignoreMap":6},[330],{"type":51,"value":324},{"type":42,"tag":47,"props":332,"children":333},{},[334,336,342],{"type":51,"value":335},"Just make sure you replace the ",{"type":42,"tag":193,"props":337,"children":339},{"className":338},[],[340],{"type":51,"value":341},"\u003C>",{"type":51,"value":343}," text with the tokens Twitter provided you.",{"type":42,"tag":47,"props":345,"children":346},{},[347,352],{"type":42,"tag":54,"props":348,"children":349},{},[350],{"type":51,"value":351},"Make sure you do not commit your .env file to Github or any other version control systems.",{"type":51,"value":353}," These tokens are very important, and should not be shared with anyone!",{"type":42,"tag":73,"props":355,"children":357},{"id":356},"performing-the-post-request",[358],{"type":51,"value":359},"Performing the POST request",{"type":42,"tag":361,"props":362,"children":363},"ol",{},[364,369],{"type":42,"tag":233,"props":365,"children":366},{},[367],{"type":51,"value":368},"Create an index.ts file in your project root",{"type":42,"tag":233,"props":370,"children":371},{},[372],{"type":51,"value":373},"Import the packages you installed earlier",{"type":42,"tag":210,"props":375,"children":378},{"className":376,"code":377,"language":325,"meta":6},[323],"const snoowrap = require('snoowrap')\nrequire('dotenv').config()\n",[379],{"type":42,"tag":193,"props":380,"children":381},{"__ignoreMap":6},[382],{"type":51,"value":377},{"type":42,"tag":361,"props":384,"children":386},{"start":385},3,[387],{"type":42,"tag":233,"props":388,"children":389},{},[390],{"type":51,"value":391},"Create config object to organize your Reddit configuration variables",{"type":42,"tag":210,"props":393,"children":396},{"className":394,"code":395,"language":325,"meta":6},[323],"const config = {\n  username: process.env.username,\n  password: process.env.password,\n  clientId: process.env.clientId,\n  clientSecret: process.env.clientSecret,\n}\n",[397],{"type":42,"tag":193,"props":398,"children":399},{"__ignoreMap":6},[400],{"type":51,"value":395},{"type":42,"tag":361,"props":402,"children":404},{"start":403},4,[405],{"type":42,"tag":233,"props":406,"children":407},{},[408,410,417,419,425],{"type":51,"value":409},"Create a function that sends out a POST request to ",{"type":42,"tag":62,"props":411,"children":414},{"href":412,"rel":413},"https://www.reddit.com/dev/api#POST_api_submit",[66],[415],{"type":51,"value":416},"Reddit's endpoint",{"type":51,"value":418}," ",{"type":42,"tag":193,"props":420,"children":422},{"className":421},[],[423],{"type":51,"value":424},"/api/submit",{"type":51,"value":426}," with the title, link, and subreddit parameters.",{"type":42,"tag":210,"props":428,"children":431},{"className":429,"code":430,"language":325,"meta":6},[323],"function postLink(title: string, link: string, subreddit: string) {\n  const r = new snoowrap({\n    userAgent: 'Whatever',\n    clientId: config.clientId,\n    clientSecret: config.clientSecret,\n    username: config.username,\n    password: config.password,\n  })\n  r.getSubreddit(subreddit).submitLink({\n    title: title,\n    url: link,\n    sendReplies: true,\n  })\n}\n",[432],{"type":42,"tag":193,"props":433,"children":434},{"__ignoreMap":6},[435],{"type":51,"value":430},{"type":42,"tag":437,"props":438,"children":440},"h4",{"id":439},"explained",[441],{"type":51,"value":442},"Explained:",{"type":42,"tag":210,"props":444,"children":447},{"className":445,"code":446,"language":325,"meta":6},[323],"const r = new snoowrap({\n  userAgent: 'Whatever',\n  clientId: config.clientId,\n  clientSecret: config.clientSecret,\n  username: config.username,\n  password: config.password,\n})\n",[448],{"type":42,"tag":193,"props":449,"children":450},{"__ignoreMap":6},[451],{"type":51,"value":446},{"type":42,"tag":47,"props":453,"children":454},{},[455,457,462],{"type":51,"value":456},"This snippet of code is creating a new ",{"type":42,"tag":193,"props":458,"children":460},{"className":459},[],[461],{"type":51,"value":278},{"type":51,"value":463}," instance that connects to the Reddit service.",{"type":42,"tag":210,"props":465,"children":468},{"className":466,"code":467,"language":325,"meta":6},[323],"r.getSubreddit(subreddit).submitLink({\n  title: title,\n  url: link,\n  sendReplies: true,\n})\n",[469],{"type":42,"tag":193,"props":470,"children":471},{"__ignoreMap":6},[472],{"type":51,"value":467},{"type":42,"tag":47,"props":474,"children":475},{},[476,482,484,490,492,499],{"type":42,"tag":193,"props":477,"children":479},{"className":478},[],[480],{"type":51,"value":481},"getSubreddit",{"type":51,"value":483},": Generates a ",{"type":42,"tag":193,"props":485,"children":487},{"className":486},[],[488],{"type":51,"value":489},"Subreddit",{"type":51,"value":491}," object. You can read more about this object ",{"type":42,"tag":62,"props":493,"children":496},{"href":494,"rel":495},"https://not-an-aardvark.github.io/snoowrap/Subreddit.html",[66],[497],{"type":51,"value":498},"here",{"type":51,"value":104},{"type":42,"tag":47,"props":501,"children":502},{},[503,509,511,517],{"type":42,"tag":193,"props":504,"children":506},{"className":505},[],[507],{"type":51,"value":508},"submitLink",{"type":51,"value":510},": Creates a new link submission on this subreddit with the title provided, url of the link, and any other options that the snoowrap api allows, such as the ",{"type":42,"tag":193,"props":512,"children":514},{"className":513},[],[515],{"type":51,"value":516},"sendReplies",{"type":51,"value":518}," option that allows replies to the post to send replies to the authenticated user's inbox.",{"type":42,"tag":361,"props":520,"children":522},{"start":521},5,[523],{"type":42,"tag":233,"props":524,"children":525},{},[526],{"type":51,"value":527},"Make the request",{"type":42,"tag":47,"props":529,"children":530},{},[531],{"type":51,"value":532},"Now add",{"type":42,"tag":210,"props":534,"children":537},{"className":535,"code":536,"language":325,"meta":6},[323],"postLink(\n  'Post to Reddit with NodeJS and Typescript',\n  'https://codybontecou.com/post-to-reddit-with-nodejs-and-typescript.html',\n  'webdev'\n)\n",[538],{"type":42,"tag":193,"props":539,"children":540},{"__ignoreMap":6},[541],{"type":51,"value":536},{"type":42,"tag":47,"props":543,"children":544},{},[545,547,553],{"type":51,"value":546},"with the parameters you want to use at the bottom of ",{"type":42,"tag":193,"props":548,"children":550},{"className":549},[],[551],{"type":51,"value":552},"index.ts",{"type":51,"value":104},{"type":42,"tag":47,"props":555,"children":556},{},[557,559,565],{"type":51,"value":558},"Once you are ready, type ",{"type":42,"tag":193,"props":560,"children":562},{"className":561},[],[563],{"type":51,"value":564},"yarn dev",{"type":51,"value":566}," into your projects terminal. If all is good, you should be able to see your post is now on Reddit!",{"type":42,"tag":73,"props":568,"children":570},{"id":569},"bonus",[571],{"type":51,"value":572},"Bonus",{"type":42,"tag":47,"props":574,"children":575},{},[576],{"type":51,"value":577},"Make this more dynamic by iterating over multiple subreddits within an array:",{"type":42,"tag":210,"props":579,"children":582},{"className":580,"code":581,"language":325,"meta":6},[323],"const url =\n  'https://codybontecou.com/post-to-reddit-with-nodejs-and-typescript.html'\nconst title = 'Post to Reddit using its API'\nconst subreddits = ['webdev', 'learnjavascript', 'typescript', 'programming']\n\nsubreddits.forEach(subreddit => postLink(title, url, subreddit))\n",[583],{"type":42,"tag":193,"props":584,"children":585},{"__ignoreMap":6},[586],{"type":51,"value":581},{"type":42,"tag":588,"props":589,"children":590},"hr",{},[],{"type":42,"tag":47,"props":592,"children":593},{},[594,596],{"type":51,"value":595},"I hope this article was helpful, let me know if you have any questions, comments, or suggestions on Twitter ",{"type":42,"tag":62,"props":597,"children":600},{"href":598,"rel":599},"https://twitter.com/CodyBontecou",[66],[601],{"type":51,"value":602},"@codybontecou",{"title":6,"searchDepth":604,"depth":604,"links":605},2,[606,607,611,612],{"id":75,"depth":604,"text":78},{"id":137,"depth":604,"text":140,"children":608},[609,610],{"id":224,"depth":385,"text":227},{"id":283,"depth":385,"text":286},{"id":356,"depth":604,"text":359},{"id":569,"depth":604,"text":572},"markdown","content:post-to-reddit-with-nodejs-and-typescript.md","content","post-to-reddit-with-nodejs-and-typescript.md","post-to-reddit-with-nodejs-and-typescript","md",{"_path":620,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":621,"description":622,"type":30,"author":623,"date":624,"dropdown":14,"meta":625,"canonicalUrl":633,"topics":634,"created_at":36,"last_modified":37,"body":637,"_type":613,"_id":991,"_source":615,"_file":992,"_stem":993,"_extension":618},"/programmatically-tweeting-with-nodejs","Programmatically Tweeting with NodeJS","Interacting with Twitter through their API. In this post I discuss how to use twitter-lite to create and post a tweet.",{"name":11,"image":12},"2020-07-16",[626,627,629,631,632],{"name":17,"content":621},{"name":21,"content":628},"https://codybontecou.com/images/tweeting-with-nodejs-og-image.png",{"name":24,"content":630},"Man sitting at computer overloaded by media. 100 Days of Code While Dopamine Fasting.",{"name":27,"content":621},{"name":29,"content":621},"https://codybontecou.com/programmatically-tweeting-with-nodejs",[33,635,636],"twitter","automation",{"type":39,"children":638,"toc":986},[639,659,663,673,695,700,708,712,722,735,748,799,811,820,828,838,847,857,865,871,883,892,900,909,917,926,954,961,974,977],{"type":42,"tag":43,"props":640,"children":641},{},[642],{"type":42,"tag":47,"props":643,"children":644},{},[645,646,651,652,657],{"type":51,"value":52},{"type":42,"tag":54,"props":647,"children":648},{},[649],{"type":51,"value":650},"day 1",{"type":51,"value":60},{"type":42,"tag":62,"props":653,"children":655},{"href":64,"rel":654},[66],[656],{"type":51,"value":69},{"type":51,"value":658},". In this post I'll be discussing how to programmatically tweet to Twitter using NodeJS.",{"type":42,"tag":73,"props":660,"children":661},{"id":75},[662],{"type":51,"value":78},{"type":42,"tag":47,"props":664,"children":665},{},[666],{"type":42,"tag":62,"props":667,"children":670},{"href":668,"rel":669},"https://developer.twitter.com/en/docs/twitter-api/getting-started/getting-access-to-the-twitter-api",[66],[671],{"type":51,"value":672},"Get a Twitter Developer Account",{"type":42,"tag":47,"props":674,"children":675},{},[676,678,685,687,694],{"type":51,"value":677},"You'll need to follow the instructions of the link above to create a develop account. This gives you access to creating a ",{"type":42,"tag":62,"props":679,"children":682},{"href":680,"rel":681},"https://developer.twitter.com/en/docs/projects/overview",[66],[683],{"type":51,"value":684},"project",{"type":51,"value":686}," and an ",{"type":42,"tag":62,"props":688,"children":691},{"href":689,"rel":690},"https://developer.twitter.com/en/docs/apps/overview",[66],[692],{"type":51,"value":693},"app",{"type":51,"value":104},{"type":42,"tag":47,"props":696,"children":697},{},[698],{"type":51,"value":699},"You'll eventually find yourself within the Twitter Developer Dashboard where you can generate authentication tokens that will be essential to making requests.",{"type":42,"tag":47,"props":701,"children":702},{},[703],{"type":42,"tag":130,"props":704,"children":707},{"alt":705,"src":706},"Screenshot of the Twitter Developer Dashboard","https://codybontecou.com/images/twitter-dev-dashboard.png",[],{"type":42,"tag":73,"props":709,"children":710},{"id":137},[711],{"type":51,"value":140},{"type":42,"tag":47,"props":713,"children":714},{},[715,721],{"type":42,"tag":62,"props":716,"children":719},{"href":717,"rel":718},"https://github.com/CodyBontecou/day-1-tweet-with-nodejs",[66],[720],{"type":51,"value":150},{"type":51,"value":152},{"type":42,"tag":47,"props":723,"children":724},{},[725],{"type":42,"tag":157,"props":726,"children":727},{},[728,729,734],{"type":51,"value":161},{"type":42,"tag":62,"props":730,"children":732},{"href":164,"rel":731},[66],[733],{"type":51,"value":14},{"type":51,"value":169},{"type":42,"tag":47,"props":736,"children":737},{},[738],{"type":42,"tag":157,"props":739,"children":740},{},[741,742,747],{"type":51,"value":177},{"type":42,"tag":62,"props":743,"children":745},{"href":180,"rel":744},[66],[746],{"type":51,"value":184},{"type":51,"value":186},{"type":42,"tag":361,"props":749,"children":750},{},[751,762,782],{"type":42,"tag":233,"props":752,"children":753},{},[754,756],{"type":51,"value":755},"Scaffold your project: ",{"type":42,"tag":193,"props":757,"children":759},{"className":758},[],[760],{"type":51,"value":761},"yarn init -y",{"type":42,"tag":233,"props":763,"children":764},{},[765,767,774,776],{"type":51,"value":766},"Download ",{"type":42,"tag":62,"props":768,"children":771},{"href":769,"rel":770},"https://github.com/draftbit/twitter-lite",[66],[772],{"type":51,"value":773},"twitter-lite",{"type":51,"value":775}," to interact with Twitter's API: ",{"type":42,"tag":193,"props":777,"children":779},{"className":778},[],[780],{"type":51,"value":781},"yarn add twitter-lite",{"type":42,"tag":233,"props":783,"children":784},{},[785,786,791,793],{"type":51,"value":766},{"type":42,"tag":62,"props":787,"children":789},{"href":262,"rel":788},[66],[790],{"type":51,"value":266},{"type":51,"value":792}," to safely manage .env variables and your auth tokens: ",{"type":42,"tag":193,"props":794,"children":796},{"className":795},[],[797],{"type":51,"value":798},"yarn add dotenv",{"type":42,"tag":47,"props":800,"children":801},{},[802,804,809],{"type":51,"value":803},"Your ",{"type":42,"tag":193,"props":805,"children":807},{"className":806},[],[808],{"type":51,"value":198},{"type":51,"value":810}," file should now look like this:",{"type":42,"tag":210,"props":812,"children":815},{"className":813,"code":814,"language":215,"meta":6},[213],"{\n  \"name\": \"programmatic-tweeting-with-nodejs\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"dot-env\": \"^0.0.1\",\n    \"twitter-lite\": \"^1.1.0\"\n  }\n}\n",[816],{"type":42,"tag":193,"props":817,"children":818},{"__ignoreMap":6},[819],{"type":51,"value":814},{"type":42,"tag":361,"props":821,"children":822},{"start":403},[823],{"type":42,"tag":233,"props":824,"children":825},{},[826],{"type":51,"value":827},"Create a .env file in your project root folder and add your tokens provided by Twitter's API",{"type":42,"tag":47,"props":829,"children":830},{},[831,832,837],{"type":51,"value":312},{"type":42,"tag":193,"props":833,"children":835},{"className":834},[],[836],{"type":51,"value":305},{"type":51,"value":319},{"type":42,"tag":210,"props":839,"children":842},{"className":840,"code":841,"language":325,"meta":6},[323],"consumer_key = '\u003CCONSUMER KEY>'\nconsumer_secret = '\u003CCONSUMER SECRET>'\naccess_token_key = '\u003CACCESS TOKEN>'\naccess_token_secret = '\u003CACCESS TOKEN>'\n",[843],{"type":42,"tag":193,"props":844,"children":845},{"__ignoreMap":6},[846],{"type":51,"value":841},{"type":42,"tag":47,"props":848,"children":849},{},[850,851,856],{"type":51,"value":335},{"type":42,"tag":193,"props":852,"children":854},{"className":853},[],[855],{"type":51,"value":341},{"type":51,"value":343},{"type":42,"tag":47,"props":858,"children":859},{},[860,864],{"type":42,"tag":54,"props":861,"children":862},{},[863],{"type":51,"value":351},{"type":51,"value":353},{"type":42,"tag":73,"props":866,"children":868},{"id":867},"making-the-post",[869],{"type":51,"value":870},"Making the Post",{"type":42,"tag":361,"props":872,"children":873},{},[874,879],{"type":42,"tag":233,"props":875,"children":876},{},[877],{"type":51,"value":878},"Create an index.js file in your project root",{"type":42,"tag":233,"props":880,"children":881},{},[882],{"type":51,"value":373},{"type":42,"tag":210,"props":884,"children":887},{"className":885,"code":886,"language":325,"meta":6},[323],"const twitter = require('twitter-lite')\nrequire('dotenv').config()\n",[888],{"type":42,"tag":193,"props":889,"children":890},{"__ignoreMap":6},[891],{"type":51,"value":886},{"type":42,"tag":361,"props":893,"children":894},{"start":385},[895],{"type":42,"tag":233,"props":896,"children":897},{},[898],{"type":51,"value":899},"Create a client to talk to Twitter with your config",{"type":42,"tag":210,"props":901,"children":904},{"className":902,"code":903,"language":325,"meta":6},[323],"const client = new twitter(config)\n",[905],{"type":42,"tag":193,"props":906,"children":907},{"__ignoreMap":6},[908],{"type":51,"value":903},{"type":42,"tag":361,"props":910,"children":911},{"start":403},[912],{"type":42,"tag":233,"props":913,"children":914},{},[915],{"type":51,"value":916},"Code the request",{"type":42,"tag":210,"props":918,"children":921},{"className":919,"code":920,"language":325,"meta":6},[323],"client\n  .post('statuses/update', { status: 'Hello World' })\n  .then(result => {\n    console.log('You successfully tweeted this : \"' + result.text + '\"')\n  })\n  .catch(console.error)\n",[922],{"type":42,"tag":193,"props":923,"children":924},{"__ignoreMap":6},[925],{"type":51,"value":920},{"type":42,"tag":47,"props":927,"children":928},{},[929,931,938,939,945,947,953],{"type":51,"value":930},"Step #4 is creating a POST request to ",{"type":42,"tag":62,"props":932,"children":935},{"href":933,"rel":934},"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update",[66],[936],{"type":51,"value":937},"Twitter's endpoint",{"type":51,"value":418},{"type":42,"tag":193,"props":940,"children":942},{"className":941},[],[943],{"type":51,"value":944},"statuses/update",{"type":51,"value":946}," with the parameter ",{"type":42,"tag":193,"props":948,"children":950},{"className":949},[],[951],{"type":51,"value":952},"status = 'Hello World'",{"type":51,"value":104},{"type":42,"tag":361,"props":955,"children":956},{"start":521},[957],{"type":42,"tag":233,"props":958,"children":959},{},[960],{"type":51,"value":527},{"type":42,"tag":47,"props":962,"children":963},{},[964,966,972],{"type":51,"value":965},"Now type ",{"type":42,"tag":193,"props":967,"children":969},{"className":968},[],[970],{"type":51,"value":971},"node index.js",{"type":51,"value":973}," into your terminal and press enter. This will generate a Tweet with the text \"Hello World\".",{"type":42,"tag":588,"props":975,"children":976},{},[],{"type":42,"tag":47,"props":978,"children":979},{},[980,981],{"type":51,"value":595},{"type":42,"tag":62,"props":982,"children":984},{"href":598,"rel":983},[66],[985],{"type":51,"value":602},{"title":6,"searchDepth":604,"depth":604,"links":987},[988,989,990],{"id":75,"depth":604,"text":78},{"id":137,"depth":604,"text":140},{"id":867,"depth":604,"text":870},"content:programmatically-tweeting-with-nodejs.md","programmatically-tweeting-with-nodejs.md","programmatically-tweeting-with-nodejs",{"_path":995,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":996,"description":997,"type":30,"author":998,"date":999,"dropdown":14,"tags":1000,"meta":1009,"canonicalUrl":1017,"topics":1018,"created_at":36,"last_modified":1022,"body":1023,"_type":613,"_id":1705,"_source":615,"_file":1706,"_stem":1707,"_extension":618},"/programmatically-posting-to-your-favorite-blogs","Post to Dev, Hashnode, and Medium using their APIs","Generate posts on Dev, Hashnode, and Medium using the same markdown source file to simultaneously post on all three platforms using their REST and Graphql APIs.",{"name":11,"image":12},"2020-07-13",[1001,1002,1003,1004,1005,1006,1007,1008],"VuePress","JavaScript","CSS","Refactor","vue","Medium","Personal Blog","Software Tutorials",[1010,1011,1013,1015,1016],{"name":17,"content":996},{"name":21,"content":1012},"https://codybontecou.com/images/automate-blog-posts-meta.png",{"name":24,"content":1014},"Large hero image showing Dev, Hashnode, and Medium's logos",{"name":27,"content":996},{"name":29,"content":996},"https://codybontecou.com/programmatically-posting-to-your-favorite-blogs",[1019,1020,33,1021,636],"vuepress","javascript","blogging","2024-12-12T11:10",{"type":39,"children":1024,"toc":1688},[1025,1033,1038,1046,1054,1060,1074,1080,1098,1136,1141,1147,1160,1165,1174,1187,1193,1206,1233,1238,1247,1259,1265,1270,1278,1286,1294,1303,1311,1320,1328,1336,1344,1353,1361,1370,1375,1381,1394,1399,1413,1419,1432,1438,1447,1453,1466,1471,1501,1506,1511,1541,1547,1560,1591,1621,1626,1635,1641,1668,1673,1678],{"type":42,"tag":43,"props":1026,"children":1027},{},[1028],{"type":42,"tag":47,"props":1029,"children":1030},{},[1031],{"type":51,"value":1032},"The goal of this article is to help you connect to each of these site's APIs in order to programmatically post, update, and enjoy with these services.",{"type":42,"tag":47,"props":1034,"children":1035},{},[1036],{"type":51,"value":1037},"Writing a single markdown file for my personal blog and copy and pasting it into these other blogging platforms isn't too challenging... until I need to edit something. A simple type change requires me to load four different sites, navigating through their wildly different UI, in order to make simple changes.",{"type":42,"tag":43,"props":1039,"children":1040},{},[1041],{"type":42,"tag":47,"props":1042,"children":1043},{},[1044],{"type":51,"value":1045},"This gets old fast.",{"type":42,"tag":47,"props":1047,"children":1048},{},[1049],{"type":42,"tag":54,"props":1050,"children":1051},{},[1052],{"type":51,"value":1053},"We're developers. It's much more fun and beneficial to automate these repetitive tasks.",{"type":42,"tag":73,"props":1055,"children":1057},{"id":1056},"medium-api",[1058],{"type":51,"value":1059},"Medium API",{"type":42,"tag":43,"props":1061,"children":1062},{},[1063],{"type":42,"tag":47,"props":1064,"children":1065},{},[1066,1068],{"type":51,"value":1067},"Documentation - ",{"type":42,"tag":62,"props":1069,"children":1072},{"href":1070,"rel":1071},"https://github.com/Medium/medium-api-docs",[66],[1073],{"type":51,"value":1070},{"type":42,"tag":222,"props":1075,"children":1077},{"id":1076},"getting-the-authentication-token",[1078],{"type":51,"value":1079},"Getting the authentication token",{"type":42,"tag":361,"props":1081,"children":1082},{},[1083,1088,1093],{"type":42,"tag":233,"props":1084,"children":1085},{},[1086],{"type":51,"value":1087},"Login to Medium",{"type":42,"tag":233,"props":1089,"children":1090},{},[1091],{"type":51,"value":1092},"Navigate to Integration tokens",{"type":42,"tag":233,"props":1094,"children":1095},{},[1096],{"type":51,"value":1097},"Enter description for your token and click the get integration token button",{"type":42,"tag":1099,"props":1100,"children":1101},"table",{},[1102,1120],{"type":42,"tag":1103,"props":1104,"children":1105},"thead",{},[1106],{"type":42,"tag":1107,"props":1108,"children":1109},"tr",{},[1110],{"type":42,"tag":1111,"props":1112,"children":1114},"th",{"align":1113},"center",[1115],{"type":42,"tag":130,"props":1116,"children":1119},{"alt":1117,"src":1118},"Generate Integration Token","https://codybontecou.com/images/get-medium-integration-token.png",[],{"type":42,"tag":1121,"props":1122,"children":1123},"tbody",{},[1124],{"type":42,"tag":1107,"props":1125,"children":1126},{},[1127],{"type":42,"tag":1128,"props":1129,"children":1130},"td",{"align":1113},[1131],{"type":42,"tag":157,"props":1132,"children":1133},{},[1134],{"type":51,"value":1135},"Medium's integration token panel",{"type":42,"tag":47,"props":1137,"children":1138},{},[1139],{"type":51,"value":1140},"This will generate a token that will be included within requests to Medium's API.",{"type":42,"tag":222,"props":1142,"children":1144},{"id":1143},"getting-the-authenticated-users-details",[1145],{"type":51,"value":1146},"Getting the authenticated user’s details",{"type":42,"tag":47,"props":1148,"children":1149},{},[1150,1152,1158],{"type":51,"value":1151},"Medium provides the endpoint ",{"type":42,"tag":193,"props":1153,"children":1155},{"className":1154},[],[1156],{"type":51,"value":1157},"GET https://api.medium.com/v1/me",{"type":51,"value":1159}," to get the authenticated user data.",{"type":42,"tag":47,"props":1161,"children":1162},{},[1163],{"type":51,"value":1164},"Here's an example request using NodeJS:",{"type":42,"tag":210,"props":1166,"children":1169},{"className":1167,"code":1168,"language":325,"meta":6},[323],"fetch('https://api.medium.com/v1/me', {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer \u003CAUTHENTICATION TOKEN HERE>',\n  },\n})\n  .then(res => res.json())\n  .then(res => console.log(JSON.stringify(res)))\n",[1170],{"type":42,"tag":193,"props":1171,"children":1172},{"__ignoreMap":6},[1173],{"type":51,"value":1168},{"type":42,"tag":47,"props":1175,"children":1176},{},[1177,1179,1185],{"type":51,"value":1178},"Within the data returned from this endpoint is an ",{"type":42,"tag":193,"props":1180,"children":1182},{"className":1181},[],[1183],{"type":51,"value":1184},"id",{"type":51,"value":1186},". You will want to save this ID value because it will be required to create a Medium article using NodeJS.",{"type":42,"tag":222,"props":1188,"children":1190},{"id":1189},"programmatically-creating-a-medium-article",[1191],{"type":51,"value":1192},"Programmatically creating a Medium article",{"type":42,"tag":47,"props":1194,"children":1195},{},[1196,1198,1204],{"type":51,"value":1197},"Now that we have the authentication token and ID, we can use the endpoint ",{"type":42,"tag":193,"props":1199,"children":1201},{"className":1200},[],[1202],{"type":51,"value":1203},"POST https://api.medium.com/v1/users/\u003CauthorId>/posts",{"type":51,"value":1205},". The documentation posted above goes into detail on what parameters are required and/or available.",{"type":42,"tag":47,"props":1207,"children":1208},{},[1209,1211,1217,1219,1224,1226,1232],{"type":51,"value":1210},"This endpoint accepts either markdown or HTML. You need to explicitly set the ",{"type":42,"tag":193,"props":1212,"children":1214},{"className":1213},[],[1215],{"type":51,"value":1216},"contentFormat",{"type":51,"value":1218}," field to either ",{"type":42,"tag":193,"props":1220,"children":1222},{"className":1221},[],[1223],{"type":51,"value":613},{"type":51,"value":1225}," or ",{"type":42,"tag":193,"props":1227,"children":1229},{"className":1228},[],[1230],{"type":51,"value":1231},"html",{"type":51,"value":104},{"type":42,"tag":47,"props":1234,"children":1235},{},[1236],{"type":51,"value":1237},"Here's an example of a request using NodeJS:",{"type":42,"tag":210,"props":1239,"children":1242},{"className":1240,"code":1241,"language":325,"meta":6},[323],"fetch('https://api.medium.com/v1/users/\u003CUSER-ID>/posts', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer \u003CREPLACE WITH TOKEN GENERATED ABOVE>',\n  },\n  body: JSON.stringify({\n    title: 'Liverpool FC',\n    contentFormat: 'markdown',\n    content: '# You can put Markdown here.\\n***\\nSee what it looks like?',\n    canonicalUrl: 'http://jamietalbot.com/posts/liverpool-fc',\n    tags: ['football', 'sport', 'Liverpool'],\n    publishStatus: 'public',\n  }),\n})\n  .then(res => res.json())\n  .then(res => console.log(JSON.stringify(res)))\n",[1243],{"type":42,"tag":193,"props":1244,"children":1245},{"__ignoreMap":6},[1246],{"type":51,"value":1241},{"type":42,"tag":47,"props":1248,"children":1249},{},[1250,1252],{"type":51,"value":1251},"If this returned a 201 status code, you should now be able to see your post on ",{"type":42,"tag":62,"props":1253,"children":1256},{"href":1254,"rel":1255},"https://medium.com",[66],[1257],{"type":51,"value":1258},"Medium.com",{"type":42,"tag":222,"props":1260,"children":1262},{"id":1261},"available-endpoints",[1263],{"type":51,"value":1264},"Available Endpoints:",{"type":42,"tag":47,"props":1266,"children":1267},{},[1268],{"type":51,"value":1269},"Here's a list of the available endpoints:",{"type":42,"tag":47,"props":1271,"children":1272},{},[1273],{"type":42,"tag":54,"props":1274,"children":1275},{},[1276],{"type":51,"value":1277},"Getting the authenticated user’s details:",{"type":42,"tag":47,"props":1279,"children":1280},{},[1281],{"type":42,"tag":193,"props":1282,"children":1284},{"className":1283},[],[1285],{"type":51,"value":1157},{"type":42,"tag":47,"props":1287,"children":1288},{},[1289],{"type":42,"tag":54,"props":1290,"children":1291},{},[1292],{"type":51,"value":1293},"Listing the user’s publications:",{"type":42,"tag":47,"props":1295,"children":1296},{},[1297],{"type":42,"tag":193,"props":1298,"children":1300},{"className":1299},[],[1301],{"type":51,"value":1302},"GET https://api.medium.com/v1/users/\u003CuserId>/publications",{"type":42,"tag":47,"props":1304,"children":1305},{},[1306],{"type":42,"tag":54,"props":1307,"children":1308},{},[1309],{"type":51,"value":1310},"Fetching contributors for a publication:",{"type":42,"tag":47,"props":1312,"children":1313},{},[1314],{"type":42,"tag":193,"props":1315,"children":1317},{"className":1316},[],[1318],{"type":51,"value":1319},"GET https://api.medium.com/v1/publications/\u003CpublicationId>/contributors",{"type":42,"tag":47,"props":1321,"children":1322},{},[1323],{"type":42,"tag":54,"props":1324,"children":1325},{},[1326],{"type":51,"value":1327},"Creating a post:",{"type":42,"tag":47,"props":1329,"children":1330},{},[1331],{"type":42,"tag":193,"props":1332,"children":1334},{"className":1333},[],[1335],{"type":51,"value":1203},{"type":42,"tag":47,"props":1337,"children":1338},{},[1339],{"type":42,"tag":54,"props":1340,"children":1341},{},[1342],{"type":51,"value":1343},"Creating a post under a publication:",{"type":42,"tag":47,"props":1345,"children":1346},{},[1347],{"type":42,"tag":193,"props":1348,"children":1350},{"className":1349},[],[1351],{"type":51,"value":1352},"POST https://api.medium.com/v1/publications/\u003CpublicationId>/posts",{"type":42,"tag":47,"props":1354,"children":1355},{},[1356],{"type":42,"tag":54,"props":1357,"children":1358},{},[1359],{"type":51,"value":1360},"Uploading an image:",{"type":42,"tag":47,"props":1362,"children":1363},{},[1364],{"type":42,"tag":193,"props":1365,"children":1367},{"className":1366},[],[1368],{"type":51,"value":1369},"POST https://api.medium.com/v1/images",{"type":42,"tag":47,"props":1371,"children":1372},{},[1373],{"type":51,"value":1374},"Unfortunately, Medium's public API is fairly limited. We can create and get posts, but the ability to programmatically edit them is not there yet. I hope this eventually changes, giving the programmer better tools to work with them,",{"type":42,"tag":73,"props":1376,"children":1378},{"id":1377},"devto-api",[1379],{"type":51,"value":1380},"dev.to API",{"type":42,"tag":43,"props":1382,"children":1383},{},[1384],{"type":42,"tag":47,"props":1385,"children":1386},{},[1387,1388],{"type":51,"value":1067},{"type":42,"tag":62,"props":1389,"children":1392},{"href":1390,"rel":1391},"https://docs.forem.com/api/",[66],[1393],{"type":51,"value":1390},{"type":42,"tag":222,"props":1395,"children":1397},{"id":1396},"getting-the-authentication-token-1",[1398],{"type":51,"value":1079},{"type":42,"tag":47,"props":1400,"children":1401},{},[1402,1404,1411],{"type":51,"value":1403},"This will require a dev.to account. Navigate to their ",{"type":42,"tag":62,"props":1405,"children":1408},{"href":1406,"rel":1407},"https://docs.forem.com/api/#section/Authentication",[66],[1409],{"type":51,"value":1410},"docs",{"type":51,"value":1412}," and follow the instructions to get the authentication token.",{"type":42,"tag":222,"props":1414,"children":1416},{"id":1415},"creating-an-devto-article-using-their-api",[1417],{"type":51,"value":1418},"Creating an dev.to article using their API",{"type":42,"tag":47,"props":1420,"children":1421},{},[1422,1424,1430],{"type":51,"value":1423},"Their documentation is far more extensive than Medium's public API. Their docs for this endpoint are ",{"type":42,"tag":62,"props":1425,"children":1428},{"href":1426,"rel":1427},"https://docs.forem.com/api/#operation/createArticle",[66],[1429],{"type":51,"value":498},{"type":51,"value":1431},". If you click the article dropdown arrow, you can see all of the parameters that they accept. You can",{"type":42,"tag":437,"props":1433,"children":1435},{"id":1434},"example-request-using-nodejs",[1436],{"type":51,"value":1437},"Example request using NodeJS:",{"type":42,"tag":210,"props":1439,"children":1442},{"className":1440,"code":1441,"language":325,"meta":6},[323],"fetch('https://dev.to/api/articles', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'api-key': '\u003CAUTHENTICATION TOKEN HERE>',\n  },\n  body: JSON.stringify({\n    article: {\n      title: 'Hello, World!',\n      published: true,\n      content: '# You can put Markdown here.\\n***\\n',\n      tags: ['discuss', 'help'],\n      series: 'Hello series',\n    },\n  }),\n})\n  .then(res => res.json())\n  .then(res => console.log(JSON.stringify(res)))\n",[1443],{"type":42,"tag":193,"props":1444,"children":1445},{"__ignoreMap":6},[1446],{"type":51,"value":1441},{"type":42,"tag":73,"props":1448,"children":1450},{"id":1449},"hashnode-api",[1451],{"type":51,"value":1452},"Hashnode API",{"type":42,"tag":43,"props":1454,"children":1455},{},[1456],{"type":42,"tag":47,"props":1457,"children":1458},{},[1459,1460],{"type":51,"value":1067},{"type":42,"tag":62,"props":1461,"children":1464},{"href":1462,"rel":1463},"https://api.hashnode.com/",[66],[1465],{"type":51,"value":1462},{"type":42,"tag":47,"props":1467,"children":1468},{},[1469],{"type":51,"value":1470},"Hashnode's API is a GraphQL API unlike the REST APIs we worked with in Medium and dev.to.",{"type":42,"tag":47,"props":1472,"children":1473},{},[1474,1476,1483,1485,1491,1493,1499],{"type":51,"value":1475},"They have a few blogposts within their ",{"type":42,"tag":62,"props":1477,"children":1480},{"href":1478,"rel":1479},"https://engineering.hashnode.com/",[66],[1481],{"type":51,"value":1482},"blog",{"type":51,"value":1484}," discussing their public API, but they were posted in 2019 so a handful of things discussed within the articles have been deprecated such as the ",{"type":42,"tag":193,"props":1486,"children":1488},{"className":1487},[],[1489],{"type":51,"value":1490},"GLOBAL",{"type":51,"value":1492}," and ",{"type":42,"tag":193,"props":1494,"children":1496},{"className":1495},[],[1497],{"type":51,"value":1498},"FOR_ME",{"type":51,"value":1500}," FeedType's. Give them a read if you want to understand things a bit better, but keep in mind that a lot of the parameters have been deprecated.",{"type":42,"tag":222,"props":1502,"children":1504},{"id":1503},"getting-the-authentication-token-2",[1505],{"type":51,"value":1079},{"type":42,"tag":47,"props":1507,"children":1508},{},[1509],{"type":51,"value":1510},"You can create/revoke them from Hashnode settings. Login to your account, go to the developer settings, and generate a new token.",{"type":42,"tag":1099,"props":1512,"children":1513},{},[1514,1528],{"type":42,"tag":1103,"props":1515,"children":1516},{},[1517],{"type":42,"tag":1107,"props":1518,"children":1519},{},[1520],{"type":42,"tag":1111,"props":1521,"children":1522},{"align":1113},[1523],{"type":42,"tag":130,"props":1524,"children":1527},{"alt":1525,"src":1526},"Generate Hashnode Auth Token","https://codybontecou.com/images/hashnode-auth-token.png",[],{"type":42,"tag":1121,"props":1529,"children":1530},{},[1531],{"type":42,"tag":1107,"props":1532,"children":1533},{},[1534],{"type":42,"tag":1128,"props":1535,"children":1536},{"align":1113},[1537],{"type":42,"tag":157,"props":1538,"children":1539},{},[1540],{"type":51,"value":1525},{"type":42,"tag":222,"props":1542,"children":1544},{"id":1543},"documentation",[1545],{"type":51,"value":1546},"Documentation",{"type":42,"tag":47,"props":1548,"children":1549},{},[1550,1552,1558],{"type":51,"value":1551},"I've found the source of truth to be within their ",{"type":42,"tag":62,"props":1553,"children":1555},{"href":1462,"rel":1554},[66],[1556],{"type":51,"value":1557},"GraphQL Playground",{"type":51,"value":1559},". You'll need to click around their playground to see what endpoints are available as well as the expected inputs.",{"type":42,"tag":1099,"props":1561,"children":1562},{},[1563,1577],{"type":42,"tag":1103,"props":1564,"children":1565},{},[1566],{"type":42,"tag":1107,"props":1567,"children":1568},{},[1569],{"type":42,"tag":1111,"props":1570,"children":1571},{"align":1113},[1572],{"type":42,"tag":130,"props":1573,"children":1576},{"alt":1574,"src":1575},"Hashnode API Playground","https://codybontecou.com/images/graphql-playground.png",[],{"type":42,"tag":1121,"props":1578,"children":1579},{},[1580],{"type":42,"tag":1107,"props":1581,"children":1582},{},[1583],{"type":42,"tag":1128,"props":1584,"children":1585},{"align":1113},[1586],{"type":42,"tag":157,"props":1587,"children":1588},{},[1589],{"type":51,"value":1590},"Hashnode's GraphQL Api Playground",{"type":42,"tag":1099,"props":1592,"children":1593},{},[1594,1608],{"type":42,"tag":1103,"props":1595,"children":1596},{},[1597],{"type":42,"tag":1107,"props":1598,"children":1599},{},[1600],{"type":42,"tag":1111,"props":1601,"children":1602},{"align":1113},[1603],{"type":42,"tag":130,"props":1604,"children":1607},{"alt":1605,"src":1606},"Hashnode Documentation Navigation","https://codybontecou.com/images/hashnode-doc-navigation.png",[],{"type":42,"tag":1121,"props":1609,"children":1610},{},[1611],{"type":42,"tag":1107,"props":1612,"children":1613},{},[1614],{"type":42,"tag":1128,"props":1615,"children":1616},{"align":1113},[1617],{"type":42,"tag":157,"props":1618,"children":1619},{},[1620],{"type":51,"value":1605},{"type":42,"tag":437,"props":1622,"children":1624},{"id":1623},"example-request-using-nodejs-1",[1625],{"type":51,"value":1437},{"type":42,"tag":210,"props":1627,"children":1630},{"className":1628,"code":1629,"language":325,"meta":6},[323],"fetch('https://api.hashnode.com', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: '\u003CAUTHENTICATION TOKEN HERE>',\n  },\n  body: JSON.stringify({\n    query:\n      'mutation createStory($input: CreateStoryInput!){ createStory(input: $input){ code success message } }',\n    variables: {\n      input: {\n        title: 'What are the e2e testing libraries you use ?',\n        contentMarkdown: '# You can put Markdown here.\\n***\\n',\n        tags: [\n          {\n            _id: '56744723958ef13879b9549b',\n            slug: 'testing',\n            name: 'Testing',\n          },\n        ],\n        coverImageURL:\n          'https://codybontecou.com/images/header-meta-component.png',\n      },\n    },\n  }),\n})\n  .then(res => res.json())\n  .then(res => console.log(JSON.stringify(res)))\n",[1631],{"type":42,"tag":193,"props":1632,"children":1633},{"__ignoreMap":6},[1634],{"type":51,"value":1629},{"type":42,"tag":73,"props":1636,"children":1638},{"id":1637},"conclusion",[1639],{"type":51,"value":1640},"Conclusion",{"type":42,"tag":47,"props":1642,"children":1643},{},[1644,1646,1652,1654,1659,1660,1666],{"type":51,"value":1645},"Now that we can programmatically post to these three sites, we can build out an application that allows dynamic inputs, such as a file reader to pass a ",{"type":42,"tag":193,"props":1647,"children":1649},{"className":1648},[],[1650],{"type":51,"value":1651},".md",{"type":51,"value":1653}," file to the requests ",{"type":42,"tag":193,"props":1655,"children":1657},{"className":1656},[],[1658],{"type":51,"value":615},{"type":51,"value":1492},{"type":42,"tag":193,"props":1661,"children":1663},{"className":1662},[],[1664],{"type":51,"value":1665},"contentMarkdown",{"type":51,"value":1667}," parameters, editing posts, and many other things. We",{"type":42,"tag":47,"props":1669,"children":1670},{},[1671],{"type":51,"value":1672},"Keep an eye out. I plan on spending some time building out an interface for Dev Bloggers to be able to do just that. It's not fun manually editing the same text in each post across four different sites. I hope to solve that problem.",{"type":42,"tag":47,"props":1674,"children":1675},{},[1676],{"type":51,"value":1677},"Good luck!",{"type":42,"tag":47,"props":1679,"children":1680},{},[1681,1683],{"type":51,"value":1682},"Let me know what you think of this article through Twitter ",{"type":42,"tag":62,"props":1684,"children":1686},{"href":598,"rel":1685},[66],[1687],{"type":51,"value":602},{"title":6,"searchDepth":604,"depth":604,"links":1689},[1690,1696,1700,1704],{"id":1056,"depth":604,"text":1059,"children":1691},[1692,1693,1694,1695],{"id":1076,"depth":385,"text":1079},{"id":1143,"depth":385,"text":1146},{"id":1189,"depth":385,"text":1192},{"id":1261,"depth":385,"text":1264},{"id":1377,"depth":604,"text":1380,"children":1697},[1698,1699],{"id":1396,"depth":385,"text":1079},{"id":1415,"depth":385,"text":1418},{"id":1449,"depth":604,"text":1452,"children":1701},[1702,1703],{"id":1503,"depth":385,"text":1079},{"id":1543,"depth":385,"text":1546},{"id":1637,"depth":604,"text":1640},"content:programmatically-posting-to-your-favorite-blogs.md","programmatically-posting-to-your-favorite-blogs.md","programmatically-posting-to-your-favorite-blogs",1734027058773]