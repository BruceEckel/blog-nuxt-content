[{"data":1,"prerenderedAt":609},["ShallowReactive",2],{"post-/topics/tweepy":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"category":15,"dropdown":16,"topics":17,"meta":22,"canonicalUrl":38,"newsletter":7,"body":39,"_type":603,"_id":604,"_source":605,"_file":606,"_stem":607,"_extension":608},"/generate-twitter-lists-with-python","",false,"Generating Twitter Lists with Python",null,"post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2020-09-15T00:00:00.000Z","tutorials","Python",[18,19,20,21],"python","tweepy","twitter","automation",[23,25,28,31,33,35],{"name":24,"content":8},"og:title",{"name":26,"content":27},"og:description","Automatically generating a Twitter List of Paul Grahams feed with Python and Tweepy",{"name":29,"content":30},"og:image","https://codybontecou.com/images/generate-twitter-lists-with-python-meta.png",{"name":32,"content":27},"og:image:alt",{"name":34,"content":8},"twitter:title",{"name":36,"content":37},"twitter:text:title","Generating a Twitter List with Python","https://codybontecou.com/generate-twitter-lists-with-python.html",{"type":40,"children":41,"toc":592},"root",[42,51,70,82,105,110,123,130,138,143,148,154,169,174,179,244,250,266,323,334,340,360,369,374,380,385,414,426,435,441,445,464,477,498,507,513,517,528,541,546,558,567,573,587],{"type":43,"tag":44,"props":45,"children":47},"element","h1",{"id":46},"generating-twitter-lists-with-python-and-tweepy",[48],{"type":49,"value":50},"text","Generating Twitter Lists with Python and Tweepy",{"type":43,"tag":52,"props":53,"children":54},"blockquote",{},[55],{"type":43,"tag":56,"props":57,"children":58},"p",{},[59,61],{"type":49,"value":60},"The finished project can be seen ",{"type":43,"tag":62,"props":63,"children":67},"a",{"href":64,"rel":65},"https://github.com/CodyBontecou/Generating-Twitter-Lists-with-Python/blob/main/tweepy_lists/app.py",[66],"nofollow",[68],{"type":49,"value":69},"here",{"type":43,"tag":56,"props":71,"children":72},{},[73,80],{"type":43,"tag":62,"props":74,"children":77},{"href":75,"rel":76},"https://twitter.com/paulg",[66],[78],{"type":49,"value":79},"Paul Graham",{"type":49,"value":81}," is an influential man in the tech and startup space.",{"type":43,"tag":56,"props":83,"children":84},{},[85,87,94,96,103],{"type":49,"value":86},"His Twitter activity keeps me entertained and informed, spanning from discussions about ",{"type":43,"tag":62,"props":88,"children":91},{"href":89,"rel":90},"https://twitter.com/paulg/status/1437423926980841472",[66],[92],{"type":49,"value":93},"air quality significantly impacting life expectancy",{"type":49,"value":95}," to interesting ",{"type":43,"tag":62,"props":97,"children":100},{"href":98,"rel":99},"https://twitter.com/paulg/status/1437453828606070784",[66],[101],{"type":49,"value":102},"discussions he has with his kids",{"type":49,"value":104},".",{"type":43,"tag":56,"props":106,"children":107},{},[108],{"type":49,"value":109},"The air pollution discussion this morning motivated me to want to see his feed and all of the interesting things a man like Paul sees. I started to follow the accounts he follows and after about 30 or so clicks I decided to investigate Twitter's API for a way to automate this.",{"type":43,"tag":56,"props":111,"children":112},{},[113,115,122],{"type":49,"value":114},"This is where I discovered ",{"type":43,"tag":62,"props":116,"children":119},{"href":117,"rel":118},"https://help.twitter.com/en/using-twitter/twitter-lists",[66],[120],{"type":49,"value":121},"Twitter Lists",{"type":49,"value":104},{"type":43,"tag":124,"props":125,"children":127},"h2",{"id":126},"twitter-lists-are-a-great-way-to-create-custom-feeds",[128],{"type":49,"value":129},"Twitter Lists are a great way to create custom feeds",{"type":43,"tag":52,"props":131,"children":132},{},[133],{"type":43,"tag":56,"props":134,"children":135},{},[136],{"type":49,"value":137},"Viewing a List timeline will show you a stream of Tweets from only the accounts on that List.",{"type":43,"tag":56,"props":139,"children":140},{},[141],{"type":49,"value":142},"Twitter Lists are the perfect solution. It gives me the ability to create custom feeds.",{"type":43,"tag":56,"props":144,"children":145},{},[146],{"type":49,"value":147},"If I feel like delving into Paul Grahams feed, it's a click away. Same with Elon Musk or any of the other influential users on Twitter.",{"type":43,"tag":124,"props":149,"children":151},{"id":150},"using-tweepy-to-automatically-generate-our-twitter-lists",[152],{"type":49,"value":153},"Using Tweepy to automatically generate our Twitter Lists",{"type":43,"tag":52,"props":155,"children":156},{},[157],{"type":43,"tag":56,"props":158,"children":159},{},[160,167],{"type":43,"tag":62,"props":161,"children":164},{"href":162,"rel":163},"https://www.tweepy.org/",[66],[165],{"type":49,"value":166},"Tweepy",{"type":49,"value":168}," is an easy-to-use Python library for accessing the Twitter API.",{"type":43,"tag":56,"props":170,"children":171},{},[172],{"type":49,"value":173},"Tweepy provides built in methods to easily interact with the Twitter API.",{"type":43,"tag":56,"props":175,"children":176},{},[177],{"type":49,"value":178},"In this project, I use the following from Tweepy:",{"type":43,"tag":180,"props":181,"children":182},"ul",{},[183,194,204,214,224,234],{"type":43,"tag":184,"props":185,"children":186},"li",{},[187],{"type":43,"tag":62,"props":188,"children":191},{"href":189,"rel":190},"https://docs.tweepy.org/en/stable/api.html?highlight=API#API",[66],[192],{"type":49,"value":193},"API class",{"type":43,"tag":184,"props":195,"children":196},{},[197],{"type":43,"tag":62,"props":198,"children":201},{"href":199,"rel":200},"https://docs.tweepy.org/en/latest/client.html",[66],[202],{"type":49,"value":203},"Client class",{"type":43,"tag":184,"props":205,"children":206},{},[207],{"type":43,"tag":62,"props":208,"children":211},{"href":209,"rel":210},"https://docs.tweepy.org/en/latest/api.html?highlight=create_list#tweepy.API.create_list",[66],[212],{"type":49,"value":213},".create_list()",{"type":43,"tag":184,"props":215,"children":216},{},[217],{"type":43,"tag":62,"props":218,"children":221},{"href":219,"rel":220},"https://docs.tweepy.org/en/v3.10.0/api.html?highlight=get_user#API.get_user",[66],[222],{"type":49,"value":223},".get_user()",{"type":43,"tag":184,"props":225,"children":226},{},[227],{"type":43,"tag":62,"props":228,"children":231},{"href":229,"rel":230},"https://docs.tweepy.org/en/latest/client.html?highlight=get_users_following#tweepy.client.get_users_following",[66],[232],{"type":49,"value":233},".get_users_following()",{"type":43,"tag":184,"props":235,"children":236},{},[237],{"type":43,"tag":62,"props":238,"children":241},{"href":239,"rel":240},"https://docs.tweepy.org/en/latest/api.html?highlight=add_list_members#tweepy.api.add_list_members",[66],[242],{"type":49,"value":243},".add_list_members",{"type":43,"tag":124,"props":245,"children":247},{"id":246},"authenticating-with-twitters-api-using-tweepy",[248],{"type":49,"value":249},"Authenticating with Twitter's API using Tweepy",{"type":43,"tag":52,"props":251,"children":252},{},[253],{"type":43,"tag":56,"props":254,"children":255},{},[256,258,264],{"type":49,"value":257},"This tutorial will assume you already have a Twitter developer account. If you do not, I went into detail ",{"type":43,"tag":62,"props":259,"children":262},{"href":260,"rel":261},"https://codybontecou.com/programmatically-tweeting-with-nodejs.html#getting-authenticated",[66],[263],{"type":49,"value":69},{"type":49,"value":265}," on how to generate the proper authentication keys needed to access Twitter's API.",{"type":43,"tag":56,"props":267,"children":268},{},[269,271,278,280,286,288,293,295,301,303,308,309,314,316,322],{"type":49,"value":270},"Tweepy provides the helper function ",{"type":43,"tag":272,"props":273,"children":275},"code",{"className":274},[],[276],{"type":49,"value":277},".OAuthHandler",{"type":49,"value":279}," that requires you to pass it your ",{"type":43,"tag":281,"props":282,"children":283},"em",{},[284],{"type":49,"value":285},"consumer key",{"type":49,"value":287}," and ",{"type":43,"tag":281,"props":289,"children":290},{},[291],{"type":49,"value":292},"consumer secret",{"type":49,"value":294}," initializing the auth object, you then must call its method ",{"type":43,"tag":272,"props":296,"children":298},{"className":297},[],[299],{"type":49,"value":300},".set_access_token()",{"type":49,"value":302}," which requires your ",{"type":43,"tag":281,"props":304,"children":305},{},[306],{"type":49,"value":307},"access token",{"type":49,"value":287},{"type":43,"tag":281,"props":310,"children":311},{},[312],{"type":49,"value":313},"access token secret",{"type":49,"value":315}," given to you when creating your developer account and ",{"type":43,"tag":62,"props":317,"children":319},{"href":260,"rel":318},[66],[320],{"type":49,"value":321},"generating your app",{"type":49,"value":104},{"type":43,"tag":324,"props":325,"children":329},"pre",{"className":326,"code":328,"language":18,"meta":6},[327],"language-python","import tweepy\n\nauth = tweepy.OAuthHandler(os.getenv(\"consumer_key\"), os.getenv(\"consumer_secret\"))\nauth.set_access_token(os.getenv(\"access_token\"), os.getenv(\"access_token_secret\"))\n",[330],{"type":43,"tag":272,"props":331,"children":332},{"__ignoreMap":6},[333],{"type":49,"value":328},{"type":43,"tag":124,"props":335,"children":337},{"id":336},"initializing-tweepys-api-and-client-objects",[338],{"type":49,"value":339},"Initializing Tweepy's API and Client objects",{"type":43,"tag":56,"props":341,"children":342},{},[343,345,351,352,358],{"type":49,"value":344},"We can now utilize our auth variable to create ",{"type":43,"tag":62,"props":346,"children":348},{"href":189,"rel":347},[66],[349],{"type":49,"value":350},"API",{"type":49,"value":287},{"type":43,"tag":62,"props":353,"children":355},{"href":199,"rel":354},[66],[356],{"type":49,"value":357},"Client",{"type":49,"value":359}," objects using the following code:",{"type":43,"tag":324,"props":361,"children":364},{"className":362,"code":363,"language":18,"meta":6},[327],"api = tweepy.API(auth)\nclient = tweepy.Client(\n    bearer_token=os.getenv(\"bearer_token\"),\n    consumer_key=os.getenv(\"consumer_key\"),\n    consumer_secret=os.getenv(\"consumer_secret\"),\n    access_token=os.getenv(\"access_token\"),\n    access_token_secret=os.getenv(\"access_token_secret\"),\n    wait_on_rate_limit=True,\n)\n",[365],{"type":43,"tag":272,"props":366,"children":367},{"__ignoreMap":6},[368],{"type":49,"value":363},{"type":43,"tag":56,"props":370,"children":371},{},[372],{"type":49,"value":373},"With these objects, we can now access every Twitter endpoint.",{"type":43,"tag":124,"props":375,"children":377},{"id":376},"creating-a-list-using-tweepys-api",[378],{"type":49,"value":379},"Creating a List using Tweepy's API",{"type":43,"tag":56,"props":381,"children":382},{},[383],{"type":49,"value":384},"Tweepy methods used:",{"type":43,"tag":180,"props":386,"children":387},{},[388],{"type":43,"tag":184,"props":389,"children":390},{},[391,396,398,404,406,412],{"type":43,"tag":62,"props":392,"children":394},{"href":209,"rel":393},[66],[395],{"type":49,"value":213},{"type":49,"value":397},": Takes three parameters: name, mode, and description. Name and description are self-explanatory and mode can either be ",{"type":43,"tag":272,"props":399,"children":401},{"className":400},[],[402],{"type":49,"value":403},"\"public\"",{"type":49,"value":405}," or ",{"type":43,"tag":272,"props":407,"children":409},{"className":408},[],[410],{"type":49,"value":411},"\"private\"",{"type":49,"value":413}," to define the visibility status of the List.",{"type":43,"tag":56,"props":415,"children":416},{},[417,419,425],{"type":49,"value":418},"The response from a successfully List creation returns the List data. I will be using this list later on, so I decided to extract it's id into the variable ",{"type":43,"tag":272,"props":420,"children":422},{"className":421},[],[423],{"type":49,"value":424},"list_id",{"type":49,"value":104},{"type":43,"tag":324,"props":427,"children":430},{"className":428,"code":429,"language":18,"meta":6},[327],"list_name = \"Paul Grahams's Feed\"\nlist_description = \"A list of everyone Paul Graham follows\"\n\ntwitter_list = api.create_list(name=list_name, description=list_description)\nlist_id = twitter_list._json[\"id\"]\n",[431],{"type":43,"tag":272,"props":432,"children":433},{"__ignoreMap":6},[434],{"type":49,"value":429},{"type":43,"tag":124,"props":436,"children":438},{"id":437},"getting-a-user-and-the-accounts-they-follow",[439],{"type":49,"value":440},"Getting a User and the accounts they follow",{"type":43,"tag":56,"props":442,"children":443},{},[444],{"type":49,"value":384},{"type":43,"tag":180,"props":446,"children":447},{},[448,456],{"type":43,"tag":184,"props":449,"children":450},{},[451],{"type":43,"tag":62,"props":452,"children":454},{"href":219,"rel":453},[66],[455],{"type":49,"value":223},{"type":43,"tag":184,"props":457,"children":458},{},[459],{"type":43,"tag":62,"props":460,"children":462},{"href":229,"rel":461},[66],[463],{"type":49,"value":233},{"type":43,"tag":56,"props":465,"children":466},{},[467,469,475],{"type":49,"value":468},"By passing ",{"type":43,"tag":272,"props":470,"children":472},{"className":471},[],[473],{"type":49,"value":474},"client.get_user()",{"type":49,"value":476}," a twitter handle - in this case, Paul Graham - I can get all of the public data Twitter provides regarding that user.",{"type":43,"tag":56,"props":478,"children":479},{},[480,482,488,490,496],{"type":49,"value":481},"I then use that user's data with ",{"type":43,"tag":272,"props":483,"children":485},{"className":484},[],[486],{"type":49,"value":487},"client.get_users_following()",{"type":49,"value":489}," alongside max_results. The argument ",{"type":43,"tag":272,"props":491,"children":493},{"className":492},[],[494],{"type":49,"value":495},"max_results",{"type":49,"value":497}," defines how many user objects Twitter will pass back. In this case, I used the max of 1000. The default is 100.",{"type":43,"tag":324,"props":499,"children":502},{"className":500,"code":501,"language":18,"meta":6},[327],"twitter_handle = \"paulg\"\nuser = client.get_user(username=twitter_handle)\n\nfollowers = client.get_users_following(id=user.data.id, max_results=1000)\n",[503],{"type":43,"tag":272,"props":504,"children":505},{"__ignoreMap":6},[506],{"type":49,"value":501},{"type":43,"tag":124,"props":508,"children":510},{"id":509},"automatially-adding-users-to-the-list",[511],{"type":49,"value":512},"Automatially adding users to the list",{"type":43,"tag":56,"props":514,"children":515},{},[516],{"type":49,"value":384},{"type":43,"tag":180,"props":518,"children":519},{},[520],{"type":43,"tag":184,"props":521,"children":522},{},[523],{"type":43,"tag":62,"props":524,"children":526},{"href":239,"rel":525},[66],[527],{"type":49,"value":243},{"type":43,"tag":56,"props":529,"children":530},{},[531,533,539],{"type":49,"value":532},"Now that we have the List we want to populate and the followers we want populate it with, we use the ",{"type":43,"tag":272,"props":534,"children":536},{"className":535},[],[537],{"type":49,"value":538},"api.add_list_members()",{"type":49,"value":540}," method.",{"type":43,"tag":56,"props":542,"children":543},{},[544],{"type":49,"value":545},"This method takes a list of up to 100 Twitter User ID's. The code snippet below chunks out follower data into sections of 100 Users and generates a list of ids to pass.",{"type":43,"tag":56,"props":547,"children":548},{},[549,551,556],{"type":49,"value":550},"We are also passing this method the ",{"type":43,"tag":272,"props":552,"children":554},{"className":553},[],[555],{"type":49,"value":424},{"type":49,"value":557}," that was saved when we created the list.",{"type":43,"tag":324,"props":559,"children":562},{"className":560,"code":561,"language":18,"meta":6},[327],"for i in range(0, len(followers.data), 100):\n    ids = [follower[\"id\"] for follower in followers.data[i : i + 100]]\n    api.add_list_members(list_id=list_id, user_id=ids)\n",[563],{"type":43,"tag":272,"props":564,"children":565},{"__ignoreMap":6},[566],{"type":49,"value":561},{"type":43,"tag":124,"props":568,"children":570},{"id":569},"things-to-keep-in-mind-when-working-with-twitters-api",[571],{"type":49,"value":572},"Things to keep in mind when working with Twitter's API",{"type":43,"tag":56,"props":574,"children":575},{},[576,578,585],{"type":49,"value":577},"Twitter rate limits just about all of their endpoints. ",{"type":43,"tag":62,"props":579,"children":582},{"href":580,"rel":581},"https://developer.twitter.com/en/docs/twitter-api/v1/rate-limits",[66],[583],{"type":49,"value":584},"Here",{"type":49,"value":586}," is Twitter's documentation on what the rate limits are. Keep this is mind when developing Twitter-based applications because you may find yourself with an odd error.",{"type":43,"tag":56,"props":588,"children":589},{},[590],{"type":49,"value":591},"Thank you for reading! I hope you enjoyed it.",{"title":6,"searchDepth":593,"depth":593,"links":594},2,[595,596,597,598,599,600,601,602],{"id":126,"depth":593,"text":129},{"id":150,"depth":593,"text":153},{"id":246,"depth":593,"text":249},{"id":336,"depth":593,"text":339},{"id":376,"depth":593,"text":379},{"id":437,"depth":593,"text":440},{"id":509,"depth":593,"text":512},{"id":569,"depth":593,"text":572},"markdown","content:generate-twitter-lists-with-python.md","content","generate-twitter-lists-with-python.md","generate-twitter-lists-with-python","md",1731182684872]