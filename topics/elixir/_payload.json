[{"data":1,"prerenderedAt":296},["ShallowReactive",2],{"post-/topics/elixir":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"last_modified_date":14,"slug":15,"dropdown":16,"meta":17,"canonicalUrl":31,"topics":32,"body":36,"_type":291,"_id":292,"_source":293,"_file":294,"_stem":15,"_extension":295},"/mocking-http-responses-in-elixir-and-phoenix","",false,"Mocking HTTP Responses in Elixir and Phoenix","A quick walkthrough of the configuration needed to support mocks and modules only used within your Elixir tests","post",{"name":12,"image":13},"Cody Bontecou","/assets/img/cody.64b57256.jpg","2023-08-13T00:00:00.000Z","mocking-http-responses-in-elixir-and-phoenix","Elixir",[18,20,23,25,27,29],{"name":19,"content":9},"og:description",{"name":21,"content":22},"og:image","https://codybontecou.com/images/mocking-http-responses-in-elixir-and-phoenix.png",{"name":24,"content":9},"og:image:alt",{"name":26,"content":8},"og:title",{"name":28,"content":8},"twitter:title",{"name":30,"content":8},"twitter:text:title","https://codybontecou.com/mocking-http-responses-in-elixir-and-phoenix.html",[33,34,35],"elixir","testing","mocking",{"type":37,"children":38,"toc":285},"root",[39,49,56,66,73,78,89,94,103,123,129,150,174,201,210,215,266,272],{"type":40,"tag":41,"props":42,"children":43},"element","h1",{"id":6},[44],{"type":40,"tag":45,"props":46,"children":48},"binding",{"value":47},"$frontmatter.title",[],{"type":40,"tag":50,"props":51,"children":52},"p",{},[53],{"type":54,"value":55},"text","I just came across this error while attempting to mock the response of a 3rd party api:",{"type":40,"tag":50,"props":57,"children":58},{},[59],{"type":40,"tag":60,"props":61,"children":63},"code",{"className":62},[],[64],{"type":54,"value":65},"** (UndefinedFunctionError) function LeagueInfoMocks.get_live/0 is undefined (module LeagueInfoMocks is not available)",{"type":40,"tag":67,"props":68,"children":70},"h2",{"id":69},"the-problem",[71],{"type":54,"value":72},"The Problem",{"type":40,"tag":50,"props":74,"children":75},{},[76],{"type":54,"value":77},"I couldn't wrap my head around it. I have this simple mock module defined:",{"type":40,"tag":79,"props":80,"children":84},"pre",{"className":81,"code":83,"language":33,"meta":6},[82],"language-elixir","defmodule LeagueInfoMocks do\n  def get_live do\n    %{...}\n  end\nend\n\n",[85],{"type":40,"tag":60,"props":86,"children":87},{"__ignoreMap":6},[88],{"type":54,"value":83},{"type":40,"tag":50,"props":90,"children":91},{},[92],{"type":54,"value":93},"And a test module to interact with the get_live function:",{"type":40,"tag":79,"props":95,"children":98},{"className":96,"code":97,"language":33,"meta":6},[82],"defmodule LeagueInfoTest do\n  use ExUnit.Case\n  test \"format_info\" do\n    data = LeagueInfoMocks.get_live()\n\n    [match | _tail] = data\n\n    assert LeagueInfo.format_info(data) == %{...}\n  end\nend\n\n",[99],{"type":40,"tag":60,"props":100,"children":101},{"__ignoreMap":6},[102],{"type":54,"value":97},{"type":40,"tag":50,"props":104,"children":105},{},[106,108,114,116,121],{"type":54,"value":107},"But running ",{"type":40,"tag":60,"props":109,"children":111},{"className":110},[],[112],{"type":54,"value":113},"mix test",{"type":54,"value":115}," would consistently give me the ",{"type":40,"tag":60,"props":117,"children":119},{"className":118},[],[120],{"type":54,"value":65},{"type":54,"value":122},".",{"type":40,"tag":67,"props":124,"children":126},{"id":125},"the-solution",[127],{"type":54,"value":128},"The Solution",{"type":40,"tag":50,"props":130,"children":131},{},[132,134,140,142,148],{"type":54,"value":133},"Most articles and threads mentioned moving the ",{"type":40,"tag":60,"props":135,"children":137},{"className":136},[],[138],{"type":54,"value":139},"LeagueInfoMocks",{"type":54,"value":141}," module in the ",{"type":40,"tag":60,"props":143,"children":145},{"className":144},[],[146],{"type":54,"value":147},"test/support/*",{"type":54,"value":149}," directory, so I did. This didn't change the error message.",{"type":40,"tag":50,"props":151,"children":152},{},[153,155,164,166,172],{"type":54,"value":154},"I eventually found ",{"type":40,"tag":156,"props":157,"children":161},"a",{"href":158,"rel":159},"https://stackoverflow.com/a/73967553/6642089",[160],"nofollow",[162],{"type":54,"value":163},"this",{"type":54,"value":165}," Stackoverflow comment that mentioned some configuration needed in the ",{"type":40,"tag":60,"props":167,"children":169},{"className":168},[],[170],{"type":54,"value":171},"mix.exs",{"type":54,"value":173}," file.",{"type":40,"tag":50,"props":175,"children":176},{},[177,179,185,187,192,194,199],{"type":54,"value":178},"Supposedly, ",{"type":40,"tag":60,"props":180,"children":182},{"className":181},[],[183],{"type":54,"value":184},"mix phx.new",{"type":54,"value":186}," adds the ",{"type":40,"tag":60,"props":188,"children":190},{"className":189},[],[191],{"type":54,"value":147},{"type":54,"value":193}," support when a Phoenix project is created. In my case, I'm building off of a simple Elixir application. This required me to configure my ",{"type":40,"tag":60,"props":195,"children":197},{"className":196},[],[198],{"type":54,"value":171},{"type":54,"value":200}," file to look like so:",{"type":40,"tag":79,"props":202,"children":205},{"className":203,"code":204,"language":33,"meta":6},[82],"defmodule LolesportsConsumer.MixProject do\n  use Mix.Project\n\n  def project do\n    [\n      app: :lolesports_consumer,\n      version: \"0.1.0\",\n      elixir: \"~> 1.15\",\n      start_permanent: Mix.env() == :prod,\n      deps: deps(),\n      elixirc_paths: elixirc_paths(Mix.env())\n    ]\n  end\n\n  # Run \"mix help compile.app\" to learn about applications.\n  def application do\n    [\n      extra_applications: [:logger]\n    ]\n  end\n\n  # Run \"mix help deps\" to learn about dependencies.\n  defp deps do\n    [\n      {:httpoison, \"~> 2.1\"},\n      {:jason, \"~> 1.4\"}\n    ]\n  end\n\n  defp elixirc_paths(:test), do: [\"lib\", \"test/support\"]\n  defp elixirc_paths(_), do: [\"lib\"]\nend\n\n",[206],{"type":40,"tag":60,"props":207,"children":208},{"__ignoreMap":6},[209],{"type":54,"value":204},{"type":40,"tag":50,"props":211,"children":212},{},[213],{"type":54,"value":214},"The key differences were:",{"type":40,"tag":216,"props":217,"children":218},"ol",{},[219,239],{"type":40,"tag":220,"props":221,"children":222},"li",{},[223,225,231,233],{"type":54,"value":224},"Adding ",{"type":40,"tag":60,"props":226,"children":228},{"className":227},[],[229],{"type":54,"value":230},"elixirc_paths: elixirc_paths(Mix.env())",{"type":54,"value":232}," to ",{"type":40,"tag":60,"props":234,"children":236},{"className":235},[],[237],{"type":54,"value":238},"project",{"type":40,"tag":220,"props":240,"children":241},{},[242,244],{"type":54,"value":243},"Adding these two lines to the file:\n",{"type":40,"tag":245,"props":246,"children":247},"ul",{},[248,257],{"type":40,"tag":220,"props":249,"children":250},{},[251],{"type":40,"tag":60,"props":252,"children":254},{"className":253},[],[255],{"type":54,"value":256},"defp elixirc_paths(:test), do: [\"lib\", \"test/support\"]",{"type":40,"tag":220,"props":258,"children":259},{},[260],{"type":40,"tag":60,"props":261,"children":263},{"className":262},[],[264],{"type":54,"value":265},"defp elixirc_paths(_), do: [\"lib\"]",{"type":40,"tag":67,"props":267,"children":269},{"id":268},"conclusion",[270],{"type":54,"value":271},"Conclusion",{"type":40,"tag":50,"props":273,"children":274},{},[275,277,283],{"type":54,"value":276},"With these configuration changes, I am able to properly call ",{"type":40,"tag":60,"props":278,"children":280},{"className":279},[],[281],{"type":54,"value":282},"LeagueInfoMocks.get_live()",{"type":54,"value":284}," and write tests against an expected HTTP response.",{"title":6,"searchDepth":286,"depth":286,"links":287},2,[288,289,290],{"id":69,"depth":286,"text":72},{"id":125,"depth":286,"text":128},{"id":268,"depth":286,"text":271},"markdown","content:mocking-http-responses-in-elixir-and-phoenix.md","content","mocking-http-responses-in-elixir-and-phoenix.md","md",1731207994598]