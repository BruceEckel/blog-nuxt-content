[{"data":1,"prerenderedAt":781},["ShallowReactive",2],{"post-/topics/pinia":3},[4,92,431],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"last_modified_date":14,"slug":15,"dropdown":16,"meta":17,"canonicalUrl":31,"topics":32,"created_at":35,"last_modified":36,"body":37,"_type":87,"_id":88,"_source":89,"_file":90,"_stem":15,"_extension":91},"/import-pinia-store-into-other-store","",false,"Import Pinia Store Into Other Store","Learn how to access other stores within a store using Pinia.","post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2022-09-28T00:00:00.000Z","import-pinia-store-into-other-store","Pinia",[18,20,23,25,27,29],{"name":19,"content":9},"og:description",{"name":21,"content":22},"og:image","https://codybontecou.com/images/cypress-component-testing-with-nuxt-3.png",{"name":24,"content":9},"og:image:alt",{"name":26,"content":8},"og:title",{"name":28,"content":8},"twitter:title",{"name":30,"content":8},"twitter:text:title","https://codybontecou.com/import-pinia-store-into-other-store.html",[33,34,16],"Vue","State","2024-10-31T14:26","2024-11-09T21:19",{"type":38,"children":39,"toc":84},"root",[40,52,57,70,75],{"type":41,"tag":42,"props":43,"children":44},"element","blockquote",{},[45],{"type":41,"tag":46,"props":47,"children":48},"p",{},[49],{"type":50,"value":51},"text","Pinia makes state management within Vue apps a breeze to work with.",{"type":41,"tag":46,"props":53,"children":54},{},[55],{"type":50,"value":56},"A common problem I run into is needing to access state from a different store. This can be solved using Pinia's composition syntax rather than the option syntax.",{"type":41,"tag":58,"props":59,"children":64},"pre",{"className":60,"code":62,"language":63,"meta":6},[61],"language-ts","// store/count.js\nimport { ref } from 'vue'\nimport { defineStore } from 'pinia'\n\nexport const useCountStore = defineStore('count-store', () => {\n  const count = ref(0)\n\n  function increaseCount() {\n    count = count + 1\n  }\n\n  return { count, increaseCount }\n})\n","ts",[65],{"type":41,"tag":66,"props":67,"children":68},"code",{"__ignoreMap":6},[69],{"type":50,"value":62},{"type":41,"tag":46,"props":71,"children":72},{},[73],{"type":50,"value":74},"They can now be imported and used within other Pinia stores like so:",{"type":41,"tag":58,"props":76,"children":79},{"className":77,"code":78,"language":63,"meta":6},[61],"// store/api.js\nimport { ref } from 'vue'\nimport { defineStore, storeToRefs } from 'pinia'\nimport { useCountStore } from './count'\n\nexport const useApiStore = defineStore('api-store', () => {\n  const countStore = useCountStore()\n  const { count } = storeToRefs(countStore)\n  const { increaseCount } = countStore\n\n  function displayCount() {\n    console.log(count)\n  }\n\n  function increment() {\n    increaseCount()\n  }\n\n  return { displayCount, increment }\n})\n",[80],{"type":41,"tag":66,"props":81,"children":82},{"__ignoreMap":6},[83],{"type":50,"value":78},{"title":6,"searchDepth":85,"depth":85,"links":86},2,[],"markdown","content:import-pinia-store-into-other-store.md","content","import-pinia-store-into-other-store.md","md",{"_path":93,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":94,"description":95,"type":10,"author":96,"date":97,"category":98,"dropdown":99,"tags":100,"meta":105,"canonicalUrl":114,"topics":115,"created_at":35,"last_modified":36,"body":117,"_type":87,"_id":428,"_source":89,"_file":429,"_stem":430,"_extension":91},"/nuxt3-and-pinia","Nuxt 3 and Pinia","Integrate Pinia as your state management library for your Nuxt 3 application.",{"name":12,"image":13},"2022-02-15T00:00:00.000Z","tutorials","NuxtJS",[101,33,102,103,104],"vue","Vite","Route","nuxt",[106,107,108,110,111,112,113],{"name":26,"content":94},{"name":19,"content":95},{"name":21,"content":109},"https://codybontecou.com/images/nuxt3-and-pinia-meta.png",{"name":24,"content":94},{"name":26,"content":94},{"name":28,"content":94},{"name":30,"content":94},"https://codybontecou.com/nuxt3-and-pinia.html",[116,16,34,33],"Nuxt",{"type":38,"children":118,"toc":420},[119,126,133,138,143,152,167,173,178,189,195,208,217,223,228,237,266,280,286,291,296,307,312,356,362,367,377,406],{"type":41,"tag":42,"props":120,"children":121},{},[122],{"type":41,"tag":46,"props":123,"children":124},{},[125],{"type":50,"value":95},{"type":41,"tag":127,"props":128,"children":130},"h2",{"id":129},"vuex-pinia",[131],{"type":50,"value":132},"Vuex -> Pinia",{"type":41,"tag":46,"props":134,"children":135},{},[136],{"type":50,"value":137},"Evan You, the creator of Vue himself, has stated \"Pinia is de facto Vuex 5! At this point it’s really a naming/branding issue.\"",{"type":41,"tag":46,"props":139,"children":140},{},[141],{"type":50,"value":142},"For the time being, it's probably best to be looking towards Pinia content rather than Vuex.",{"type":41,"tag":46,"props":144,"children":145},{},[146],{"type":41,"tag":147,"props":148,"children":151},"img",{"alt":149,"src":150},"\"Pinia is de facto Vuex 5! At this point it’s really a naming/branding issue.\"","https://codybontecou.com/images/evan-pinia-tweet.png",[],{"type":41,"tag":46,"props":153,"children":154},{},[155,157,165],{"type":50,"value":156},"I recommend reading VueJS's official ",{"type":41,"tag":158,"props":159,"children":163},"a",{"href":160,"rel":161},"https://vuejs.org/guide/scaling-up/state-management.html#pinia",[162],"nofollow",[164],{"type":50,"value":10},{"type":50,"value":166}," regarding this to get a better understanding as to why Pinia > Vuex.",{"type":41,"tag":127,"props":168,"children":170},{"id":169},"installing-pinia-in-nuxt-3",[171],{"type":50,"value":172},"Installing Pinia in Nuxt 3",{"type":41,"tag":46,"props":174,"children":175},{},[176],{"type":50,"value":177},"Pinia nearly comes with first-class support for Nuxt 3. You'll need to install two packages:",{"type":41,"tag":58,"props":179,"children":184},{"className":180,"code":182,"language":183,"meta":6},[181],"language-shell","yarn add pinia\nyarn add @pinia/nuxt\n","shell",[185],{"type":41,"tag":66,"props":186,"children":187},{"__ignoreMap":6},[188],{"type":50,"value":182},{"type":41,"tag":127,"props":190,"children":192},{"id":191},"add-pinia-to-your-nuxtconfig-file",[193],{"type":50,"value":194},"Add Pinia to your nuxt.config file",{"type":41,"tag":46,"props":196,"children":197},{},[198,200,206],{"type":50,"value":199},"You'll need to add ",{"type":41,"tag":66,"props":201,"children":203},{"className":202},[],[204],{"type":50,"value":205},"'@pinia/nuxt'",{"type":50,"value":207}," to your modules array.",{"type":41,"tag":58,"props":209,"children":212},{"className":210,"code":211,"language":63,"meta":6},[61],"// nuxt.config.ts\nexport default defineNuxtConfig({\n  modules: ['@pinia/nuxt'],\n})\n",[213],{"type":41,"tag":66,"props":214,"children":215},{"__ignoreMap":6},[216],{"type":50,"value":211},{"type":41,"tag":127,"props":218,"children":220},{"id":219},"build-your-pinia-store",[221],{"type":50,"value":222},"Build your Pinia store",{"type":41,"tag":46,"props":224,"children":225},{},[226],{"type":50,"value":227},"Now build a named store. For my use-case, I needed to manage state regarding filters, so the skeleton of my store looks like:",{"type":41,"tag":58,"props":229,"children":232},{"className":230,"code":231,"language":63,"meta":6},[61],"// store/filters.ts\nimport { defineStore } from 'pinia'\n\nexport const useFiltersStore = defineStore({\n  id: 'filter-store',\n  state: () => {\n    return {\n      filtersList: ['youtube', 'twitch'],\n    }\n  },\n  actions: {\n    addValueToFilterList(value: string) {\n      this.filtersList.push(value)\n    },\n  },\n  getters: {\n    filtersList: state => state.filtersList,\n  },\n})\n",[233],{"type":41,"tag":66,"props":234,"children":235},{"__ignoreMap":6},[236],{"type":50,"value":231},{"type":41,"tag":46,"props":238,"children":239},{},[240,242,248,250,256,258,264],{"type":50,"value":241},"This is just showing the general structure of your store. The key is to ",{"type":41,"tag":66,"props":243,"children":245},{"className":244},[],[246],{"type":50,"value":247},"defineStore",{"type":50,"value":249}," and make sure to include an ",{"type":41,"tag":66,"props":251,"children":253},{"className":252},[],[254],{"type":50,"value":255},"id",{"type":50,"value":257},". In this case, I'm using ",{"type":41,"tag":66,"props":259,"children":261},{"className":260},[],[262],{"type":50,"value":263},"'filter-store'",{"type":50,"value":265}," as my id but it could be anything you prefer.",{"type":41,"tag":46,"props":267,"children":268},{},[269,271,278],{"type":50,"value":270},"Read over Pinia's ",{"type":41,"tag":158,"props":272,"children":275},{"href":273,"rel":274},"https://pinia.vuejs.org/core-concepts/",[162],[276],{"type":50,"value":277},"Docs",{"type":50,"value":279}," to get a better grasp of how to use Pinia properly.",{"type":41,"tag":127,"props":281,"children":283},{"id":282},"alternative-pinia-store-syntax",[284],{"type":50,"value":285},"Alternative Pinia Store Syntax",{"type":41,"tag":46,"props":287,"children":288},{},[289],{"type":50,"value":290},"The above example is a valid Pinia store using a pattern similar to Vue's Options API. You can also define your store using a syntax similar to the Composition API.",{"type":41,"tag":46,"props":292,"children":293},{},[294],{"type":50,"value":295},"Here's how you can build the above example in a composable way:",{"type":41,"tag":58,"props":297,"children":302},{"className":298,"code":300,"language":301,"meta":6},[299],"language-js","// store/filters.ts\nimport { defineStore } from 'pinia'\n\nexport const useFiltersStore = defineStore('filterStore', () => {\n  const filtersList = ref(['youtube', 'twitch'])\n\n  function addValueToFilterList(value: string) {\n    filtersList.value.push(value)\n  }\n  return { addValueToFilterList, filtersList }\n})\n","js",[303],{"type":41,"tag":66,"props":304,"children":305},{"__ignoreMap":6},[306],{"type":50,"value":300},{"type":41,"tag":46,"props":308,"children":309},{},[310],{"type":50,"value":311},"We just reduced the amount of code significantly. Pretty cool, right? I personally prefer the composition.",{"type":41,"tag":46,"props":313,"children":314},{},[315,317,323,325,331,333,339,341,347,348,354],{"type":50,"value":316},"Instead of relying on the ",{"type":41,"tag":66,"props":318,"children":320},{"className":319},[],[321],{"type":50,"value":322},"state",{"type":50,"value":324},", ",{"type":41,"tag":66,"props":326,"children":328},{"className":327},[],[329],{"type":50,"value":330},"action",{"type":50,"value":332},", and ",{"type":41,"tag":66,"props":334,"children":336},{"className":335},[],[337],{"type":50,"value":338},"getter",{"type":50,"value":340}," boilerplate, we use Vue's ",{"type":41,"tag":66,"props":342,"children":344},{"className":343},[],[345],{"type":50,"value":346},"ref",{"type":50,"value":324},{"type":41,"tag":66,"props":349,"children":351},{"className":350},[],[352],{"type":50,"value":353},"computed",{"type":50,"value":355},", and traditional Javascript functions to manage our state.",{"type":41,"tag":127,"props":357,"children":359},{"id":358},"bring-pinia-in-vue-component",[360],{"type":50,"value":361},"Bring Pinia in Vue Component",{"type":41,"tag":46,"props":363,"children":364},{},[365],{"type":50,"value":366},"With our store in place, simply import it into the component you want to use it in and have fun!",{"type":41,"tag":58,"props":368,"children":372},{"className":369,"code":371,"language":101,"meta":6},[370],"language-vue","// components/FilterMenu.vue\n\u003Cscript setup>\nimport { useFiltersStore } from '~/store/filters'\nimport { storeToRefs } from 'pinia'\n\nconst inputVal = ref('')\n\nconst filtersStore = useFiltersStore()\nconst { addValueToFilterList } = filtersStore\nconst { filtersList } = storeToRefs(filtersStore)\n\u003C/script>\n\n\u003Ctemplate>\n  \u003Cdiv>\n    {{ filtersList }}\n    \u003Cinput v-model=\"inputVal\" />\n    \u003Cbutton @click=\"addValueToFilterList(inputVal)\">+\u003C/button>\n  \u003C/div>\n\u003C/template>\n",[373],{"type":41,"tag":66,"props":374,"children":375},{"__ignoreMap":6},[376],{"type":50,"value":371},{"type":41,"tag":46,"props":378,"children":379},{},[380,382,388,390,396,398,404],{"type":50,"value":381},"The line ",{"type":41,"tag":66,"props":383,"children":385},{"className":384},[],[386],{"type":50,"value":387},"import { storeToRefs } from 'pinia'",{"type":50,"value":389}," allows us to maintain a reactive getter. In this case, we are destructuring the ",{"type":41,"tag":66,"props":391,"children":393},{"className":392},[],[394],{"type":50,"value":395},"filterList",{"type":50,"value":397}," getter from our ",{"type":41,"tag":66,"props":399,"children":401},{"className":400},[],[402],{"type":50,"value":403},"filtersStore",{"type":50,"value":405},".",{"type":41,"tag":46,"props":407,"children":408},{},[409,411,418],{"type":50,"value":410},"Here's the ",{"type":41,"tag":158,"props":412,"children":415},{"href":413,"rel":414},"https://github.com/CodyBontecou/nuxt3-and-pinia",[162],[416],{"type":50,"value":417},"repo",{"type":50,"value":419}," if you'd like to see a working project.",{"title":6,"searchDepth":85,"depth":85,"links":421},[422,423,424,425,426,427],{"id":129,"depth":85,"text":132},{"id":169,"depth":85,"text":172},{"id":191,"depth":85,"text":194},{"id":219,"depth":85,"text":222},{"id":282,"depth":85,"text":285},{"id":358,"depth":85,"text":361},"content:nuxt3-and-pinia.md","nuxt3-and-pinia.md","nuxt3-and-pinia",{"_path":432,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":433,"description":434,"type":10,"author":435,"date":436,"category":98,"dropdown":437,"topics":438,"meta":440,"canonicalUrl":449,"created_at":35,"last_modified":36,"body":450,"_type":87,"_id":778,"_source":89,"_file":779,"_stem":780,"_extension":91},"/global-state-management-in-an-electron-app","Global State Management in an Electron Application","Learn to utilize Pinia alongside VueJS within an Electron app to easily manage UI state.",{"name":12,"image":13},"2021-11-30T00:00:00.000Z","Electron",[101,33,16,439,437,322],"Javascript",[441,442,443,445,447,448],{"name":26,"content":433},{"name":19,"content":434},{"name":21,"content":444},"https://codybontecou.com/images/global-state-management-in-an-electron-app-meta.png",{"name":24,"content":446},"State Management in an Electron Application",{"name":28,"content":433},{"name":30,"content":433},"https://codybontecou.com/global-state-management-in-an-electron-app.html",{"type":38,"children":451,"toc":771},[452,475,481,486,491,497,519,540,549,562,571,576,582,611,620,626,631,640,653,662,674,683,688,697,703,719,724,736,745,766],{"type":41,"tag":42,"props":453,"children":454},{},[455],{"type":41,"tag":46,"props":456,"children":457},{},[458,460,466,468,474],{"type":50,"value":459},"Bringing the VueJS tool ",{"type":41,"tag":158,"props":461,"children":464},{"href":462,"rel":463},"https://pinia.esm.dev/",[162],[465],{"type":50,"value":16},{"type":50,"value":467}," into our Electron application to manage its internal state. This post assumes you have followed along with my previous ",{"type":41,"tag":158,"props":469,"children":472},{"href":470,"rel":471},"https://codybontecou.com/electron-app-with-vuejs-and-vite.html",[162],[473],{"type":50,"value":10},{"type":50,"value":405},{"type":41,"tag":127,"props":476,"children":478},{"id":477},"what-is-a-store",[479],{"type":50,"value":480},"What is a Store?",{"type":41,"tag":46,"props":482,"children":483},{},[484],{"type":50,"value":485},"A Store is an entity that manages the global state of your application. It allows you to read and write to, regardless of the component you are working within.",{"type":41,"tag":46,"props":487,"children":488},{},[489],{"type":50,"value":490},"You may have heard of other packages that help manage a store, Vuex is the standard for Vue and Redux is the standard for React.",{"type":41,"tag":127,"props":492,"children":494},{"id":493},"installation",[495],{"type":50,"value":496},"Installation",{"type":41,"tag":42,"props":498,"children":499},{},[500],{"type":41,"tag":46,"props":501,"children":502},{},[503,505,509,511,518],{"type":50,"value":504},"This assumes you are using Vue 3. ",{"type":41,"tag":506,"props":507,"children":508},"br",{},[],{"type":50,"value":510},"\nIf you are using Vue 2, please refer to their ",{"type":41,"tag":158,"props":512,"children":515},{"href":513,"rel":514},"https://pinia.esm.dev/getting-started.html#installation",[162],[516],{"type":50,"value":517},"documentation",{"type":50,"value":405},{"type":41,"tag":46,"props":520,"children":521},{},[522,524,530,532,538],{"type":50,"value":523},"Because we are hooking this up to an Electron application, which is just Javascript with extra steps, we can utilize our favorite package manager such as ",{"type":41,"tag":66,"props":525,"children":527},{"className":526},[],[528],{"type":50,"value":529},"npm",{"type":50,"value":531}," or ",{"type":41,"tag":66,"props":533,"children":535},{"className":534},[],[536],{"type":50,"value":537},"yarn",{"type":50,"value":539}," to install Pinia.",{"type":41,"tag":58,"props":541,"children":544},{"className":542,"code":543,"language":183,"meta":6},[181],"yarn add pinia\n# or with npm\nnpm install pinia\n",[545],{"type":41,"tag":66,"props":546,"children":547},{"__ignoreMap":6},[548],{"type":50,"value":543},{"type":41,"tag":46,"props":550,"children":551},{},[552,554,560],{"type":50,"value":553},"Use the ",{"type":41,"tag":66,"props":555,"children":557},{"className":556},[],[558],{"type":50,"value":559},"createPinia",{"type":50,"value":561}," function to attach it to the VueJS app:",{"type":41,"tag":58,"props":563,"children":566},{"className":564,"code":565,"language":301,"meta":6},[299],"// renderer/main.js\n\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport { createPinia } from 'pinia'\n\ncreateApp(App)\n  .use(createPinia())\n  .mount('#app')\n",[567],{"type":41,"tag":66,"props":568,"children":569},{"__ignoreMap":6},[570],{"type":50,"value":565},{"type":41,"tag":46,"props":572,"children":573},{},[574],{"type":50,"value":575},"Pinia is now available throughout your Electron application where Vue is available.",{"type":41,"tag":127,"props":577,"children":579},{"id":578},"creating-our-first-store",[580],{"type":50,"value":581},"Creating our first store",{"type":41,"tag":46,"props":583,"children":584},{},[585,587,593,595,601,603,609],{"type":50,"value":586},"A store is defined using ",{"type":41,"tag":66,"props":588,"children":590},{"className":589},[],[591],{"type":50,"value":592},"defineStore()",{"type":50,"value":594}," and requires a ",{"type":41,"tag":596,"props":597,"children":598},"em",{},[599],{"type":50,"value":600},"unique",{"type":50,"value":602}," name. In this case, I am using ",{"type":41,"tag":66,"props":604,"children":606},{"className":605},[],[607],{"type":50,"value":608},"main",{"type":50,"value":610}," as the unique id attached to this store.",{"type":41,"tag":58,"props":612,"children":615},{"className":613,"code":614,"language":301,"meta":6},[299],"// renderer/stores/main.js\n\nimport { defineStore } from 'pinia'\n\n// useMainStore could be anything like useUser, useCart\n// the first argument is a unique id of the store across your application\nexport const useMainStore = defineStore('main', {\n  state: () => ({\n    msg: 'Hello World!',\n  }),\n  getters: {\n    message: state => state.msg,\n  },\n  actions: {},\n})\n",[616],{"type":41,"tag":66,"props":617,"children":618},{"__ignoreMap":6},[619],{"type":50,"value":614},{"type":41,"tag":127,"props":621,"children":623},{"id":622},"using-our-store-within-a-vuejs-component",[624],{"type":50,"value":625},"Using our store within a VueJS component",{"type":41,"tag":46,"props":627,"children":628},{},[629],{"type":50,"value":630},"Now that our store is made, we can import it into individual components, allowing our components to interact with the store.",{"type":41,"tag":58,"props":632,"children":635},{"className":633,"code":634,"language":301,"meta":6},[299],"import { useMainStore } from '@/stores/main'\n",[636],{"type":41,"tag":66,"props":637,"children":638},{"__ignoreMap":6},[639],{"type":50,"value":634},{"type":41,"tag":46,"props":641,"children":642},{},[643,645,651],{"type":50,"value":644},"Within the ",{"type":41,"tag":66,"props":646,"children":648},{"className":647},[],[649],{"type":50,"value":650},"setup",{"type":50,"value":652}," function, I call our store function and set the value within a const variable:",{"type":41,"tag":58,"props":654,"children":657},{"className":655,"code":656,"language":301,"meta":6},[299],"setup() {\n  const main = useMainStore()\n}\n",[658],{"type":41,"tag":66,"props":659,"children":660},{"__ignoreMap":6},[661],{"type":50,"value":656},{"type":41,"tag":46,"props":663,"children":664},{},[665,667,673],{"type":50,"value":666},"This allows me to interact with my store. For this simple example, I am displaying the message defined within the ",{"type":41,"tag":158,"props":668,"children":671},{"href":669,"rel":670},"https://pinia.esm.dev/core-concepts/getters.html",[162],[672],{"type":50,"value":338},{"type":50,"value":405},{"type":41,"tag":58,"props":675,"children":678},{"className":676,"code":677,"language":301,"meta":6},[299],"setup() {\n  const main = useMainStore()\n\n  return {\n    message: computed(() => main.message),\n}\n",[679],{"type":41,"tag":66,"props":680,"children":681},{"__ignoreMap":6},[682],{"type":50,"value":677},{"type":41,"tag":46,"props":684,"children":685},{},[686],{"type":50,"value":687},"The entire component can be seen below:",{"type":41,"tag":58,"props":689,"children":692},{"className":690,"code":691,"language":101,"meta":6},[370],"// renderer/components/Hello.vue\n\n\u003Ctemplate>\n  \u003Cdiv id=\"hello\">\n    \u003Cimg src=\"https://vuejs.org/images/logo.png\" />\n    \u003Ch1>{{ message }}\u003C/h1>\n  \u003C/div>\n\u003C/template>\n\n\u003Cscript>\nimport { computed, defineComponent } from 'vue'\nimport { useMainStore } from '@/stores/main'\n\nexport default defineComponent({\n  setup() {\n    const main = useMainStore()\n\n    return {\n      message: computed(() => main.message),\n    }\n  },\n})\n\u003C/script>\n",[693],{"type":41,"tag":66,"props":694,"children":695},{"__ignoreMap":6},[696],{"type":50,"value":691},{"type":41,"tag":127,"props":698,"children":700},{"id":699},"getting-hmr-to-work",[701],{"type":50,"value":702},"Getting HMR to work",{"type":41,"tag":42,"props":704,"children":705},{},[706],{"type":41,"tag":46,"props":707,"children":708},{},[709,711,718],{"type":50,"value":710},"While HMR is built into Pinia, it doesn't play well with Electron and requires a bit of additional configuration.\nPinia provides additional documentation of this topic ",{"type":41,"tag":158,"props":712,"children":715},{"href":713,"rel":714},"https://pinia.esm.dev/cookbook/hot-module-replacement.html",[162],[716],{"type":50,"value":717},"here",{"type":50,"value":405},{"type":41,"tag":46,"props":720,"children":721},{},[722],{"type":50,"value":723},"HMR (Hot Module Replacement) allows you to edit your stores and see the changes within your app without having to reload the page or restart your server.",{"type":41,"tag":46,"props":725,"children":726},{},[727,729,734],{"type":50,"value":728},"Here's what my ",{"type":41,"tag":66,"props":730,"children":732},{"className":731},[],[733],{"type":50,"value":608},{"type":50,"value":735}," store looks like after updating it to allow for HMR:",{"type":41,"tag":58,"props":737,"children":740},{"className":738,"code":739,"language":301,"meta":6},[299],"import { defineStore, acceptHMRUpdate } from 'pinia'\n\nexport const useMainStore = defineStore('main', {\n  state: () => ({\n    msg: 'Hello World!',\n  }),\n  getters: {\n    message: state => state.msg,\n  },\n  actions: {},\n})\n\nif (import.meta.hot) {\n  import.meta.hot.accept(acceptHMRUpdate(useMainStore, import.meta.hot))\n}\n",[741],{"type":41,"tag":66,"props":742,"children":743},{"__ignoreMap":6},[744],{"type":50,"value":739},{"type":41,"tag":46,"props":746,"children":747},{},[748,750,756,758,764],{"type":50,"value":749},"Passing ",{"type":41,"tag":66,"props":751,"children":753},{"className":752},[],[754],{"type":50,"value":755},"acceptHMRUpdate",{"type":50,"value":757}," your store (",{"type":41,"tag":66,"props":759,"children":761},{"className":760},[],[762],{"type":50,"value":763},"useMainStore",{"type":50,"value":765}," in my case), it gives us HMR!",{"type":41,"tag":46,"props":767,"children":768},{},[769],{"type":50,"value":770},"Hope you enjoyed!",{"title":6,"searchDepth":85,"depth":85,"links":772},[773,774,775,776,777],{"id":477,"depth":85,"text":480},{"id":493,"depth":85,"text":496},{"id":578,"depth":85,"text":581},{"id":622,"depth":85,"text":625},{"id":699,"depth":85,"text":702},"content:global-state-management-in-an-electron-app.md","global-state-management-in-an-electron-app.md","global-state-management-in-an-electron-app",1731570475167]