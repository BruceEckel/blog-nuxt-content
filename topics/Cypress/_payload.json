[{"data":1,"prerenderedAt":801},["ShallowReactive",2],{"post-/topics/Cypress":3},[4,519,600],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"last_modified_date":14,"slug":15,"dropdown":16,"meta":17,"canonicalUrl":31,"topics":32,"created_at":35,"last_modified":36,"body":37,"_type":514,"_id":515,"_source":516,"_file":517,"_stem":15,"_extension":518},"/cypress-component-testing-with-nuxt-3","",false,"Cypress Component Testing with Nuxt 3","Showing the setup needed to get Cypress Component Testing working alongside Nuxt 3","post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2023-03-20T00:00:00.000Z","cypress-component-testing-with-nuxt-3","Cypress",[18,20,23,25,27,29],{"name":19,"content":9},"og:description",{"name":21,"content":22},"og:image","https://codybontecou.com/images/cypress-component-testing-with-nuxt-3.png",{"name":24,"content":9},"og:image:alt",{"name":26,"content":8},"og:title",{"name":28,"content":8},"twitter:title",{"name":30,"content":8},"twitter:text:title","https://codybontecou.com/cypress-component-testing-with-nuxt-3.html",[33,34,16],"Testing","Nuxt","2024-10-31T14:26","2024-11-09T21:19",{"type":38,"children":39,"toc":502},"root",[40,52,59,72,78,87,93,106,117,122,135,144,157,166,171,196,203,211,216,224,248,259,272,285,294,300,313,318,331,342,355,364,377,386,392,406,411,431,444,453,464,473,478,483,489],{"type":41,"tag":42,"props":43,"children":44},"element","blockquote",{},[45],{"type":41,"tag":46,"props":47,"children":48},"p",{},[49],{"type":50,"value":51},"text","This is a guide on setting up Cypress Component Testing with Nuxt 3.",{"type":41,"tag":53,"props":54,"children":56},"h2",{"id":55},"initialize-nuxt-project",[57],{"type":50,"value":58},"Initialize Nuxt project",{"type":41,"tag":60,"props":61,"children":66},"pre",{"code":62,"language":63,"meta":6,"className":64},"npx nuxi init nuxt-project\ncd nuxt-project\nnpm install\n","shell",[65],"language-shell",[67],{"type":41,"tag":68,"props":69,"children":70},"code",{"__ignoreMap":6},[71],{"type":50,"value":62},{"type":41,"tag":53,"props":73,"children":75},{"id":74},"install-initialize-cypress",[76],{"type":50,"value":77},"Install + initialize Cypress",{"type":41,"tag":60,"props":79,"children":82},{"code":80,"language":63,"meta":6,"className":81},"npm install cypress typescript --save-dev\nnpx cypress open\n",[65],[83],{"type":41,"tag":68,"props":84,"children":85},{"__ignoreMap":6},[86],{"type":50,"value":80},{"type":41,"tag":53,"props":88,"children":90},{"id":89},"configure-cypress",[91],{"type":50,"value":92},"Configure Cypress",{"type":41,"tag":46,"props":94,"children":95},{},[96,98,104],{"type":50,"value":97},"Create a ",{"type":41,"tag":68,"props":99,"children":101},{"className":100},[],[102],{"type":50,"value":103},"cypress.config.ts",{"type":50,"value":105}," file in your root directory and add the following:",{"type":41,"tag":60,"props":107,"children":112},{"code":108,"language":109,"meta":6,"className":110},"// cypress.config.ts\nimport { defineConfig } from 'cypress'\n\nmodule.exports = defineConfig({\n  component: {\n    devServer: {\n      framework: 'vue',\n      bundler: 'vite',\n    },\n  },\n})\n","ts",[111],"language-ts",[113],{"type":41,"tag":68,"props":114,"children":115},{"__ignoreMap":6},[116],{"type":50,"value":108},{"type":41,"tag":46,"props":118,"children":119},{},[120],{"type":50,"value":121},"This is the baseline configuration that works for Vue projects. Nuxt projects require more configuration to get going.",{"type":41,"tag":46,"props":123,"children":124},{},[125,127,133],{"type":50,"value":126},"In your root directory, create an additional configuration file. I use ",{"type":41,"tag":68,"props":128,"children":130},{"className":129},[],[131],{"type":50,"value":132},"vite.config.cypress.component.ts",{"type":50,"value":134},". In it, paste the following:",{"type":41,"tag":60,"props":136,"children":139},{"code":137,"language":109,"meta":6,"className":138},"// `vite.config.cypress.component.ts`\nimport vue from '@vitejs/plugin-vue'\n\nexport default {\n  plugins: [\n    vue({\n      template: {\n        compilerOptions: {\n          isCustomElement: tag => tag.includes('-'),\n        },\n      },\n    }),\n  ],\n}\n",[111],[140],{"type":41,"tag":68,"props":141,"children":142},{"__ignoreMap":6},[143],{"type":50,"value":137},{"type":41,"tag":46,"props":145,"children":146},{},[147,149,155],{"type":50,"value":148},"Now, add this config to your ",{"type":41,"tag":68,"props":150,"children":152},{"className":151},[],[153],{"type":50,"value":154},"cypres.config.ts",{"type":50,"value":156}," file so that it looks like so:",{"type":41,"tag":60,"props":158,"children":161},{"code":159,"language":109,"meta":6,"className":160},"// cypress.config.ts\nimport { defineConfig } from 'cypress'\nimport viteConfig from '~/vite.config.cypress.component.js'\n\nmodule.exports = defineConfig({\n  component: {\n    devServer: {\n      framework: 'vue',\n      bundler: 'vite',\n      viteConfig,\n    },\n  },\n})\n",[111],[162],{"type":41,"tag":68,"props":163,"children":164},{"__ignoreMap":6},[165],{"type":50,"value":159},{"type":41,"tag":46,"props":167,"children":168},{},[169],{"type":50,"value":170},"Unfortunately, I don't know exactly what this configuration is doing behind the scenes. I just know it works.",{"type":41,"tag":46,"props":172,"children":173},{},[174,176,185,187,194],{"type":50,"value":175},"I found this code snippet in ",{"type":41,"tag":177,"props":178,"children":182},"a",{"href":179,"rel":180},"https://github.com/cypress-io/cypress/discussions/21184#discussioncomment-4971326",[181],"nofollow",[183],{"type":50,"value":184},"this Github thread",{"type":50,"value":186}," by ",{"type":41,"tag":177,"props":188,"children":191},{"href":189,"rel":190},"https://github.com/elwinvaneede",[181],[192],{"type":50,"value":193},"@elwinvaneede",{"type":50,"value":195},".",{"type":41,"tag":197,"props":198,"children":200},"h3",{"id":199},"additional-cypress-component-config",[201],{"type":50,"value":202},"Additional Cypress Component Config",{"type":41,"tag":42,"props":204,"children":205},{},[206],{"type":41,"tag":46,"props":207,"children":208},{},[209],{"type":50,"value":210},"We need a few more files to make Cypress happy.",{"type":41,"tag":46,"props":212,"children":213},{},[214],{"type":50,"value":215},"Create a cypress directory containing a component and a support directory in our root directory.",{"type":41,"tag":60,"props":217,"children":219},{"code":218},"├── nuxt-project/\n└── component/\n│ ├── Hello.cy.ts\n└── support/\n│ ├── component-index.html\n│ ├── component.ts\n",[220],{"type":41,"tag":68,"props":221,"children":222},{"__ignoreMap":6},[223],{"type":50,"value":218},{"type":41,"tag":225,"props":226,"children":227},"ul",{},[228],{"type":41,"tag":229,"props":230,"children":231},"li",{},[232,238,240],{"type":41,"tag":233,"props":234,"children":235},"strong",{},[236],{"type":50,"value":237},"component-index.html",{"type":50,"value":239}," is the base HTML file that Cypress mounts our components to.\n",{"type":41,"tag":225,"props":241,"children":242},{},[243],{"type":41,"tag":229,"props":244,"children":245},{},[246],{"type":50,"value":247},"This file looks like so:",{"type":41,"tag":60,"props":249,"children":254},{"code":250,"language":251,"meta":6,"className":252},"// support/component-index.html\n\u003C!DOCTYPE html>\n\u003Chtml>\n  \u003Chead>\n    \u003Cmeta charset=\"utf-8\" />\n    \u003Cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    \u003Cmeta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n    \u003Ctitle>Components App\u003C/title>\n  \u003C/head>\n  \u003Cbody>\n    \u003Cdiv data-cy-root>\u003C/div>\n  \u003C/body>\n\u003C/html>\n","html",[253],"language-html",[255],{"type":41,"tag":68,"props":256,"children":257},{"__ignoreMap":6},[258],{"type":50,"value":250},{"type":41,"tag":225,"props":260,"children":261},{},[262],{"type":41,"tag":229,"props":263,"children":264},{},[265,270],{"type":41,"tag":233,"props":266,"children":267},{},[268],{"type":50,"value":269},"component.ts",{"type":50,"value":271}," is where we write specific configurations for our component tests.",{"type":41,"tag":46,"props":273,"children":274},{},[275,277,283],{"type":50,"value":276},"This file will provide the ",{"type":41,"tag":68,"props":278,"children":280},{"className":279},[],[281],{"type":50,"value":282},"mount",{"type":50,"value":284}," function:",{"type":41,"tag":60,"props":286,"children":289},{"code":287,"language":109,"meta":6,"className":288},"// support/component.ts\nimport { mount } from 'cypress/vue'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n\nCypress.Commands.add('mount', mount)\n",[111],[290],{"type":41,"tag":68,"props":291,"children":292},{"__ignoreMap":6},[293],{"type":50,"value":287},{"type":41,"tag":53,"props":295,"children":297},{"id":296},"running-the-component-test-runner",[298],{"type":50,"value":299},"Running the Component Test Runner",{"type":41,"tag":46,"props":301,"children":302},{},[303,305,311],{"type":50,"value":304},"When you run ",{"type":41,"tag":68,"props":306,"children":308},{"className":307},[],[309],{"type":50,"value":310},"npx cypress open",{"type":50,"value":312},", you should see the component test dashboard with a green configured button. Click it, then Chrome, then Start Component Testing in Chrome, and now we should see our spec runner.",{"type":41,"tag":46,"props":314,"children":315},{},[316],{"type":50,"value":317},"In our Nuxt project, let's create a basic component to test against.",{"type":41,"tag":46,"props":319,"children":320},{},[321,323,329],{"type":50,"value":322},"For funsies, I'm just creating a ",{"type":41,"tag":68,"props":324,"children":326},{"className":325},[],[327],{"type":50,"value":328},"Hello.vue",{"type":50,"value":330}," component with the following:",{"type":41,"tag":60,"props":332,"children":337},{"code":333,"language":334,"meta":6,"className":335},"// components/Hello.vue\n\u003Ctemplate>\n  \u003Cbutton>Hello World\u003C/button>\n\u003C/template>\n","vue",[336],"language-vue",[338],{"type":41,"tag":68,"props":339,"children":340},{"__ignoreMap":6},[341],{"type":50,"value":333},{"type":41,"tag":46,"props":343,"children":344},{},[345,347,353],{"type":50,"value":346},"I'm rendering this within my root ",{"type":41,"tag":68,"props":348,"children":350},{"className":349},[],[351],{"type":50,"value":352},"app.vue",{"type":50,"value":354}," file:",{"type":41,"tag":60,"props":356,"children":359},{"code":357,"language":334,"meta":6,"className":358},"// app.vue\n\u003Ctemplate>\n  \u003Cdiv>\n    \u003CHello />\n  \u003C/div>\n\u003C/template>\n",[336],[360],{"type":41,"tag":68,"props":361,"children":362},{"__ignoreMap":6},[363],{"type":50,"value":357},{"type":41,"tag":46,"props":365,"children":366},{},[367,369,375],{"type":50,"value":368},"Now we can mount this component in a cypress test. In our ",{"type":41,"tag":68,"props":370,"children":372},{"className":371},[],[373],{"type":50,"value":374},"cypress/component/Hello.cy.ts",{"type":50,"value":376}," file, paste the following:",{"type":41,"tag":60,"props":378,"children":381},{"code":379,"language":109,"meta":6,"className":380},"// cypress/component/Hello.cy.ts\nimport Hello from '../../components/Hello.vue'\n\ndescribe('Hello.cy', () => {\n  it('renders', () => {\n    cy.mount(Hello)\n  })\n})\n",[111],[382],{"type":41,"tag":68,"props":383,"children":384},{"__ignoreMap":6},[385],{"type":50,"value":379},{"type":41,"tag":53,"props":387,"children":389},{"id":388},"styling-our-components-with-tailwindcss-within-the-tests",[390],{"type":50,"value":391},"Styling Our Components with TailwindCSS Within the Tests",{"type":41,"tag":46,"props":393,"children":394},{},[395,397,404],{"type":50,"value":396},"You're probably using a library such as ",{"type":41,"tag":177,"props":398,"children":401},{"href":399,"rel":400},"https://tailwindcss.com/",[181],[402],{"type":50,"value":403},"TailwindCSS",{"type":50,"value":405}," to style your component. If that's the case, you'll notice your component isn't styled when running within the component test runner.",{"type":41,"tag":46,"props":407,"children":408},{},[409],{"type":50,"value":410},"Let's fix that.",{"type":41,"tag":46,"props":412,"children":413},{},[414,416,422,424,429],{"type":50,"value":415},"Every tutorial I found said I should be able to import my css file within my ",{"type":41,"tag":68,"props":417,"children":419},{"className":418},[],[420],{"type":50,"value":421},"cypress/support/component.ts",{"type":50,"value":423}," file or link to it using the ",{"type":41,"tag":68,"props":425,"children":427},{"className":426},[],[428],{"type":50,"value":237},{"type":50,"value":430}," file. I'm not sure why, but neither of these solutions worked for me.",{"type":41,"tag":46,"props":432,"children":433},{},[434,436,442],{"type":50,"value":435},"Instead, I needed to create a Cypress plugin for tailwind at ",{"type":41,"tag":68,"props":437,"children":439},{"className":438},[],[440],{"type":50,"value":441},"cypress/plugins/tailwind.ts",{"type":50,"value":443}," with the following:",{"type":41,"tag":60,"props":445,"children":448},{"code":446,"language":109,"meta":6,"className":447},"// cypress/support/component.ts\nbefore(() => {\n  cy.exec('npx tailwindcss -i ./assets/css/main.css -m').then(({ stdout }) => {\n    if (!document.head.querySelector('#tailwind-style')) {\n      const link = document.createElement('style')\n      link.id = 'tailwind-style'\n      link.innerHTML = stdout\n\n      document.head.appendChild(link)\n    }\n  })\n})\n",[111],[449],{"type":41,"tag":68,"props":450,"children":451},{"__ignoreMap":6},[452],{"type":50,"value":446},{"type":41,"tag":46,"props":454,"children":455},{},[456,458,463],{"type":50,"value":457},"Then import this plugin into your ",{"type":41,"tag":68,"props":459,"children":461},{"className":460},[],[462],{"type":50,"value":421},{"type":50,"value":354},{"type":41,"tag":60,"props":465,"children":468},{"code":466,"language":109,"meta":6,"className":467},"// cypress/support/component.ts\nimport { mount } from 'cypress/vue'\nimport '../plugins/tailwind'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n\nCypress.Commands.add('mount', mount)\n",[111],[469],{"type":41,"tag":68,"props":470,"children":471},{"__ignoreMap":6},[472],{"type":50,"value":466},{"type":41,"tag":46,"props":474,"children":475},{},[476],{"type":50,"value":477},"From what I understand, this is compiling Tailwind and appending the css output to a style tag that is then loaded into the component test runner's HTML.",{"type":41,"tag":46,"props":479,"children":480},{},[481],{"type":50,"value":482},"This does create a bit of lag, but it's the only way I've been able to solve this problem.",{"type":41,"tag":53,"props":484,"children":486},{"id":485},"source-code",[487],{"type":50,"value":488},"Source Code",{"type":41,"tag":46,"props":490,"children":491},{},[492,494,501],{"type":50,"value":493},"You can view the code for this project at this ",{"type":41,"tag":177,"props":495,"children":498},{"href":496,"rel":497},"https://github.com/CodyBontecou/cypress-component-testing-with-nuxt-3",[181],[499],{"type":50,"value":500},"repository",{"type":50,"value":195},{"title":6,"searchDepth":503,"depth":503,"links":504},2,[505,506,507,511,512,513],{"id":55,"depth":503,"text":58},{"id":74,"depth":503,"text":77},{"id":89,"depth":503,"text":92,"children":508},[509],{"id":199,"depth":510,"text":202},3,{"id":296,"depth":503,"text":299},{"id":388,"depth":503,"text":391},{"id":485,"depth":503,"text":488},"markdown","content:cypress-component-testing-with-nuxt-3.md","content","cypress-component-testing-with-nuxt-3.md","md",{"_path":520,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":521,"description":522,"type":10,"author":523,"date":524,"last_modified_date":524,"slug":525,"dropdown":16,"meta":526,"canonicalUrl":534,"topics":535,"created_at":35,"last_modified":36,"body":537,"_type":514,"_id":598,"_source":516,"_file":599,"_stem":525,"_extension":518},"/disable-video-recording-on-cypress-run","Disable Video Recording on Cypress Run","This is a configuration I tend to forget and have to rely on tracking down the answer. I'm not the biggest fan of the Cypress docs, so I decided to write this up for personal reference and figured some of you might find it helpful too.",{"name":12,"image":13},"2023-02-04T00:00:00.000Z","disable-video-recording-on-cypress-run",[527,528,530,531,532,533],{"name":19,"content":522},{"name":21,"content":529},"https://codybontecou.com/images/disable-video-recording-on-cypress-run.png",{"name":24,"content":522},{"name":26,"content":521},{"name":28,"content":521},{"name":30,"content":521},"https://codybontecou.com/disable-video-recording-on-cypress-run.html",[16,536],"Configuration",{"type":38,"children":538,"toc":593},[539,545,554,560,583,589],{"type":41,"tag":53,"props":540,"children":542},{"id":541},"code-snippet",[543],{"type":50,"value":544},"Code Snippet",{"type":41,"tag":60,"props":546,"children":549},{"className":547,"code":548,"language":109,"meta":6},[111],"// cypress.config.ts\nimport { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  video: false,\n})\n",[550],{"type":41,"tag":68,"props":551,"children":552},{"__ignoreMap":6},[553],{"type":50,"value":548},{"type":41,"tag":53,"props":555,"children":557},{"id":556},"resources",[558],{"type":50,"value":559},"Resources",{"type":41,"tag":225,"props":561,"children":562},{},[563,573],{"type":41,"tag":229,"props":564,"children":565},{},[566],{"type":41,"tag":177,"props":567,"children":570},{"href":568,"rel":569},"https://github.com/cypress-io/cypress/issues/867",[181],[571],{"type":50,"value":572},"Github Discussion",{"type":41,"tag":229,"props":574,"children":575},{},[576],{"type":41,"tag":177,"props":577,"children":580},{"href":578,"rel":579},"https://docs.cypress.io/guides/references/configuration#Videos",[181],[581],{"type":50,"value":582},"Docs",{"type":41,"tag":53,"props":584,"children":586},{"id":585},"inspiration",[587],{"type":50,"value":588},"Inspiration",{"type":41,"tag":46,"props":590,"children":591},{},[592],{"type":50,"value":522},{"title":6,"searchDepth":503,"depth":503,"links":594},[595,596,597],{"id":541,"depth":503,"text":544},{"id":556,"depth":503,"text":559},{"id":585,"depth":503,"text":588},"content:disable-video-recording-on-cypress-run.md","disable-video-recording-on-cypress-run.md",{"_path":601,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":602,"description":603,"type":10,"author":604,"date":605,"last_modified_date":605,"slug":606,"dropdown":607,"topics":608,"meta":612,"canonicalUrl":620,"created_at":35,"last_modified":36,"body":621,"_type":514,"_id":799,"_source":516,"_file":800,"_stem":606,"_extension":518},"/lets-setup-nuxt-3-with-cypress","Lets setup Nuxt 3 with Cypress","Cypress is an excellent E2E testing tool. Let's set it up in a fresh Nuxt 3 project to connect two modern web tools.",{"name":12,"image":13},"2023-02-02T00:00:00.000Z","lets-setup-nuxt-3-with-cypress","NuxtJS",[609,610,334,611],"nuxt","cypress","testing",[613,614,616,617,618,619],{"name":19,"content":603},{"name":21,"content":615},"https://codybontecou.com/images/lets-setup-nuxt-3-with-cypress.png",{"name":24,"content":603},{"name":26,"content":602},{"name":28,"content":602},{"name":30,"content":602},"https://codybontecou.com/lets-setup-nuxt-3-with-cypress.html",{"type":38,"children":622,"toc":794},[623,631,644,649,653,661,665,674,709,715,727,748,759,770,775,780],{"type":41,"tag":42,"props":624,"children":625},{},[626],{"type":41,"tag":46,"props":627,"children":628},{},[629],{"type":50,"value":630},"This is a quick guide on setting up Cypress End-to-End Testing with Nuxt 3.",{"type":41,"tag":46,"props":632,"children":633},{},[634,636,642],{"type":50,"value":635},"I noticed ",{"type":41,"tag":177,"props":637,"children":640},{"href":638,"rel":639},"https://github.com/cypress-io/cypress/discussions/21184",[181],[641],{"type":50,"value":184},{"type":50,"value":643}," about users struggling to get Cypress working with Nuxt 3.",{"type":41,"tag":46,"props":645,"children":646},{},[647],{"type":50,"value":648},"I found the setup straightforward and decided to share how to do it.",{"type":41,"tag":53,"props":650,"children":651},{"id":55},[652],{"type":50,"value":58},{"type":41,"tag":60,"props":654,"children":656},{"className":655,"code":62,"language":63,"meta":6},[65],[657],{"type":41,"tag":68,"props":658,"children":659},{"__ignoreMap":6},[660],{"type":50,"value":62},{"type":41,"tag":53,"props":662,"children":663},{"id":74},[664],{"type":50,"value":77},{"type":41,"tag":60,"props":666,"children":669},{"className":667,"code":668,"language":63,"meta":6},[65],"npm install cypress --save-dev\nnpx cypress open\n",[670],{"type":41,"tag":68,"props":671,"children":672},{"__ignoreMap":6},[673],{"type":50,"value":668},{"type":41,"tag":46,"props":675,"children":676},{},[677,679,684,686,692,694,700,702,708],{"type":50,"value":678},"Running ",{"type":41,"tag":68,"props":680,"children":682},{"className":681},[],[683],{"type":50,"value":310},{"type":50,"value":685}," should spawn the cypress test runner. Click ",{"type":41,"tag":68,"props":687,"children":689},{"className":688},[],[690],{"type":50,"value":691},"E2E Testing",{"type":50,"value":693},", then ",{"type":41,"tag":68,"props":695,"children":697},{"className":696},[],[698],{"type":50,"value":699},"Chrome",{"type":50,"value":701}," for the browser option, and then click ",{"type":41,"tag":68,"props":703,"children":705},{"className":704},[],[706],{"type":50,"value":707},"Start E2E Testing in Chrome",{"type":50,"value":195},{"type":41,"tag":53,"props":710,"children":712},{"id":711},"cypress-e2e-tests",[713],{"type":50,"value":714},"Cypress E2E Tests",{"type":41,"tag":46,"props":716,"children":717},{},[718,720,725],{"type":50,"value":719},"During the Cypress initialization, the ",{"type":41,"tag":68,"props":721,"children":723},{"className":722},[],[724],{"type":50,"value":610},{"type":50,"value":726}," folder should have been created.",{"type":41,"tag":46,"props":728,"children":729},{},[730,732,738,740,746],{"type":50,"value":731},"By default, Cypress looks for any ",{"type":41,"tag":68,"props":733,"children":735},{"className":734},[],[736],{"type":50,"value":737},"*.cy.*",{"type":50,"value":739}," file within your ",{"type":41,"tag":68,"props":741,"children":743},{"className":742},[],[744],{"type":50,"value":745},"cypress/e2e",{"type":50,"value":747}," directory.",{"type":41,"tag":46,"props":749,"children":750},{},[751,753],{"type":50,"value":752},"For simplicity's sake, I have the following test in ",{"type":41,"tag":68,"props":754,"children":756},{"className":755},[],[757],{"type":50,"value":758},"cypress/e2e/spec.cy.js",{"type":41,"tag":60,"props":760,"children":765},{"className":761,"code":763,"language":764,"meta":6},[762],"language-js","// cypress/e2e/spec.cy.js\ndescribe('template spec', () => {\n  it('passes', () => {\n    cy.visit('http://localhost:3000/')\n  })\n})\n","js",[766],{"type":41,"tag":68,"props":767,"children":768},{"__ignoreMap":6},[769],{"type":50,"value":763},{"type":41,"tag":46,"props":771,"children":772},{},[773],{"type":50,"value":774},"This test should pass while your Nuxt 3 application runs on port 3000. It just opens the browser and asserts it loaded.",{"type":41,"tag":46,"props":776,"children":777},{},[778],{"type":50,"value":779},"And that's it. We now have Cypress E2E tests running against our Nuxt 3 application. Hope you enjoyed.",{"type":41,"tag":46,"props":781,"children":782},{},[783,785,792],{"type":50,"value":784},"Here's the ",{"type":41,"tag":177,"props":786,"children":789},{"href":787,"rel":788},"https://github.com/CodyBontecou/lets-setup-nuxt-3-with-cypress",[181],[790],{"type":50,"value":791},"Github Repo",{"type":50,"value":793}," for reference.",{"title":6,"searchDepth":503,"depth":503,"links":795},[796,797,798],{"id":55,"depth":503,"text":58},{"id":74,"depth":503,"text":77},{"id":711,"depth":503,"text":714},"content:lets-setup-nuxt-3-with-cypress.md","lets-setup-nuxt-3-with-cypress.md",1731603808153]