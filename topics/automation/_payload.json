[{"data":1,"prerenderedAt":2236},["ShallowReactive",2],{"post-/topics/automation":3},[4,609,1035,1753],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"category":15,"dropdown":16,"topics":17,"meta":22,"canonicalUrl":38,"newsletter":7,"body":39,"_type":603,"_id":604,"_source":605,"_file":606,"_stem":607,"_extension":608},"/generate-twitter-lists-with-python","",false,"Generating Twitter Lists with Python",null,"post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2020-09-15T00:00:00.000Z","tutorials","Python",[18,19,20,21],"python","tweepy","twitter","automation",[23,25,28,31,33,35],{"name":24,"content":8},"og:title",{"name":26,"content":27},"og:description","Automatically generating a Twitter List of Paul Grahams feed with Python and Tweepy",{"name":29,"content":30},"og:image","https://codybontecou.com/images/generate-twitter-lists-with-python-meta.png",{"name":32,"content":27},"og:image:alt",{"name":34,"content":8},"twitter:title",{"name":36,"content":37},"twitter:text:title","Generating a Twitter List with Python","https://codybontecou.com/generate-twitter-lists-with-python.html",{"type":40,"children":41,"toc":592},"root",[42,51,70,82,105,110,123,130,138,143,148,154,169,174,179,244,250,266,323,334,340,360,369,374,380,385,414,426,435,441,445,464,477,498,507,513,517,528,541,546,558,567,573,587],{"type":43,"tag":44,"props":45,"children":47},"element","h1",{"id":46},"generating-twitter-lists-with-python-and-tweepy",[48],{"type":49,"value":50},"text","Generating Twitter Lists with Python and Tweepy",{"type":43,"tag":52,"props":53,"children":54},"blockquote",{},[55],{"type":43,"tag":56,"props":57,"children":58},"p",{},[59,61],{"type":49,"value":60},"The finished project can be seen ",{"type":43,"tag":62,"props":63,"children":67},"a",{"href":64,"rel":65},"https://github.com/CodyBontecou/Generating-Twitter-Lists-with-Python/blob/main/tweepy_lists/app.py",[66],"nofollow",[68],{"type":49,"value":69},"here",{"type":43,"tag":56,"props":71,"children":72},{},[73,80],{"type":43,"tag":62,"props":74,"children":77},{"href":75,"rel":76},"https://twitter.com/paulg",[66],[78],{"type":49,"value":79},"Paul Graham",{"type":49,"value":81}," is an influential man in the tech and startup space.",{"type":43,"tag":56,"props":83,"children":84},{},[85,87,94,96,103],{"type":49,"value":86},"His Twitter activity keeps me entertained and informed, spanning from discussions about ",{"type":43,"tag":62,"props":88,"children":91},{"href":89,"rel":90},"https://twitter.com/paulg/status/1437423926980841472",[66],[92],{"type":49,"value":93},"air quality significantly impacting life expectancy",{"type":49,"value":95}," to interesting ",{"type":43,"tag":62,"props":97,"children":100},{"href":98,"rel":99},"https://twitter.com/paulg/status/1437453828606070784",[66],[101],{"type":49,"value":102},"discussions he has with his kids",{"type":49,"value":104},".",{"type":43,"tag":56,"props":106,"children":107},{},[108],{"type":49,"value":109},"The air pollution discussion this morning motivated me to want to see his feed and all of the interesting things a man like Paul sees. I started to follow the accounts he follows and after about 30 or so clicks I decided to investigate Twitter's API for a way to automate this.",{"type":43,"tag":56,"props":111,"children":112},{},[113,115,122],{"type":49,"value":114},"This is where I discovered ",{"type":43,"tag":62,"props":116,"children":119},{"href":117,"rel":118},"https://help.twitter.com/en/using-twitter/twitter-lists",[66],[120],{"type":49,"value":121},"Twitter Lists",{"type":49,"value":104},{"type":43,"tag":124,"props":125,"children":127},"h2",{"id":126},"twitter-lists-are-a-great-way-to-create-custom-feeds",[128],{"type":49,"value":129},"Twitter Lists are a great way to create custom feeds",{"type":43,"tag":52,"props":131,"children":132},{},[133],{"type":43,"tag":56,"props":134,"children":135},{},[136],{"type":49,"value":137},"Viewing a List timeline will show you a stream of Tweets from only the accounts on that List.",{"type":43,"tag":56,"props":139,"children":140},{},[141],{"type":49,"value":142},"Twitter Lists are the perfect solution. It gives me the ability to create custom feeds.",{"type":43,"tag":56,"props":144,"children":145},{},[146],{"type":49,"value":147},"If I feel like delving into Paul Grahams feed, it's a click away. Same with Elon Musk or any of the other influential users on Twitter.",{"type":43,"tag":124,"props":149,"children":151},{"id":150},"using-tweepy-to-automatically-generate-our-twitter-lists",[152],{"type":49,"value":153},"Using Tweepy to automatically generate our Twitter Lists",{"type":43,"tag":52,"props":155,"children":156},{},[157],{"type":43,"tag":56,"props":158,"children":159},{},[160,167],{"type":43,"tag":62,"props":161,"children":164},{"href":162,"rel":163},"https://www.tweepy.org/",[66],[165],{"type":49,"value":166},"Tweepy",{"type":49,"value":168}," is an easy-to-use Python library for accessing the Twitter API.",{"type":43,"tag":56,"props":170,"children":171},{},[172],{"type":49,"value":173},"Tweepy provides built in methods to easily interact with the Twitter API.",{"type":43,"tag":56,"props":175,"children":176},{},[177],{"type":49,"value":178},"In this project, I use the following from Tweepy:",{"type":43,"tag":180,"props":181,"children":182},"ul",{},[183,194,204,214,224,234],{"type":43,"tag":184,"props":185,"children":186},"li",{},[187],{"type":43,"tag":62,"props":188,"children":191},{"href":189,"rel":190},"https://docs.tweepy.org/en/stable/api.html?highlight=API#API",[66],[192],{"type":49,"value":193},"API class",{"type":43,"tag":184,"props":195,"children":196},{},[197],{"type":43,"tag":62,"props":198,"children":201},{"href":199,"rel":200},"https://docs.tweepy.org/en/latest/client.html",[66],[202],{"type":49,"value":203},"Client class",{"type":43,"tag":184,"props":205,"children":206},{},[207],{"type":43,"tag":62,"props":208,"children":211},{"href":209,"rel":210},"https://docs.tweepy.org/en/latest/api.html?highlight=create_list#tweepy.API.create_list",[66],[212],{"type":49,"value":213},".create_list()",{"type":43,"tag":184,"props":215,"children":216},{},[217],{"type":43,"tag":62,"props":218,"children":221},{"href":219,"rel":220},"https://docs.tweepy.org/en/v3.10.0/api.html?highlight=get_user#API.get_user",[66],[222],{"type":49,"value":223},".get_user()",{"type":43,"tag":184,"props":225,"children":226},{},[227],{"type":43,"tag":62,"props":228,"children":231},{"href":229,"rel":230},"https://docs.tweepy.org/en/latest/client.html?highlight=get_users_following#tweepy.client.get_users_following",[66],[232],{"type":49,"value":233},".get_users_following()",{"type":43,"tag":184,"props":235,"children":236},{},[237],{"type":43,"tag":62,"props":238,"children":241},{"href":239,"rel":240},"https://docs.tweepy.org/en/latest/api.html?highlight=add_list_members#tweepy.api.add_list_members",[66],[242],{"type":49,"value":243},".add_list_members",{"type":43,"tag":124,"props":245,"children":247},{"id":246},"authenticating-with-twitters-api-using-tweepy",[248],{"type":49,"value":249},"Authenticating with Twitter's API using Tweepy",{"type":43,"tag":52,"props":251,"children":252},{},[253],{"type":43,"tag":56,"props":254,"children":255},{},[256,258,264],{"type":49,"value":257},"This tutorial will assume you already have a Twitter developer account. If you do not, I went into detail ",{"type":43,"tag":62,"props":259,"children":262},{"href":260,"rel":261},"https://codybontecou.com/programmatically-tweeting-with-nodejs.html#getting-authenticated",[66],[263],{"type":49,"value":69},{"type":49,"value":265}," on how to generate the proper authentication keys needed to access Twitter's API.",{"type":43,"tag":56,"props":267,"children":268},{},[269,271,278,280,286,288,293,295,301,303,308,309,314,316,322],{"type":49,"value":270},"Tweepy provides the helper function ",{"type":43,"tag":272,"props":273,"children":275},"code",{"className":274},[],[276],{"type":49,"value":277},".OAuthHandler",{"type":49,"value":279}," that requires you to pass it your ",{"type":43,"tag":281,"props":282,"children":283},"em",{},[284],{"type":49,"value":285},"consumer key",{"type":49,"value":287}," and ",{"type":43,"tag":281,"props":289,"children":290},{},[291],{"type":49,"value":292},"consumer secret",{"type":49,"value":294}," initializing the auth object, you then must call its method ",{"type":43,"tag":272,"props":296,"children":298},{"className":297},[],[299],{"type":49,"value":300},".set_access_token()",{"type":49,"value":302}," which requires your ",{"type":43,"tag":281,"props":304,"children":305},{},[306],{"type":49,"value":307},"access token",{"type":49,"value":287},{"type":43,"tag":281,"props":310,"children":311},{},[312],{"type":49,"value":313},"access token secret",{"type":49,"value":315}," given to you when creating your developer account and ",{"type":43,"tag":62,"props":317,"children":319},{"href":260,"rel":318},[66],[320],{"type":49,"value":321},"generating your app",{"type":49,"value":104},{"type":43,"tag":324,"props":325,"children":329},"pre",{"className":326,"code":328,"language":18,"meta":6},[327],"language-python","import tweepy\n\nauth = tweepy.OAuthHandler(os.getenv(\"consumer_key\"), os.getenv(\"consumer_secret\"))\nauth.set_access_token(os.getenv(\"access_token\"), os.getenv(\"access_token_secret\"))\n",[330],{"type":43,"tag":272,"props":331,"children":332},{"__ignoreMap":6},[333],{"type":49,"value":328},{"type":43,"tag":124,"props":335,"children":337},{"id":336},"initializing-tweepys-api-and-client-objects",[338],{"type":49,"value":339},"Initializing Tweepy's API and Client objects",{"type":43,"tag":56,"props":341,"children":342},{},[343,345,351,352,358],{"type":49,"value":344},"We can now utilize our auth variable to create ",{"type":43,"tag":62,"props":346,"children":348},{"href":189,"rel":347},[66],[349],{"type":49,"value":350},"API",{"type":49,"value":287},{"type":43,"tag":62,"props":353,"children":355},{"href":199,"rel":354},[66],[356],{"type":49,"value":357},"Client",{"type":49,"value":359}," objects using the following code:",{"type":43,"tag":324,"props":361,"children":364},{"className":362,"code":363,"language":18,"meta":6},[327],"api = tweepy.API(auth)\nclient = tweepy.Client(\n    bearer_token=os.getenv(\"bearer_token\"),\n    consumer_key=os.getenv(\"consumer_key\"),\n    consumer_secret=os.getenv(\"consumer_secret\"),\n    access_token=os.getenv(\"access_token\"),\n    access_token_secret=os.getenv(\"access_token_secret\"),\n    wait_on_rate_limit=True,\n)\n",[365],{"type":43,"tag":272,"props":366,"children":367},{"__ignoreMap":6},[368],{"type":49,"value":363},{"type":43,"tag":56,"props":370,"children":371},{},[372],{"type":49,"value":373},"With these objects, we can now access every Twitter endpoint.",{"type":43,"tag":124,"props":375,"children":377},{"id":376},"creating-a-list-using-tweepys-api",[378],{"type":49,"value":379},"Creating a List using Tweepy's API",{"type":43,"tag":56,"props":381,"children":382},{},[383],{"type":49,"value":384},"Tweepy methods used:",{"type":43,"tag":180,"props":386,"children":387},{},[388],{"type":43,"tag":184,"props":389,"children":390},{},[391,396,398,404,406,412],{"type":43,"tag":62,"props":392,"children":394},{"href":209,"rel":393},[66],[395],{"type":49,"value":213},{"type":49,"value":397},": Takes three parameters: name, mode, and description. Name and description are self-explanatory and mode can either be ",{"type":43,"tag":272,"props":399,"children":401},{"className":400},[],[402],{"type":49,"value":403},"\"public\"",{"type":49,"value":405}," or ",{"type":43,"tag":272,"props":407,"children":409},{"className":408},[],[410],{"type":49,"value":411},"\"private\"",{"type":49,"value":413}," to define the visibility status of the List.",{"type":43,"tag":56,"props":415,"children":416},{},[417,419,425],{"type":49,"value":418},"The response from a successfully List creation returns the List data. I will be using this list later on, so I decided to extract it's id into the variable ",{"type":43,"tag":272,"props":420,"children":422},{"className":421},[],[423],{"type":49,"value":424},"list_id",{"type":49,"value":104},{"type":43,"tag":324,"props":427,"children":430},{"className":428,"code":429,"language":18,"meta":6},[327],"list_name = \"Paul Grahams's Feed\"\nlist_description = \"A list of everyone Paul Graham follows\"\n\ntwitter_list = api.create_list(name=list_name, description=list_description)\nlist_id = twitter_list._json[\"id\"]\n",[431],{"type":43,"tag":272,"props":432,"children":433},{"__ignoreMap":6},[434],{"type":49,"value":429},{"type":43,"tag":124,"props":436,"children":438},{"id":437},"getting-a-user-and-the-accounts-they-follow",[439],{"type":49,"value":440},"Getting a User and the accounts they follow",{"type":43,"tag":56,"props":442,"children":443},{},[444],{"type":49,"value":384},{"type":43,"tag":180,"props":446,"children":447},{},[448,456],{"type":43,"tag":184,"props":449,"children":450},{},[451],{"type":43,"tag":62,"props":452,"children":454},{"href":219,"rel":453},[66],[455],{"type":49,"value":223},{"type":43,"tag":184,"props":457,"children":458},{},[459],{"type":43,"tag":62,"props":460,"children":462},{"href":229,"rel":461},[66],[463],{"type":49,"value":233},{"type":43,"tag":56,"props":465,"children":466},{},[467,469,475],{"type":49,"value":468},"By passing ",{"type":43,"tag":272,"props":470,"children":472},{"className":471},[],[473],{"type":49,"value":474},"client.get_user()",{"type":49,"value":476}," a twitter handle - in this case, Paul Graham - I can get all of the public data Twitter provides regarding that user.",{"type":43,"tag":56,"props":478,"children":479},{},[480,482,488,490,496],{"type":49,"value":481},"I then use that user's data with ",{"type":43,"tag":272,"props":483,"children":485},{"className":484},[],[486],{"type":49,"value":487},"client.get_users_following()",{"type":49,"value":489}," alongside max_results. The argument ",{"type":43,"tag":272,"props":491,"children":493},{"className":492},[],[494],{"type":49,"value":495},"max_results",{"type":49,"value":497}," defines how many user objects Twitter will pass back. In this case, I used the max of 1000. The default is 100.",{"type":43,"tag":324,"props":499,"children":502},{"className":500,"code":501,"language":18,"meta":6},[327],"twitter_handle = \"paulg\"\nuser = client.get_user(username=twitter_handle)\n\nfollowers = client.get_users_following(id=user.data.id, max_results=1000)\n",[503],{"type":43,"tag":272,"props":504,"children":505},{"__ignoreMap":6},[506],{"type":49,"value":501},{"type":43,"tag":124,"props":508,"children":510},{"id":509},"automatially-adding-users-to-the-list",[511],{"type":49,"value":512},"Automatially adding users to the list",{"type":43,"tag":56,"props":514,"children":515},{},[516],{"type":49,"value":384},{"type":43,"tag":180,"props":518,"children":519},{},[520],{"type":43,"tag":184,"props":521,"children":522},{},[523],{"type":43,"tag":62,"props":524,"children":526},{"href":239,"rel":525},[66],[527],{"type":49,"value":243},{"type":43,"tag":56,"props":529,"children":530},{},[531,533,539],{"type":49,"value":532},"Now that we have the List we want to populate and the followers we want populate it with, we use the ",{"type":43,"tag":272,"props":534,"children":536},{"className":535},[],[537],{"type":49,"value":538},"api.add_list_members()",{"type":49,"value":540}," method.",{"type":43,"tag":56,"props":542,"children":543},{},[544],{"type":49,"value":545},"This method takes a list of up to 100 Twitter User ID's. The code snippet below chunks out follower data into sections of 100 Users and generates a list of ids to pass.",{"type":43,"tag":56,"props":547,"children":548},{},[549,551,556],{"type":49,"value":550},"We are also passing this method the ",{"type":43,"tag":272,"props":552,"children":554},{"className":553},[],[555],{"type":49,"value":424},{"type":49,"value":557}," that was saved when we created the list.",{"type":43,"tag":324,"props":559,"children":562},{"className":560,"code":561,"language":18,"meta":6},[327],"for i in range(0, len(followers.data), 100):\n    ids = [follower[\"id\"] for follower in followers.data[i : i + 100]]\n    api.add_list_members(list_id=list_id, user_id=ids)\n",[563],{"type":43,"tag":272,"props":564,"children":565},{"__ignoreMap":6},[566],{"type":49,"value":561},{"type":43,"tag":124,"props":568,"children":570},{"id":569},"things-to-keep-in-mind-when-working-with-twitters-api",[571],{"type":49,"value":572},"Things to keep in mind when working with Twitter's API",{"type":43,"tag":56,"props":574,"children":575},{},[576,578,585],{"type":49,"value":577},"Twitter rate limits just about all of their endpoints. ",{"type":43,"tag":62,"props":579,"children":582},{"href":580,"rel":581},"https://developer.twitter.com/en/docs/twitter-api/v1/rate-limits",[66],[583],{"type":49,"value":584},"Here",{"type":49,"value":586}," is Twitter's documentation on what the rate limits are. Keep this is mind when developing Twitter-based applications because you may find yourself with an odd error.",{"type":43,"tag":56,"props":588,"children":589},{},[590],{"type":49,"value":591},"Thank you for reading! I hope you enjoyed it.",{"title":6,"searchDepth":593,"depth":593,"links":594},2,[595,596,597,598,599,600,601,602],{"id":126,"depth":593,"text":129},{"id":150,"depth":593,"text":153},{"id":246,"depth":593,"text":249},{"id":336,"depth":593,"text":339},{"id":376,"depth":593,"text":379},{"id":437,"depth":593,"text":440},{"id":509,"depth":593,"text":512},{"id":569,"depth":593,"text":572},"markdown","content:generate-twitter-lists-with-python.md","content","generate-twitter-lists-with-python.md","generate-twitter-lists-with-python","md",{"_path":610,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":611,"description":612,"type":10,"author":613,"date":614,"dropdown":615,"meta":616,"canonicalUrl":624,"topics":625,"body":627,"_type":603,"_id":1032,"_source":605,"_file":1033,"_stem":1034,"_extension":608},"/programmatically-tweeting-with-nodejs","Programmatically Tweeting with NodeJS","Interacting with Twitter through their API. In this post I discuss how to use twitter-lite to create and post a tweet.",{"name":12,"image":13},"2020-07-16T00:00:00.000Z","NodeJS",[617,618,620,622,623],{"name":24,"content":611},{"name":29,"content":619},"https://codybontecou.com/images/tweeting-with-nodejs-og-image.png",{"name":32,"content":621},"Man sitting at computer overloaded by media. 100 Days of Code While Dopamine Fasting.",{"name":34,"content":611},{"name":36,"content":611},"https://codybontecou.com/programmatically-tweeting-with-nodejs",[626,20,21],"nodejs",{"type":40,"children":628,"toc":1027},[629,635,660,666,676,698,703,712,718,730,746,763,817,830,841,850,863,874,887,897,903,916,925,934,943,951,960,989,998,1011,1015],{"type":43,"tag":44,"props":630,"children":632},{"id":631},"creating-a-tweet-with-nodejs",[633],{"type":49,"value":634},"Creating a Tweet With NodeJS",{"type":43,"tag":52,"props":636,"children":637},{},[638],{"type":43,"tag":56,"props":639,"children":640},{},[641,643,649,651,658],{"type":49,"value":642},"This post is for ",{"type":43,"tag":644,"props":645,"children":646},"strong",{},[647],{"type":49,"value":648},"day 1",{"type":49,"value":650}," of my ",{"type":43,"tag":62,"props":652,"children":655},{"href":653,"rel":654},"https://twitter.com/hashtag/100DaysOfCode?src=hashtag_click",[66],[656],{"type":49,"value":657},"#100DaysOfCode",{"type":49,"value":659},". In this post I'll be discussing how to programmatically tweet to Twitter using NodeJS.",{"type":43,"tag":124,"props":661,"children":663},{"id":662},"getting-authenticated",[664],{"type":49,"value":665},"Getting Authenticated",{"type":43,"tag":56,"props":667,"children":668},{},[669],{"type":43,"tag":62,"props":670,"children":673},{"href":671,"rel":672},"https://developer.twitter.com/en/docs/twitter-api/getting-started/getting-access-to-the-twitter-api",[66],[674],{"type":49,"value":675},"Get a Twitter Developer Account",{"type":43,"tag":56,"props":677,"children":678},{},[679,681,688,690,697],{"type":49,"value":680},"You'll need to follow the instructions of the link above to create a develop account. This gives you access to creating a ",{"type":43,"tag":62,"props":682,"children":685},{"href":683,"rel":684},"https://developer.twitter.com/en/docs/projects/overview",[66],[686],{"type":49,"value":687},"project",{"type":49,"value":689}," and an ",{"type":43,"tag":62,"props":691,"children":694},{"href":692,"rel":693},"https://developer.twitter.com/en/docs/apps/overview",[66],[695],{"type":49,"value":696},"app",{"type":49,"value":104},{"type":43,"tag":56,"props":699,"children":700},{},[701],{"type":49,"value":702},"You'll eventually find yourself within the Twitter Developer Dashboard where you can generate authentication tokens that will be essential to making requests.",{"type":43,"tag":56,"props":704,"children":705},{},[706],{"type":43,"tag":707,"props":708,"children":711},"img",{"alt":709,"src":710},"Screenshot of the Twitter Developer Dashboard","https://codybontecou.com/images/twitter-dev-dashboard.png",[],{"type":43,"tag":124,"props":713,"children":715},{"id":714},"laying-the-foundations-of-your-app",[716],{"type":49,"value":717},"Laying the Foundations of Your App",{"type":43,"tag":56,"props":719,"children":720},{},[721,728],{"type":43,"tag":62,"props":722,"children":725},{"href":723,"rel":724},"https://github.com/CodyBontecou/day-1-tweet-with-nodejs",[66],[726],{"type":49,"value":727},"Github Repo",{"type":49,"value":729}," to follow along",{"type":43,"tag":56,"props":731,"children":732},{},[733],{"type":43,"tag":281,"props":734,"children":735},{},[736,738,744],{"type":49,"value":737},"Make sure you have ",{"type":43,"tag":62,"props":739,"children":742},{"href":740,"rel":741},"https://nodejs.org/en/",[66],[743],{"type":49,"value":615},{"type":49,"value":745}," installed",{"type":43,"tag":56,"props":747,"children":748},{},[749],{"type":43,"tag":281,"props":750,"children":751},{},[752,754,761],{"type":49,"value":753},"I prefer ",{"type":43,"tag":62,"props":755,"children":758},{"href":756,"rel":757},"https://yarnpkg.com/",[66],[759],{"type":49,"value":760},"yarn",{"type":49,"value":762},", but you can use npm instead if you prefer",{"type":43,"tag":764,"props":765,"children":766},"ol",{},[767,778,798],{"type":43,"tag":184,"props":768,"children":769},{},[770,772],{"type":49,"value":771},"Scaffold your project: ",{"type":43,"tag":272,"props":773,"children":775},{"className":774},[],[776],{"type":49,"value":777},"yarn init -y",{"type":43,"tag":184,"props":779,"children":780},{},[781,783,790,792],{"type":49,"value":782},"Download ",{"type":43,"tag":62,"props":784,"children":787},{"href":785,"rel":786},"https://github.com/draftbit/twitter-lite",[66],[788],{"type":49,"value":789},"twitter-lite",{"type":49,"value":791}," to interact with Twitter's API: ",{"type":43,"tag":272,"props":793,"children":795},{"className":794},[],[796],{"type":49,"value":797},"yarn add twitter-lite",{"type":43,"tag":184,"props":799,"children":800},{},[801,802,809,811],{"type":49,"value":782},{"type":43,"tag":62,"props":803,"children":806},{"href":804,"rel":805},"https://github.com/motdotla/dotenv#readme",[66],[807],{"type":49,"value":808},"dotenv",{"type":49,"value":810}," to safely manage .env variables and your auth tokens: ",{"type":43,"tag":272,"props":812,"children":814},{"className":813},[],[815],{"type":49,"value":816},"yarn add dotenv",{"type":43,"tag":56,"props":818,"children":819},{},[820,822,828],{"type":49,"value":821},"Your ",{"type":43,"tag":272,"props":823,"children":825},{"className":824},[],[826],{"type":49,"value":827},"package.json",{"type":49,"value":829}," file should now look like this:",{"type":43,"tag":324,"props":831,"children":836},{"className":832,"code":834,"language":835,"meta":6},[833],"language-json","{\n  \"name\": \"programmatic-tweeting-with-nodejs\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"dot-env\": \"^0.0.1\",\n    \"twitter-lite\": \"^1.1.0\"\n  }\n}\n","json",[837],{"type":43,"tag":272,"props":838,"children":839},{"__ignoreMap":6},[840],{"type":49,"value":834},{"type":43,"tag":764,"props":842,"children":844},{"start":843},4,[845],{"type":43,"tag":184,"props":846,"children":847},{},[848],{"type":49,"value":849},"Create a .env file in your project root folder and add your tokens provided by Twitter's API",{"type":43,"tag":56,"props":851,"children":852},{},[853,855,861],{"type":49,"value":854},"The ",{"type":43,"tag":272,"props":856,"children":858},{"className":857},[],[859],{"type":49,"value":860},".env",{"type":49,"value":862}," file should look like this:",{"type":43,"tag":324,"props":864,"children":869},{"className":865,"code":867,"language":868,"meta":6},[866],"language-js","consumer_key = '\u003CCONSUMER KEY>'\nconsumer_secret = '\u003CCONSUMER SECRET>'\naccess_token_key = '\u003CACCESS TOKEN>'\naccess_token_secret = '\u003CACCESS TOKEN>'\n","js",[870],{"type":43,"tag":272,"props":871,"children":872},{"__ignoreMap":6},[873],{"type":49,"value":867},{"type":43,"tag":56,"props":875,"children":876},{},[877,879,885],{"type":49,"value":878},"Just make sure you replace the ",{"type":43,"tag":272,"props":880,"children":882},{"className":881},[],[883],{"type":49,"value":884},"\u003C>",{"type":49,"value":886}," text with the tokens Twitter provided you.",{"type":43,"tag":56,"props":888,"children":889},{},[890,895],{"type":43,"tag":644,"props":891,"children":892},{},[893],{"type":49,"value":894},"Make sure you do not commit your .env file to Github or any other version control systems.",{"type":49,"value":896}," These tokens are very important, and should not be shared with anyone!",{"type":43,"tag":124,"props":898,"children":900},{"id":899},"making-the-post",[901],{"type":49,"value":902},"Making the Post",{"type":43,"tag":764,"props":904,"children":905},{},[906,911],{"type":43,"tag":184,"props":907,"children":908},{},[909],{"type":49,"value":910},"Create an index.js file in your project root",{"type":43,"tag":184,"props":912,"children":913},{},[914],{"type":49,"value":915},"Import the packages you installed earlier",{"type":43,"tag":324,"props":917,"children":920},{"className":918,"code":919,"language":868,"meta":6},[866],"const twitter = require('twitter-lite')\nrequire('dotenv').config()\n",[921],{"type":43,"tag":272,"props":922,"children":923},{"__ignoreMap":6},[924],{"type":49,"value":919},{"type":43,"tag":764,"props":926,"children":928},{"start":927},3,[929],{"type":43,"tag":184,"props":930,"children":931},{},[932],{"type":49,"value":933},"Create a client to talk to Twitter with your config",{"type":43,"tag":324,"props":935,"children":938},{"className":936,"code":937,"language":868,"meta":6},[866],"const client = new twitter(config)\n",[939],{"type":43,"tag":272,"props":940,"children":941},{"__ignoreMap":6},[942],{"type":49,"value":937},{"type":43,"tag":764,"props":944,"children":945},{"start":843},[946],{"type":43,"tag":184,"props":947,"children":948},{},[949],{"type":49,"value":950},"Code the request",{"type":43,"tag":324,"props":952,"children":955},{"className":953,"code":954,"language":868,"meta":6},[866],"client\n  .post('statuses/update', { status: 'Hello World' })\n  .then(result => {\n    console.log('You successfully tweeted this : \"' + result.text + '\"')\n  })\n  .catch(console.error)\n",[956],{"type":43,"tag":272,"props":957,"children":958},{"__ignoreMap":6},[959],{"type":49,"value":954},{"type":43,"tag":56,"props":961,"children":962},{},[963,965,972,974,980,982,988],{"type":49,"value":964},"Step #4 is creating a POST request to ",{"type":43,"tag":62,"props":966,"children":969},{"href":967,"rel":968},"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update",[66],[970],{"type":49,"value":971},"Twitter's endpoint",{"type":49,"value":973}," ",{"type":43,"tag":272,"props":975,"children":977},{"className":976},[],[978],{"type":49,"value":979},"statuses/update",{"type":49,"value":981}," with the parameter ",{"type":43,"tag":272,"props":983,"children":985},{"className":984},[],[986],{"type":49,"value":987},"status = 'Hello World'",{"type":49,"value":104},{"type":43,"tag":764,"props":990,"children":992},{"start":991},5,[993],{"type":43,"tag":184,"props":994,"children":995},{},[996],{"type":49,"value":997},"Make the request",{"type":43,"tag":56,"props":999,"children":1000},{},[1001,1003,1009],{"type":49,"value":1002},"Now type ",{"type":43,"tag":272,"props":1004,"children":1006},{"className":1005},[],[1007],{"type":49,"value":1008},"node index.js",{"type":49,"value":1010}," into your terminal and press enter. This will generate a Tweet with the text \"Hello World\".",{"type":43,"tag":1012,"props":1013,"children":1014},"hr",{},[],{"type":43,"tag":56,"props":1016,"children":1017},{},[1018,1020],{"type":49,"value":1019},"I hope this article was helpful, let me know if you have any questions, comments, or suggestions on Twitter ",{"type":43,"tag":62,"props":1021,"children":1024},{"href":1022,"rel":1023},"https://twitter.com/CodyBontecou",[66],[1025],{"type":49,"value":1026},"@codybontecou",{"title":6,"searchDepth":593,"depth":593,"links":1028},[1029,1030,1031],{"id":662,"depth":593,"text":665},{"id":714,"depth":593,"text":717},{"id":899,"depth":593,"text":902},"content:programmatically-tweeting-with-nodejs.md","programmatically-tweeting-with-nodejs.md","programmatically-tweeting-with-nodejs",{"_path":1036,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":1037,"description":1038,"type":10,"author":1039,"date":1040,"dropdown":615,"tags":1041,"meta":1050,"canonicalUrl":1058,"topics":1059,"body":1063,"_type":603,"_id":1750,"_source":605,"_file":1751,"_stem":1752,"_extension":608},"/programmatically-posting-to-your-favorite-blogs","Post to Dev, Hashnode, and Medium using their APIs","Generate posts on Dev, Hashnode, and Medium using the same markdown source file to simultaneously post on all three platforms using their REST and Graphql APIs.",{"name":12,"image":13},"2020-07-13T00:00:00.000Z",[1042,1043,1044,1045,1046,1047,1048,1049],"VuePress","JavaScript","CSS","Refactor","Vue","Medium","Personal Blog","Software Tutorials",[1051,1052,1054,1056,1057],{"name":24,"content":1037},{"name":29,"content":1053},"https://codybontecou.com/images/automate-blog-posts-meta.png",{"name":32,"content":1055},"Large hero image showing Dev, Hashnode, and Medium's logos",{"name":34,"content":1037},{"name":36,"content":1037},"https://codybontecou.com/programmatically-posting-to-your-favorite-blogs",[1060,1061,626,1062,21],"vuepress","javascript","blogging",{"type":40,"children":1064,"toc":1733},[1065,1070,1078,1083,1091,1099,1105,1119,1126,1144,1182,1187,1193,1206,1211,1220,1233,1239,1252,1278,1283,1292,1304,1310,1315,1323,1331,1339,1348,1356,1365,1373,1381,1389,1398,1406,1415,1420,1426,1439,1444,1458,1464,1477,1484,1493,1499,1512,1517,1546,1551,1556,1586,1592,1605,1636,1666,1671,1680,1686,1713,1718,1723],{"type":43,"tag":44,"props":1066,"children":1068},{"id":1067},"post-to-dev-hashnode-and-medium-using-their-apis",[1069],{"type":49,"value":1037},{"type":43,"tag":52,"props":1071,"children":1072},{},[1073],{"type":43,"tag":56,"props":1074,"children":1075},{},[1076],{"type":49,"value":1077},"The goal of this article is to help you connect to each of these site's APIs in order to programmatically post, update, and enjoy with these services.",{"type":43,"tag":56,"props":1079,"children":1080},{},[1081],{"type":49,"value":1082},"Writing a single markdown file for my personal blog and copy and pasting it into these other blogging platforms isn't too challenging... until I need to edit something. A simple type change requires me to load four different sites, navigating through their wildly different UI, in order to make simple changes.",{"type":43,"tag":52,"props":1084,"children":1085},{},[1086],{"type":43,"tag":56,"props":1087,"children":1088},{},[1089],{"type":49,"value":1090},"This gets old fast.",{"type":43,"tag":56,"props":1092,"children":1093},{},[1094],{"type":43,"tag":644,"props":1095,"children":1096},{},[1097],{"type":49,"value":1098},"We're developers. It's much more fun and beneficial to automate these repetitive tasks.",{"type":43,"tag":124,"props":1100,"children":1102},{"id":1101},"medium-api",[1103],{"type":49,"value":1104},"Medium API",{"type":43,"tag":52,"props":1106,"children":1107},{},[1108],{"type":43,"tag":56,"props":1109,"children":1110},{},[1111,1113],{"type":49,"value":1112},"Documentation - ",{"type":43,"tag":62,"props":1114,"children":1117},{"href":1115,"rel":1116},"https://github.com/Medium/medium-api-docs",[66],[1118],{"type":49,"value":1115},{"type":43,"tag":1120,"props":1121,"children":1123},"h3",{"id":1122},"getting-the-authentication-token",[1124],{"type":49,"value":1125},"Getting the authentication token",{"type":43,"tag":764,"props":1127,"children":1128},{},[1129,1134,1139],{"type":43,"tag":184,"props":1130,"children":1131},{},[1132],{"type":49,"value":1133},"Login to Medium",{"type":43,"tag":184,"props":1135,"children":1136},{},[1137],{"type":49,"value":1138},"Navigate to Integration tokens",{"type":43,"tag":184,"props":1140,"children":1141},{},[1142],{"type":49,"value":1143},"Enter description for your token and click the get integration token button",{"type":43,"tag":1145,"props":1146,"children":1147},"table",{},[1148,1166],{"type":43,"tag":1149,"props":1150,"children":1151},"thead",{},[1152],{"type":43,"tag":1153,"props":1154,"children":1155},"tr",{},[1156],{"type":43,"tag":1157,"props":1158,"children":1160},"th",{"align":1159},"center",[1161],{"type":43,"tag":707,"props":1162,"children":1165},{"alt":1163,"src":1164},"Generate Integration Token","https://codybontecou.com/images/get-medium-integration-token.png",[],{"type":43,"tag":1167,"props":1168,"children":1169},"tbody",{},[1170],{"type":43,"tag":1153,"props":1171,"children":1172},{},[1173],{"type":43,"tag":1174,"props":1175,"children":1176},"td",{"align":1159},[1177],{"type":43,"tag":281,"props":1178,"children":1179},{},[1180],{"type":49,"value":1181},"Medium's integration token panel",{"type":43,"tag":56,"props":1183,"children":1184},{},[1185],{"type":49,"value":1186},"This will generate a token that will be included within requests to Medium's API.",{"type":43,"tag":1120,"props":1188,"children":1190},{"id":1189},"getting-the-authenticated-users-details",[1191],{"type":49,"value":1192},"Getting the authenticated user’s details",{"type":43,"tag":56,"props":1194,"children":1195},{},[1196,1198,1204],{"type":49,"value":1197},"Medium provides the endpoint ",{"type":43,"tag":272,"props":1199,"children":1201},{"className":1200},[],[1202],{"type":49,"value":1203},"GET https://api.medium.com/v1/me",{"type":49,"value":1205}," to get the authenticated user data.",{"type":43,"tag":56,"props":1207,"children":1208},{},[1209],{"type":49,"value":1210},"Here's an example request using NodeJS:",{"type":43,"tag":324,"props":1212,"children":1215},{"className":1213,"code":1214,"language":868,"meta":6},[866],"fetch('https://api.medium.com/v1/me', {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer \u003CAUTHENTICATION TOKEN HERE>',\n  },\n})\n  .then(res => res.json())\n  .then(res => console.log(JSON.stringify(res)))\n",[1216],{"type":43,"tag":272,"props":1217,"children":1218},{"__ignoreMap":6},[1219],{"type":49,"value":1214},{"type":43,"tag":56,"props":1221,"children":1222},{},[1223,1225,1231],{"type":49,"value":1224},"Within the data returned from this endpoint is an ",{"type":43,"tag":272,"props":1226,"children":1228},{"className":1227},[],[1229],{"type":49,"value":1230},"id",{"type":49,"value":1232},". You will want to save this ID value because it will be required to create a Medium article using NodeJS.",{"type":43,"tag":1120,"props":1234,"children":1236},{"id":1235},"programmatically-creating-a-medium-article",[1237],{"type":49,"value":1238},"Programmatically creating a Medium article",{"type":43,"tag":56,"props":1240,"children":1241},{},[1242,1244,1250],{"type":49,"value":1243},"Now that we have the authentication token and ID, we can use the endpoint ",{"type":43,"tag":272,"props":1245,"children":1247},{"className":1246},[],[1248],{"type":49,"value":1249},"POST https://api.medium.com/v1/users/\u003CauthorId>/posts",{"type":49,"value":1251},". The documentation posted above goes into detail on what parameters are required and/or available.",{"type":43,"tag":56,"props":1253,"children":1254},{},[1255,1257,1263,1265,1270,1271,1277],{"type":49,"value":1256},"This endpoint accepts either markdown or HTML. You need to explicitly set the ",{"type":43,"tag":272,"props":1258,"children":1260},{"className":1259},[],[1261],{"type":49,"value":1262},"contentFormat",{"type":49,"value":1264}," field to either ",{"type":43,"tag":272,"props":1266,"children":1268},{"className":1267},[],[1269],{"type":49,"value":603},{"type":49,"value":405},{"type":43,"tag":272,"props":1272,"children":1274},{"className":1273},[],[1275],{"type":49,"value":1276},"html",{"type":49,"value":104},{"type":43,"tag":56,"props":1279,"children":1280},{},[1281],{"type":49,"value":1282},"Here's an example of a request using NodeJS:",{"type":43,"tag":324,"props":1284,"children":1287},{"className":1285,"code":1286,"language":868,"meta":6},[866],"fetch('https://api.medium.com/v1/users/\u003CUSER-ID>/posts', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer \u003CREPLACE WITH TOKEN GENERATED ABOVE>',\n  },\n  body: JSON.stringify({\n    title: 'Liverpool FC',\n    contentFormat: 'markdown',\n    content: '# You can put Markdown here.\\n***\\nSee what it looks like?',\n    canonicalUrl: 'http://jamietalbot.com/posts/liverpool-fc',\n    tags: ['football', 'sport', 'Liverpool'],\n    publishStatus: 'public',\n  }),\n})\n  .then(res => res.json())\n  .then(res => console.log(JSON.stringify(res)))\n",[1288],{"type":43,"tag":272,"props":1289,"children":1290},{"__ignoreMap":6},[1291],{"type":49,"value":1286},{"type":43,"tag":56,"props":1293,"children":1294},{},[1295,1297],{"type":49,"value":1296},"If this returned a 201 status code, you should now be able to see your post on ",{"type":43,"tag":62,"props":1298,"children":1301},{"href":1299,"rel":1300},"https://medium.com",[66],[1302],{"type":49,"value":1303},"Medium.com",{"type":43,"tag":1120,"props":1305,"children":1307},{"id":1306},"available-endpoints",[1308],{"type":49,"value":1309},"Available Endpoints:",{"type":43,"tag":56,"props":1311,"children":1312},{},[1313],{"type":49,"value":1314},"Here's a list of the available endpoints:",{"type":43,"tag":56,"props":1316,"children":1317},{},[1318],{"type":43,"tag":644,"props":1319,"children":1320},{},[1321],{"type":49,"value":1322},"Getting the authenticated user’s details:",{"type":43,"tag":56,"props":1324,"children":1325},{},[1326],{"type":43,"tag":272,"props":1327,"children":1329},{"className":1328},[],[1330],{"type":49,"value":1203},{"type":43,"tag":56,"props":1332,"children":1333},{},[1334],{"type":43,"tag":644,"props":1335,"children":1336},{},[1337],{"type":49,"value":1338},"Listing the user’s publications:",{"type":43,"tag":56,"props":1340,"children":1341},{},[1342],{"type":43,"tag":272,"props":1343,"children":1345},{"className":1344},[],[1346],{"type":49,"value":1347},"GET https://api.medium.com/v1/users/\u003CuserId>/publications",{"type":43,"tag":56,"props":1349,"children":1350},{},[1351],{"type":43,"tag":644,"props":1352,"children":1353},{},[1354],{"type":49,"value":1355},"Fetching contributors for a publication:",{"type":43,"tag":56,"props":1357,"children":1358},{},[1359],{"type":43,"tag":272,"props":1360,"children":1362},{"className":1361},[],[1363],{"type":49,"value":1364},"GET https://api.medium.com/v1/publications/\u003CpublicationId>/contributors",{"type":43,"tag":56,"props":1366,"children":1367},{},[1368],{"type":43,"tag":644,"props":1369,"children":1370},{},[1371],{"type":49,"value":1372},"Creating a post:",{"type":43,"tag":56,"props":1374,"children":1375},{},[1376],{"type":43,"tag":272,"props":1377,"children":1379},{"className":1378},[],[1380],{"type":49,"value":1249},{"type":43,"tag":56,"props":1382,"children":1383},{},[1384],{"type":43,"tag":644,"props":1385,"children":1386},{},[1387],{"type":49,"value":1388},"Creating a post under a publication:",{"type":43,"tag":56,"props":1390,"children":1391},{},[1392],{"type":43,"tag":272,"props":1393,"children":1395},{"className":1394},[],[1396],{"type":49,"value":1397},"POST https://api.medium.com/v1/publications/\u003CpublicationId>/posts",{"type":43,"tag":56,"props":1399,"children":1400},{},[1401],{"type":43,"tag":644,"props":1402,"children":1403},{},[1404],{"type":49,"value":1405},"Uploading an image:",{"type":43,"tag":56,"props":1407,"children":1408},{},[1409],{"type":43,"tag":272,"props":1410,"children":1412},{"className":1411},[],[1413],{"type":49,"value":1414},"POST https://api.medium.com/v1/images",{"type":43,"tag":56,"props":1416,"children":1417},{},[1418],{"type":49,"value":1419},"Unfortunately, Medium's public API is fairly limited. We can create and get posts, but the ability to programmatically edit them is not there yet. I hope this eventually changes, giving the programmer better tools to work with them,",{"type":43,"tag":124,"props":1421,"children":1423},{"id":1422},"devto-api",[1424],{"type":49,"value":1425},"dev.to API",{"type":43,"tag":52,"props":1427,"children":1428},{},[1429],{"type":43,"tag":56,"props":1430,"children":1431},{},[1432,1433],{"type":49,"value":1112},{"type":43,"tag":62,"props":1434,"children":1437},{"href":1435,"rel":1436},"https://docs.forem.com/api/",[66],[1438],{"type":49,"value":1435},{"type":43,"tag":1120,"props":1440,"children":1442},{"id":1441},"getting-the-authentication-token-1",[1443],{"type":49,"value":1125},{"type":43,"tag":56,"props":1445,"children":1446},{},[1447,1449,1456],{"type":49,"value":1448},"This will require a dev.to account. Navigate to their ",{"type":43,"tag":62,"props":1450,"children":1453},{"href":1451,"rel":1452},"https://docs.forem.com/api/#section/Authentication",[66],[1454],{"type":49,"value":1455},"docs",{"type":49,"value":1457}," and follow the instructions to get the authentication token.",{"type":43,"tag":1120,"props":1459,"children":1461},{"id":1460},"creating-an-devto-article-using-their-api",[1462],{"type":49,"value":1463},"Creating an dev.to article using their API",{"type":43,"tag":56,"props":1465,"children":1466},{},[1467,1469,1475],{"type":49,"value":1468},"Their documentation is far more extensive than Medium's public API. Their docs for this endpoint are ",{"type":43,"tag":62,"props":1470,"children":1473},{"href":1471,"rel":1472},"https://docs.forem.com/api/#operation/createArticle",[66],[1474],{"type":49,"value":69},{"type":49,"value":1476},". If you click the article dropdown arrow, you can see all of the parameters that they accept. You can",{"type":43,"tag":1478,"props":1479,"children":1481},"h4",{"id":1480},"example-request-using-nodejs",[1482],{"type":49,"value":1483},"Example request using NodeJS:",{"type":43,"tag":324,"props":1485,"children":1488},{"className":1486,"code":1487,"language":868,"meta":6},[866],"fetch('https://dev.to/api/articles', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'api-key': '\u003CAUTHENTICATION TOKEN HERE>',\n  },\n  body: JSON.stringify({\n    article: {\n      title: 'Hello, World!',\n      published: true,\n      content: '# You can put Markdown here.\\n***\\n',\n      tags: ['discuss', 'help'],\n      series: 'Hello series',\n    },\n  }),\n})\n  .then(res => res.json())\n  .then(res => console.log(JSON.stringify(res)))\n",[1489],{"type":43,"tag":272,"props":1490,"children":1491},{"__ignoreMap":6},[1492],{"type":49,"value":1487},{"type":43,"tag":124,"props":1494,"children":1496},{"id":1495},"hashnode-api",[1497],{"type":49,"value":1498},"Hashnode API",{"type":43,"tag":52,"props":1500,"children":1501},{},[1502],{"type":43,"tag":56,"props":1503,"children":1504},{},[1505,1506],{"type":49,"value":1112},{"type":43,"tag":62,"props":1507,"children":1510},{"href":1508,"rel":1509},"https://api.hashnode.com/",[66],[1511],{"type":49,"value":1508},{"type":43,"tag":56,"props":1513,"children":1514},{},[1515],{"type":49,"value":1516},"Hashnode's API is a GraphQL API unlike the REST APIs we worked with in Medium and dev.to.",{"type":43,"tag":56,"props":1518,"children":1519},{},[1520,1522,1529,1531,1537,1538,1544],{"type":49,"value":1521},"They have a few blogposts within their ",{"type":43,"tag":62,"props":1523,"children":1526},{"href":1524,"rel":1525},"https://engineering.hashnode.com/",[66],[1527],{"type":49,"value":1528},"blog",{"type":49,"value":1530}," discussing their public API, but they were posted in 2019 so a handful of things discussed within the articles have been deprecated such as the ",{"type":43,"tag":272,"props":1532,"children":1534},{"className":1533},[],[1535],{"type":49,"value":1536},"GLOBAL",{"type":49,"value":287},{"type":43,"tag":272,"props":1539,"children":1541},{"className":1540},[],[1542],{"type":49,"value":1543},"FOR_ME",{"type":49,"value":1545}," FeedType's. Give them a read if you want to understand things a bit better, but keep in mind that a lot of the parameters have been deprecated.",{"type":43,"tag":1120,"props":1547,"children":1549},{"id":1548},"getting-the-authentication-token-2",[1550],{"type":49,"value":1125},{"type":43,"tag":56,"props":1552,"children":1553},{},[1554],{"type":49,"value":1555},"You can create/revoke them from Hashnode settings. Login to your account, go to the developer settings, and generate a new token.",{"type":43,"tag":1145,"props":1557,"children":1558},{},[1559,1573],{"type":43,"tag":1149,"props":1560,"children":1561},{},[1562],{"type":43,"tag":1153,"props":1563,"children":1564},{},[1565],{"type":43,"tag":1157,"props":1566,"children":1567},{"align":1159},[1568],{"type":43,"tag":707,"props":1569,"children":1572},{"alt":1570,"src":1571},"Generate Hashnode Auth Token","https://codybontecou.com/images/hashnode-auth-token.png",[],{"type":43,"tag":1167,"props":1574,"children":1575},{},[1576],{"type":43,"tag":1153,"props":1577,"children":1578},{},[1579],{"type":43,"tag":1174,"props":1580,"children":1581},{"align":1159},[1582],{"type":43,"tag":281,"props":1583,"children":1584},{},[1585],{"type":49,"value":1570},{"type":43,"tag":1120,"props":1587,"children":1589},{"id":1588},"documentation",[1590],{"type":49,"value":1591},"Documentation",{"type":43,"tag":56,"props":1593,"children":1594},{},[1595,1597,1603],{"type":49,"value":1596},"I've found the source of truth to be within their ",{"type":43,"tag":62,"props":1598,"children":1600},{"href":1508,"rel":1599},[66],[1601],{"type":49,"value":1602},"GraphQL Playground",{"type":49,"value":1604},". You'll need to click around their playground to see what endpoints are available as well as the expected inputs.",{"type":43,"tag":1145,"props":1606,"children":1607},{},[1608,1622],{"type":43,"tag":1149,"props":1609,"children":1610},{},[1611],{"type":43,"tag":1153,"props":1612,"children":1613},{},[1614],{"type":43,"tag":1157,"props":1615,"children":1616},{"align":1159},[1617],{"type":43,"tag":707,"props":1618,"children":1621},{"alt":1619,"src":1620},"Hashnode API Playground","https://codybontecou.com/images/graphql-playground.png",[],{"type":43,"tag":1167,"props":1623,"children":1624},{},[1625],{"type":43,"tag":1153,"props":1626,"children":1627},{},[1628],{"type":43,"tag":1174,"props":1629,"children":1630},{"align":1159},[1631],{"type":43,"tag":281,"props":1632,"children":1633},{},[1634],{"type":49,"value":1635},"Hashnode's GraphQL Api Playground",{"type":43,"tag":1145,"props":1637,"children":1638},{},[1639,1653],{"type":43,"tag":1149,"props":1640,"children":1641},{},[1642],{"type":43,"tag":1153,"props":1643,"children":1644},{},[1645],{"type":43,"tag":1157,"props":1646,"children":1647},{"align":1159},[1648],{"type":43,"tag":707,"props":1649,"children":1652},{"alt":1650,"src":1651},"Hashnode Documentation Navigation","https://codybontecou.com/images/hashnode-doc-navigation.png",[],{"type":43,"tag":1167,"props":1654,"children":1655},{},[1656],{"type":43,"tag":1153,"props":1657,"children":1658},{},[1659],{"type":43,"tag":1174,"props":1660,"children":1661},{"align":1159},[1662],{"type":43,"tag":281,"props":1663,"children":1664},{},[1665],{"type":49,"value":1650},{"type":43,"tag":1478,"props":1667,"children":1669},{"id":1668},"example-request-using-nodejs-1",[1670],{"type":49,"value":1483},{"type":43,"tag":324,"props":1672,"children":1675},{"className":1673,"code":1674,"language":868,"meta":6},[866],"fetch('https://api.hashnode.com', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: '\u003CAUTHENTICATION TOKEN HERE>',\n  },\n  body: JSON.stringify({\n    query:\n      'mutation createStory($input: CreateStoryInput!){ createStory(input: $input){ code success message } }',\n    variables: {\n      input: {\n        title: 'What are the e2e testing libraries you use ?',\n        contentMarkdown: '# You can put Markdown here.\\n***\\n',\n        tags: [\n          {\n            _id: '56744723958ef13879b9549b',\n            slug: 'testing',\n            name: 'Testing',\n          },\n        ],\n        coverImageURL:\n          'https://codybontecou.com/images/header-meta-component.png',\n      },\n    },\n  }),\n})\n  .then(res => res.json())\n  .then(res => console.log(JSON.stringify(res)))\n",[1676],{"type":43,"tag":272,"props":1677,"children":1678},{"__ignoreMap":6},[1679],{"type":49,"value":1674},{"type":43,"tag":124,"props":1681,"children":1683},{"id":1682},"conclusion",[1684],{"type":49,"value":1685},"Conclusion",{"type":43,"tag":56,"props":1687,"children":1688},{},[1689,1691,1697,1699,1704,1705,1711],{"type":49,"value":1690},"Now that we can programmatically post to these three sites, we can build out an application that allows dynamic inputs, such as a file reader to pass a ",{"type":43,"tag":272,"props":1692,"children":1694},{"className":1693},[],[1695],{"type":49,"value":1696},".md",{"type":49,"value":1698}," file to the requests ",{"type":43,"tag":272,"props":1700,"children":1702},{"className":1701},[],[1703],{"type":49,"value":605},{"type":49,"value":287},{"type":43,"tag":272,"props":1706,"children":1708},{"className":1707},[],[1709],{"type":49,"value":1710},"contentMarkdown",{"type":49,"value":1712}," parameters, editing posts, and many other things. We",{"type":43,"tag":56,"props":1714,"children":1715},{},[1716],{"type":49,"value":1717},"Keep an eye out. I plan on spending some time building out an interface for Dev Bloggers to be able to do just that. It's not fun manually editing the same text in each post across four different sites. I hope to solve that problem.",{"type":43,"tag":56,"props":1719,"children":1720},{},[1721],{"type":49,"value":1722},"Good luck!",{"type":43,"tag":56,"props":1724,"children":1725},{},[1726,1728],{"type":49,"value":1727},"Let me know what you think of this article through Twitter ",{"type":43,"tag":62,"props":1729,"children":1731},{"href":1022,"rel":1730},[66],[1732],{"type":49,"value":1026},{"title":6,"searchDepth":593,"depth":593,"links":1734},[1735,1741,1745,1749],{"id":1101,"depth":593,"text":1104,"children":1736},[1737,1738,1739,1740],{"id":1122,"depth":927,"text":1125},{"id":1189,"depth":927,"text":1192},{"id":1235,"depth":927,"text":1238},{"id":1306,"depth":927,"text":1309},{"id":1422,"depth":593,"text":1425,"children":1742},[1743,1744],{"id":1441,"depth":927,"text":1125},{"id":1460,"depth":927,"text":1463},{"id":1495,"depth":593,"text":1498,"children":1746},[1747,1748],{"id":1548,"depth":927,"text":1125},{"id":1588,"depth":927,"text":1591},{"id":1682,"depth":593,"text":1685},"content:programmatically-posting-to-your-favorite-blogs.md","programmatically-posting-to-your-favorite-blogs.md","programmatically-posting-to-your-favorite-blogs",{"_path":1754,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":1755,"description":1756,"author":1757,"date":1758,"category":15,"dropdown":1759,"topics":1760,"canonicalUrl":1764,"body":1765,"_type":603,"_id":2233,"_source":605,"_file":2234,"_stem":2235,"_extension":608},"/automate-with-zapier","Automate your social media posts with Zapier","This is the page description that will be used",{"name":12,"image":13},"2020-06-28T00:00:00.000Z","Marketing",[21,20,1761,1762,1763],"youtube","marketing","zapier","https://codybontecou.com/automate-with-zapier.html",{"type":40,"children":1766,"toc":2217},[1767,1776,1801,1817,1822,1828,1833,1856,1861,1866,1902,1907,1912,1918,1926,1931,1937,1943,1952,1963,1969,1978,1983,2015,2021,2032,2041,2047,2052,2061,2090,2096,2102,2107,2116,2122,2127,2136,2161,2166,2172,2192,2197,2206,2212],{"type":43,"tag":44,"props":1768,"children":1773},{"className":1769,"id":1772},[1770,1771],"text-4xl","font-semibold","automate-social-media-content-with-zapier",[1774],{"type":49,"value":1775},"Automate Social Media Content With Zapier",{"type":43,"tag":1777,"props":1778,"children":1785},"div",{"className":1779},[1780,1781,1782,1783,1784],"mt-6","w-full","flex","items-center","justify-center",[1786,1788],{"type":49,"value":1787},"\n  ",{"type":43,"tag":1777,"props":1789,"children":1793},{"className":1790},[1782,1783,1784,1791,1792],"w-1/2","md:w-full",[1794,1796],{"type":49,"value":1795},"\n    ",{"type":43,"tag":1797,"props":1798,"children":1799},"zapierlogo",{},[1800],{"type":49,"value":1787},{"type":43,"tag":56,"props":1802,"children":1803},{},[1804,1806,1815],{"type":49,"value":1805},"Of all of the no-code solutions I've tried ",{"type":43,"tag":62,"props":1807,"children":1812},{"className":1808,"href":1811},[1809,1810],"text-black","font-medium","https://zapier.com/",[1813],{"type":49,"value":1814},"Zapier",{"type":49,"value":1816}," has been the most powerful, intuitive tools to work with.",{"type":43,"tag":56,"props":1818,"children":1819},{},[1820],{"type":49,"value":1821},"This article will show you how within a few clicks, you can create a \"zap\" or system of events that will automatically generate data-enriched messages that will be posted on Twitter whenever you upload a Youtube video.",{"type":43,"tag":124,"props":1823,"children":1825},{"id":1824},"lets-get-started",[1826],{"type":49,"value":1827},"Lets get started",{"type":43,"tag":56,"props":1829,"children":1830},{},[1831],{"type":49,"value":1832},"Log in and you'll be met with the dashboard with this \"Create your own workflow\" section.",{"type":43,"tag":1777,"props":1834,"children":1837},{"className":1835},[1782,1836,1783,1784],"flex-col",[1838,1839,1844,1845],{"type":49,"value":1787},{"type":43,"tag":707,"props":1840,"children":1843},{"src":1841,"alt":1842},"https://lh3.googleusercontent.com/pw/ACtC-3c2Ic3xgKSnI3iYtXZPeaYc0_jq99Q9JEnWNxc6_4xKI-jf8Q_iV61pt84pI-hGKy8OhKltYQ5NgWWR1ogOeVRE48l_R5GqJlLwr_SePq9amgVa1KYPySERsQm5OAXw1zsGhb9or5dp3BuphR08Fo8=w1130-h387-no?authuser=0","First step of creating a Zapier Zap, by connecting Youtube with Twitter in their Dashboard's dropdown menu.",[],{"type":49,"value":1787},{"type":43,"tag":1478,"props":1846,"children":1853},{"className":1847,"id":1852},[1848,1849,1850,1851],"mt-4","text-sm","font-light","text-gray-500","in-the-first-row-connect-youtube-to-twitter",[1854],{"type":49,"value":1855},"In the first row, connect Youtube to Twitter.",{"type":43,"tag":56,"props":1857,"children":1858},{},[1859],{"type":49,"value":1860},"This step is simply connecting two applications together. In this example, I am using Youtube and Twitter. Zapier claims to have over 3000 applications you can integrate.",{"type":43,"tag":56,"props":1862,"children":1863},{},[1864],{"type":49,"value":1865},"This is a simple example between two well known social media applications, but Zapier offers an amazing catalog of applications you can create automated workflows with.",{"type":43,"tag":1777,"props":1867,"children":1870},{"className":1868},[1869,1782,1836,1783,1784],"mt-10",[1871,1872,1877,1878],{"type":49,"value":1787},{"type":43,"tag":707,"props":1873,"children":1876},{"src":1874,"alt":1875},"https://lh3.googleusercontent.com/pw/ACtC-3dKVYFDGkQ8h4TT2ZV9EWeiCthB8Wmjnt0qRZuhJaOuDD-SPp0YIa80O6TT8Y3vz11hmacdvpKnFA6GLaKXhEInfg3p0w8pVQ0-M6qMzkqZmDW5DYy9ygAlf7B-5uMEhBcNMBF8ay6xCpF0KZCBMVo=w1130-h257-no","Create a Zapier trigger to Post a tweet on Twitter whenever a specific Youtube channel uploads a video.",[],{"type":49,"value":1787},{"type":43,"tag":1478,"props":1879,"children":1882},{"className":1880,"id":1881},[1848,1849,1850,1851],"i-state-a-trigger-when-a-new-youtube-video-is-posted-and-an-action-to-create-a-tweet",[1883,1885,1892,1894,1900],{"type":49,"value":1884},"I state a ",{"type":43,"tag":1886,"props":1887,"children":1889},"span",{"className":1888},[1771],[1890],{"type":49,"value":1891},"trigger",{"type":49,"value":1893}," when a new YouTube video is posted, and an ",{"type":43,"tag":1886,"props":1895,"children":1897},{"className":1896},[1771],[1898],{"type":49,"value":1899},"action",{"type":49,"value":1901}," to create a tweet.",{"type":43,"tag":56,"props":1903,"children":1904},{},[1905],{"type":49,"value":1906},"Here is where we state a trigger, which is when a new YouTube video is posted by a particular YouTube channel and an action, which is to create a tweet once the video is posted.",{"type":43,"tag":56,"props":1908,"children":1909},{},[1910],{"type":49,"value":1911},"In the .gif you can see there is a decent number of triggers and actions, such as adding a video to a playlist or updating your twitter profile picture.",{"type":43,"tag":1120,"props":1913,"children":1915},{"id":1914},"creating-a-zap",[1916],{"type":49,"value":1917},"Creating a Zap",{"type":43,"tag":52,"props":1919,"children":1920},{},[1921],{"type":43,"tag":56,"props":1922,"children":1923},{},[1924],{"type":49,"value":1925},"Now comes the fun part.",{"type":43,"tag":56,"props":1927,"children":1928},{},[1929],{"type":49,"value":1930},"This is where we begin fine tuning the parameters of the trigger and action.",{"type":43,"tag":124,"props":1932,"children":1934},{"id":1933},"zapier-trigger-making-the-tweet",[1935],{"type":49,"value":1936},"Zapier Trigger - Making the tweet",{"type":43,"tag":1120,"props":1938,"children":1940},{"id":1939},"connect-your-zapier-to-youtube",[1941],{"type":49,"value":1942},"Connect your Zapier to Youtube",{"type":43,"tag":56,"props":1944,"children":1945},{},[1946],{"type":43,"tag":707,"props":1947,"children":1951},{"className":1948,"src":1950,"alt":1875},[1949],"mt-8","https://lh3.googleusercontent.com/pw/ACtC-3e6VrtfxfjJfcC3t45xxbDfBnSDi7iOE1DyM_uSU5kt-uak5omoctc_YZx_EdZ1nMWKrDufq01Ng132BNpKDKFmHDzC6Dk-JVaOf8DXsF0EB5V6u4__Acu2WeBUxfON41Kk5czaAf0csELVV5h1fuc=w1860-h1340-no?authuser=0",[],{"type":43,"tag":56,"props":1953,"children":1954},{},[1955,1957,1962],{"type":49,"value":1956},"You will have to connect your Youtube account to Zapier using Oauth, then specify the trigger event. In this case, I will be selecting ",{"type":43,"tag":644,"props":1958,"children":1959},{},[1960],{"type":49,"value":1961},"New Video In Channel",{"type":49,"value":104},{"type":43,"tag":1120,"props":1964,"children":1966},{"id":1965},"connect-your-youtubes-channel-id",[1967],{"type":49,"value":1968},"Connect your Youtube's Channel ID",{"type":43,"tag":56,"props":1970,"children":1971},{},[1972],{"type":43,"tag":707,"props":1973,"children":1977},{"className":1974,"src":1975,"alt":1976},[1949],"https://lh3.googleusercontent.com/pw/ACtC-3c__qgDzvQNeKFQD1WKPiZeepvfyo_mYbF4GHc8FDz9wlCrbZCsqQPeFP9DiE8McqmG7O1UUiY-wKSzG3mOG2giH3L7_Temo79tEvW0Ea-JWV-zfScuPZOI3otFDn2dfZFjbTg0Ul6jB3m456MIMJI=w1858-h1162-no?authuser=0","Connect Youtube Account ID that I want to watch using Zapier",[],{"type":43,"tag":56,"props":1979,"children":1980},{},[1981],{"type":49,"value":1982},"Here, you will input the Channel ID that you want to watch. To find your Youtube's Channel ID, follow these four steps:",{"type":43,"tag":180,"props":1984,"children":1985},{},[1986,1987,1994,1995,2001,2002,2008,2009],{"type":49,"value":1787},{"type":43,"tag":184,"props":1988,"children":1991},{"className":1989},[1990],"list-decimal",[1992],{"type":49,"value":1993},"Sign in to YouTube.",{"type":49,"value":1787},{"type":43,"tag":184,"props":1996,"children":1998},{"className":1997},[1990],[1999],{"type":49,"value":2000},"In the top right, click your profile picture and then Settings Settings.",{"type":49,"value":1787},{"type":43,"tag":184,"props":2003,"children":2005},{"className":2004},[1990],[2006],{"type":49,"value":2007},"From the left Menu, select Advanced settings.",{"type":49,"value":1787},{"type":43,"tag":184,"props":2010,"children":2012},{"className":2011},[1990],[2013],{"type":49,"value":2014},"You’ll see your channel’s user and channel IDs.",{"type":43,"tag":1120,"props":2016,"children":2018},{"id":2017},"test-your-trigger",[2019],{"type":49,"value":2020},"Test your trigger",{"type":43,"tag":56,"props":2022,"children":2023},{},[2024,2026,2031],{"type":49,"value":2025},"You can test if the trigger is properly connected to your account. Please note: ",{"type":43,"tag":644,"props":2027,"children":2028},{},[2029],{"type":49,"value":2030},"the test will only work if the Youtube account has already posted a video and the video is public",{"type":49,"value":104},{"type":43,"tag":56,"props":2033,"children":2034},{},[2035],{"type":43,"tag":707,"props":2036,"children":2040},{"className":2037,"src":2038,"alt":2039},[1949],"https://lh3.googleusercontent.com/pw/ACtC-3fLsjlrdi7CJMJ1LU2L1Cska8qT2BdC1kmFVZY5W7TbicHL5VCUsMG9PH6nZ_5HqvasId6rBP9J8nXgKGVkjivaFLBWk8sgh2wmZzAqiFyOgKZnT3lNkUal7k0khTtg6FHusibqfj8RwyOBFnhv5SE=w1644-h726-no?authuser=0","Test your Zapier trigger",[],{"type":43,"tag":1120,"props":2042,"children":2044},{"id":2043},"data-returned-from-a-successful-trigger",[2045],{"type":49,"value":2046},"Data returned from a successful trigger",{"type":43,"tag":56,"props":2048,"children":2049},{},[2050],{"type":49,"value":2051},"If everything is connected properly, you will see a success message and a scrollable window containing the trigger's data that will be available to your actions.",{"type":43,"tag":56,"props":2053,"children":2054},{},[2055],{"type":43,"tag":707,"props":2056,"children":2060},{"className":2057,"src":2058,"alt":2059},[1949],"https://lh3.googleusercontent.com/pw/ACtC-3d2JT0dJFAYwkAzZ2JWNIPn6WdHj6VudAqb-ZOLPpRys8TajJn4uAZ04bfw3bX7X3Uh2CEYrNAL1OX3aK1bP3ONaEaxkGuiW87-bdk5qf0f45XXbQSnOrVsqL6M6fwafRvN8aSNokx694o3w2BJnww=w1636-h1252-no?authuser=0","Data structure returned from your successful trigger test.",[],{"type":43,"tag":56,"props":2062,"children":2063},{},[2064,2066,2072,2074,2080,2082,2088],{"type":49,"value":2065},"Because we are making a tweet to advertise the video, I imagine a few data points we are interested include the ",{"type":43,"tag":272,"props":2067,"children":2069},{"className":2068},[],[2070],{"type":49,"value":2071},"play_url",{"type":49,"value":2073},", ",{"type":43,"tag":272,"props":2075,"children":2077},{"className":2076},[],[2078],{"type":49,"value":2079},"title",{"type":49,"value":2081},", and ",{"type":43,"tag":272,"props":2083,"children":2085},{"className":2084},[],[2086],{"type":49,"value":2087},"description",{"type":49,"value":2089},". This screenshot doesn't due the data justice, but I will show you how I use this data in the following Twitter action.",{"type":43,"tag":124,"props":2091,"children":2093},{"id":2092},"zapier-action-making-the-tweet",[2094],{"type":49,"value":2095},"Zapier Action - Making the tweet",{"type":43,"tag":1120,"props":2097,"children":2099},{"id":2098},"create-tweet-when-action-is-triggered",[2100],{"type":49,"value":2101},"Create Tweet when action is triggered",{"type":43,"tag":56,"props":2103,"children":2104},{},[2105],{"type":49,"value":2106},"Fairly self-explanatory, but I'll include a screenshot just incase you need it.",{"type":43,"tag":56,"props":2108,"children":2109},{},[2110],{"type":43,"tag":707,"props":2111,"children":2115},{"className":2112,"src":2113,"alt":2114},[1949],"https://lh3.googleusercontent.com/pw/ACtC-3cxxJlY6uHaVZpFVoiKlSj9-xYesSsvYVpJKIGgpDoDzkmDZX4URs9AbkkqpAn5k-kYgukykI_dbDbwgI-1GPaMTESpu_UGIHTUHbi3_rB0P1YFxi8grkV1vxiamkoa-teElVulRkbBuJCBKvfHhqw=w1910-h1156-no?authuser=0","Select Create Tweet for Twitter trigger.",[],{"type":43,"tag":1120,"props":2117,"children":2119},{"id":2118},"setting-up-the-action",[2120],{"type":49,"value":2121},"Setting up the action",{"type":43,"tag":56,"props":2123,"children":2124},{},[2125],{"type":49,"value":2126},"Setting up the action is where we can play with the data and generate our tweet.",{"type":43,"tag":56,"props":2128,"children":2129},{},[2130],{"type":43,"tag":707,"props":2131,"children":2135},{"className":2132,"src":2133,"alt":2134},[1949],"https://lh3.googleusercontent.com/pw/ACtC-3dOkE-3EMhBEnPmVlcTKnV10BFPhh_99ANgKFuccknTW2S-pfR1ltGPdJktEXVd03-1hxZifdKtYAqWA12mbh66uHRUgnud4fALSag2_mClJKIZiTCh5Ytqvn7mzEolGNI2kRr_Hm3zhbUT6A-WSIw=w1656-h1190-no?authuser=0","Showcase of data provided by Youtube video trigger",[],{"type":43,"tag":56,"props":2137,"children":2138},{},[2139,2141,2146,2147,2153,2154,2159],{"type":49,"value":2140},"While setting up the action, you are able to generate a message for your tweet. There is an \"Insert Data ...\" option that allows you to insert data that was gathered when the Youtube trigger occurred. In the screenshot above, you can see some of the video data points such as ",{"type":43,"tag":272,"props":2142,"children":2144},{"className":2143},[],[2145],{"type":49,"value":2079},{"type":49,"value":2073},{"type":43,"tag":272,"props":2148,"children":2150},{"className":2149},[],[2151],{"type":49,"value":2152},"url",{"type":49,"value":287},{"type":43,"tag":272,"props":2155,"children":2157},{"className":2156},[],[2158],{"type":49,"value":2087},{"type":49,"value":2160}," are available to be used within the tweet.",{"type":43,"tag":56,"props":2162,"children":2163},{},[2164],{"type":49,"value":2165},"I decide not to shorten the URl because I imagine users are more familiar with Youtube URL's than they are with Zapier's shortened URL's.",{"type":43,"tag":124,"props":2167,"children":2169},{"id":2168},"the-generated-tweet",[2170],{"type":49,"value":2171},"The generated tweet",{"type":43,"tag":56,"props":2173,"children":2174},{},[2175,2177,2182,2184,2190],{"type":49,"value":2176},"Now you should see the ability to test your action. ",{"type":43,"tag":644,"props":2178,"children":2179},{},[2180],{"type":49,"value":2181},"Testing this action will send the message to Twitter",{"type":49,"value":2183},". You can see within the action's ",{"type":43,"tag":272,"props":2185,"children":2187},{"className":2186},[],[2188],{"type":49,"value":2189},"Message",{"type":49,"value":2191}," field the Twitter tweet that was generated and will be sent to Twitter if the action is executed with this particular video that we tested it with.",{"type":43,"tag":56,"props":2193,"children":2194},{},[2195],{"type":49,"value":2196},"In our case, we are getting an undefined because the video we uploaded to test this didn't actually have a description when uploaded. Keep that in mind when using this automated workflow.",{"type":43,"tag":56,"props":2198,"children":2199},{},[2200],{"type":43,"tag":707,"props":2201,"children":2205},{"className":2202,"src":2203,"alt":2204},[1949],"https://lh3.googleusercontent.com/pw/ACtC-3eAzg5ycqHYSnl2QA1ts3x__yIpO5pEkbWC0Vec4RO_h2jR6kXba3LrOUgoCoYzREJGlGxq2lQOWJ22PA7Uv1Uy9N2809zPjM1Y9gYMJuOdPQFHxMMQ7uI3EwLOOSlKcLE5llOS4bHARZSAPXhRO6I=w1680-h974-no?authuser=0","Test your Twitter action and see the generated tweet",[],{"type":43,"tag":44,"props":2207,"children":2209},{"id":2208},"success",[2210],{"type":49,"value":2211},"Success!",{"type":43,"tag":56,"props":2213,"children":2214},{},[2215],{"type":49,"value":2216},"If all went well, you should now be able to automate Twitter tweets alongside your Youtube video uploads. I hope this article was helpful. Best of luck with your automation journey!",{"title":6,"searchDepth":593,"depth":593,"links":2218},[2219,2222,2228,2232],{"id":1824,"depth":593,"text":1827,"children":2220},[2221],{"id":1914,"depth":927,"text":1917},{"id":1933,"depth":593,"text":1936,"children":2223},[2224,2225,2226,2227],{"id":1939,"depth":927,"text":1942},{"id":1965,"depth":927,"text":1968},{"id":2017,"depth":927,"text":2020},{"id":2043,"depth":927,"text":2046},{"id":2092,"depth":593,"text":2095,"children":2229},[2230,2231],{"id":2098,"depth":927,"text":2101},{"id":2118,"depth":927,"text":2121},{"id":2168,"depth":593,"text":2171},"content:automate-with-zapier.md","automate-with-zapier.md","automate-with-zapier",1731183899005]