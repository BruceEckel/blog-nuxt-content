[{"data":1,"prerenderedAt":820},["ShallowReactive",2],{"post-/topics/cypress":3},[4,526,613],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":8,"description":9,"type":10,"author":11,"date":14,"last_modified_date":14,"slug":15,"dropdown":16,"meta":17,"canonicalUrl":31,"topics":32,"body":35,"_type":521,"_id":522,"_source":523,"_file":524,"_stem":15,"_extension":525},"/cypress-component-testing-with-nuxt-3","",false,"Cypress Component Testing with Nuxt 3","Showing the setup needed to get Cypress Component Testing working alongside Nuxt 3","post",{"name":12,"image":13},"Cody Bontecou","https://codybontecou.com/images/cody-abstract.jpeg","2023-03-20T00:00:00.000Z","cypress-component-testing-with-nuxt-3","Cypress",[18,20,23,25,27,29],{"name":19,"content":9},"og:description",{"name":21,"content":22},"og:image","https://codybontecou.com/images/cypress-component-testing-with-nuxt-3.png",{"name":24,"content":9},"og:image:alt",{"name":26,"content":8},"og:title",{"name":28,"content":8},"twitter:title",{"name":30,"content":8},"twitter:text:title","https://codybontecou.com/cypress-component-testing-with-nuxt-3.html",[33,34,16],"Testing","Nuxt",{"type":36,"children":37,"toc":509},"root",[38,48,59,66,79,85,94,100,113,124,129,142,151,164,173,178,203,210,218,223,231,255,266,279,292,301,307,320,325,338,349,362,371,384,393,399,413,418,438,451,460,471,480,485,490,496],{"type":39,"tag":40,"props":41,"children":42},"element","h1",{"id":6},[43],{"type":39,"tag":44,"props":45,"children":47},"binding",{"value":46},"$frontmatter.title",[],{"type":39,"tag":49,"props":50,"children":51},"blockquote",{},[52],{"type":39,"tag":53,"props":54,"children":55},"p",{},[56],{"type":57,"value":58},"text","This is a guide on setting up Cypress Component Testing with Nuxt 3.",{"type":39,"tag":60,"props":61,"children":63},"h2",{"id":62},"initialize-nuxt-project",[64],{"type":57,"value":65},"Initialize Nuxt project",{"type":39,"tag":67,"props":68,"children":73},"pre",{"code":69,"language":70,"meta":6,"className":71},"npx nuxi init nuxt-project\ncd nuxt-project\nnpm install\n","shell",[72],"language-shell",[74],{"type":39,"tag":75,"props":76,"children":77},"code",{"__ignoreMap":6},[78],{"type":57,"value":69},{"type":39,"tag":60,"props":80,"children":82},{"id":81},"install-initialize-cypress",[83],{"type":57,"value":84},"Install + initialize Cypress",{"type":39,"tag":67,"props":86,"children":89},{"code":87,"language":70,"meta":6,"className":88},"npm install cypress typescript --save-dev\nnpx cypress open\n",[72],[90],{"type":39,"tag":75,"props":91,"children":92},{"__ignoreMap":6},[93],{"type":57,"value":87},{"type":39,"tag":60,"props":95,"children":97},{"id":96},"configure-cypress",[98],{"type":57,"value":99},"Configure Cypress",{"type":39,"tag":53,"props":101,"children":102},{},[103,105,111],{"type":57,"value":104},"Create a ",{"type":39,"tag":75,"props":106,"children":108},{"className":107},[],[109],{"type":57,"value":110},"cypress.config.ts",{"type":57,"value":112}," file in your root directory and add the following:",{"type":39,"tag":67,"props":114,"children":119},{"code":115,"language":116,"meta":6,"className":117},"// cypress.config.ts\nimport { defineConfig } from 'cypress'\n\nmodule.exports = defineConfig({\n  component: {\n    devServer: {\n      framework: 'vue',\n      bundler: 'vite',\n    },\n  },\n})\n","ts",[118],"language-ts",[120],{"type":39,"tag":75,"props":121,"children":122},{"__ignoreMap":6},[123],{"type":57,"value":115},{"type":39,"tag":53,"props":125,"children":126},{},[127],{"type":57,"value":128},"This is the baseline configuration that works for Vue projects. Nuxt projects require more configuration to get going.",{"type":39,"tag":53,"props":130,"children":131},{},[132,134,140],{"type":57,"value":133},"In your root directory, create an additional configuration file. I use ",{"type":39,"tag":75,"props":135,"children":137},{"className":136},[],[138],{"type":57,"value":139},"vite.config.cypress.component.ts",{"type":57,"value":141},". In it, paste the following:",{"type":39,"tag":67,"props":143,"children":146},{"code":144,"language":116,"meta":6,"className":145},"// `vite.config.cypress.component.ts`\nimport vue from '@vitejs/plugin-vue'\n\nexport default {\n  plugins: [\n    vue({\n      template: {\n        compilerOptions: {\n          isCustomElement: tag => tag.includes('-'),\n        },\n      },\n    }),\n  ],\n}\n",[118],[147],{"type":39,"tag":75,"props":148,"children":149},{"__ignoreMap":6},[150],{"type":57,"value":144},{"type":39,"tag":53,"props":152,"children":153},{},[154,156,162],{"type":57,"value":155},"Now, add this config to your ",{"type":39,"tag":75,"props":157,"children":159},{"className":158},[],[160],{"type":57,"value":161},"cypres.config.ts",{"type":57,"value":163}," file so that it looks like so:",{"type":39,"tag":67,"props":165,"children":168},{"code":166,"language":116,"meta":6,"className":167},"// cypress.config.ts\nimport { defineConfig } from 'cypress'\nimport viteConfig from '~/vite.config.cypress.component.js'\n\nmodule.exports = defineConfig({\n  component: {\n    devServer: {\n      framework: 'vue',\n      bundler: 'vite',\n      viteConfig,\n    },\n  },\n})\n",[118],[169],{"type":39,"tag":75,"props":170,"children":171},{"__ignoreMap":6},[172],{"type":57,"value":166},{"type":39,"tag":53,"props":174,"children":175},{},[176],{"type":57,"value":177},"Unfortunately, I don't know exactly what this configuration is doing behind the scenes. I just know it works.",{"type":39,"tag":53,"props":179,"children":180},{},[181,183,192,194,201],{"type":57,"value":182},"I found this code snippet in ",{"type":39,"tag":184,"props":185,"children":189},"a",{"href":186,"rel":187},"https://github.com/cypress-io/cypress/discussions/21184#discussioncomment-4971326",[188],"nofollow",[190],{"type":57,"value":191},"this Github thread",{"type":57,"value":193}," by ",{"type":39,"tag":184,"props":195,"children":198},{"href":196,"rel":197},"https://github.com/elwinvaneede",[188],[199],{"type":57,"value":200},"@elwinvaneede",{"type":57,"value":202},".",{"type":39,"tag":204,"props":205,"children":207},"h3",{"id":206},"additional-cypress-component-config",[208],{"type":57,"value":209},"Additional Cypress Component Config",{"type":39,"tag":49,"props":211,"children":212},{},[213],{"type":39,"tag":53,"props":214,"children":215},{},[216],{"type":57,"value":217},"We need a few more files to make Cypress happy.",{"type":39,"tag":53,"props":219,"children":220},{},[221],{"type":57,"value":222},"Create a cypress directory containing a component and a support directory in our root directory.",{"type":39,"tag":67,"props":224,"children":226},{"code":225},"├── nuxt-project/\n└── component/\n│ ├── Hello.cy.ts\n└── support/\n│ ├── component-index.html\n│ ├── component.ts\n",[227],{"type":39,"tag":75,"props":228,"children":229},{"__ignoreMap":6},[230],{"type":57,"value":225},{"type":39,"tag":232,"props":233,"children":234},"ul",{},[235],{"type":39,"tag":236,"props":237,"children":238},"li",{},[239,245,247],{"type":39,"tag":240,"props":241,"children":242},"strong",{},[243],{"type":57,"value":244},"component-index.html",{"type":57,"value":246}," is the base HTML file that Cypress mounts our components to.\n",{"type":39,"tag":232,"props":248,"children":249},{},[250],{"type":39,"tag":236,"props":251,"children":252},{},[253],{"type":57,"value":254},"This file looks like so:",{"type":39,"tag":67,"props":256,"children":261},{"code":257,"language":258,"meta":6,"className":259},"// support/component-index.html\n\u003C!DOCTYPE html>\n\u003Chtml>\n  \u003Chead>\n    \u003Cmeta charset=\"utf-8\" />\n    \u003Cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    \u003Cmeta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n    \u003Ctitle>Components App\u003C/title>\n  \u003C/head>\n  \u003Cbody>\n    \u003Cdiv data-cy-root>\u003C/div>\n  \u003C/body>\n\u003C/html>\n","html",[260],"language-html",[262],{"type":39,"tag":75,"props":263,"children":264},{"__ignoreMap":6},[265],{"type":57,"value":257},{"type":39,"tag":232,"props":267,"children":268},{},[269],{"type":39,"tag":236,"props":270,"children":271},{},[272,277],{"type":39,"tag":240,"props":273,"children":274},{},[275],{"type":57,"value":276},"component.ts",{"type":57,"value":278}," is where we write specific configurations for our component tests.",{"type":39,"tag":53,"props":280,"children":281},{},[282,284,290],{"type":57,"value":283},"This file will provide the ",{"type":39,"tag":75,"props":285,"children":287},{"className":286},[],[288],{"type":57,"value":289},"mount",{"type":57,"value":291}," function:",{"type":39,"tag":67,"props":293,"children":296},{"code":294,"language":116,"meta":6,"className":295},"// support/component.ts\nimport { mount } from 'cypress/vue'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n\nCypress.Commands.add('mount', mount)\n",[118],[297],{"type":39,"tag":75,"props":298,"children":299},{"__ignoreMap":6},[300],{"type":57,"value":294},{"type":39,"tag":60,"props":302,"children":304},{"id":303},"running-the-component-test-runner",[305],{"type":57,"value":306},"Running the Component Test Runner",{"type":39,"tag":53,"props":308,"children":309},{},[310,312,318],{"type":57,"value":311},"When you run ",{"type":39,"tag":75,"props":313,"children":315},{"className":314},[],[316],{"type":57,"value":317},"npx cypress open",{"type":57,"value":319},", you should see the component test dashboard with a green configured button. Click it, then Chrome, then Start Component Testing in Chrome, and now we should see our spec runner.",{"type":39,"tag":53,"props":321,"children":322},{},[323],{"type":57,"value":324},"In our Nuxt project, let's create a basic component to test against.",{"type":39,"tag":53,"props":326,"children":327},{},[328,330,336],{"type":57,"value":329},"For funsies, I'm just creating a ",{"type":39,"tag":75,"props":331,"children":333},{"className":332},[],[334],{"type":57,"value":335},"Hello.vue",{"type":57,"value":337}," component with the following:",{"type":39,"tag":67,"props":339,"children":344},{"code":340,"language":341,"meta":6,"className":342},"// components/Hello.vue\n\u003Ctemplate>\n  \u003Cbutton>Hello World\u003C/button>\n\u003C/template>\n","vue",[343],"language-vue",[345],{"type":39,"tag":75,"props":346,"children":347},{"__ignoreMap":6},[348],{"type":57,"value":340},{"type":39,"tag":53,"props":350,"children":351},{},[352,354,360],{"type":57,"value":353},"I'm rendering this within my root ",{"type":39,"tag":75,"props":355,"children":357},{"className":356},[],[358],{"type":57,"value":359},"app.vue",{"type":57,"value":361}," file:",{"type":39,"tag":67,"props":363,"children":366},{"code":364,"language":341,"meta":6,"className":365},"// app.vue\n\u003Ctemplate>\n  \u003Cdiv>\n    \u003CHello />\n  \u003C/div>\n\u003C/template>\n",[343],[367],{"type":39,"tag":75,"props":368,"children":369},{"__ignoreMap":6},[370],{"type":57,"value":364},{"type":39,"tag":53,"props":372,"children":373},{},[374,376,382],{"type":57,"value":375},"Now we can mount this component in a cypress test. In our ",{"type":39,"tag":75,"props":377,"children":379},{"className":378},[],[380],{"type":57,"value":381},"cypress/component/Hello.cy.ts",{"type":57,"value":383}," file, paste the following:",{"type":39,"tag":67,"props":385,"children":388},{"code":386,"language":116,"meta":6,"className":387},"// cypress/component/Hello.cy.ts\nimport Hello from '../../components/Hello.vue'\n\ndescribe('Hello.cy', () => {\n  it('renders', () => {\n    cy.mount(Hello)\n  })\n})\n",[118],[389],{"type":39,"tag":75,"props":390,"children":391},{"__ignoreMap":6},[392],{"type":57,"value":386},{"type":39,"tag":60,"props":394,"children":396},{"id":395},"styling-our-components-with-tailwindcss-within-the-tests",[397],{"type":57,"value":398},"Styling Our Components with TailwindCSS Within the Tests",{"type":39,"tag":53,"props":400,"children":401},{},[402,404,411],{"type":57,"value":403},"You're probably using a library such as ",{"type":39,"tag":184,"props":405,"children":408},{"href":406,"rel":407},"https://tailwindcss.com/",[188],[409],{"type":57,"value":410},"TailwindCSS",{"type":57,"value":412}," to style your component. If that's the case, you'll notice your component isn't styled when running within the component test runner.",{"type":39,"tag":53,"props":414,"children":415},{},[416],{"type":57,"value":417},"Let's fix that.",{"type":39,"tag":53,"props":419,"children":420},{},[421,423,429,431,436],{"type":57,"value":422},"Every tutorial I found said I should be able to import my css file within my ",{"type":39,"tag":75,"props":424,"children":426},{"className":425},[],[427],{"type":57,"value":428},"cypress/support/component.ts",{"type":57,"value":430}," file or link to it using the ",{"type":39,"tag":75,"props":432,"children":434},{"className":433},[],[435],{"type":57,"value":244},{"type":57,"value":437}," file. I'm not sure why, but neither of these solutions worked for me.",{"type":39,"tag":53,"props":439,"children":440},{},[441,443,449],{"type":57,"value":442},"Instead, I needed to create a Cypress plugin for tailwind at ",{"type":39,"tag":75,"props":444,"children":446},{"className":445},[],[447],{"type":57,"value":448},"cypress/plugins/tailwind.ts",{"type":57,"value":450}," with the following:",{"type":39,"tag":67,"props":452,"children":455},{"code":453,"language":116,"meta":6,"className":454},"// cypress/support/component.ts\nbefore(() => {\n  cy.exec('npx tailwindcss -i ./assets/css/main.css -m').then(({ stdout }) => {\n    if (!document.head.querySelector('#tailwind-style')) {\n      const link = document.createElement('style')\n      link.id = 'tailwind-style'\n      link.innerHTML = stdout\n\n      document.head.appendChild(link)\n    }\n  })\n})\n",[118],[456],{"type":39,"tag":75,"props":457,"children":458},{"__ignoreMap":6},[459],{"type":57,"value":453},{"type":39,"tag":53,"props":461,"children":462},{},[463,465,470],{"type":57,"value":464},"Then import this plugin into your ",{"type":39,"tag":75,"props":466,"children":468},{"className":467},[],[469],{"type":57,"value":428},{"type":57,"value":361},{"type":39,"tag":67,"props":472,"children":475},{"code":473,"language":116,"meta":6,"className":474},"// cypress/support/component.ts\nimport { mount } from 'cypress/vue'\nimport '../plugins/tailwind'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n\nCypress.Commands.add('mount', mount)\n",[118],[476],{"type":39,"tag":75,"props":477,"children":478},{"__ignoreMap":6},[479],{"type":57,"value":473},{"type":39,"tag":53,"props":481,"children":482},{},[483],{"type":57,"value":484},"From what I understand, this is compiling Tailwind and appending the css output to a style tag that is then loaded into the component test runner's HTML.",{"type":39,"tag":53,"props":486,"children":487},{},[488],{"type":57,"value":489},"This does create a bit of lag, but it's the only way I've been able to solve this problem.",{"type":39,"tag":60,"props":491,"children":493},{"id":492},"source-code",[494],{"type":57,"value":495},"Source Code",{"type":39,"tag":53,"props":497,"children":498},{},[499,501,508],{"type":57,"value":500},"You can view the code for this project at this ",{"type":39,"tag":184,"props":502,"children":505},{"href":503,"rel":504},"https://github.com/CodyBontecou/cypress-component-testing-with-nuxt-3",[188],[506],{"type":57,"value":507},"repository",{"type":57,"value":202},{"title":6,"searchDepth":510,"depth":510,"links":511},2,[512,513,514,518,519,520],{"id":62,"depth":510,"text":65},{"id":81,"depth":510,"text":84},{"id":96,"depth":510,"text":99,"children":515},[516],{"id":206,"depth":517,"text":209},3,{"id":303,"depth":510,"text":306},{"id":395,"depth":510,"text":398},{"id":492,"depth":510,"text":495},"markdown","content:cypress-component-testing-with-nuxt-3.md","content","cypress-component-testing-with-nuxt-3.md","md",{"_path":527,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":528,"description":529,"type":10,"author":530,"date":531,"last_modified_date":531,"slug":532,"dropdown":16,"meta":533,"canonicalUrl":541,"topics":542,"body":544,"_type":521,"_id":611,"_source":523,"_file":612,"_stem":532,"_extension":525},"/disable-video-recording-on-cypress-run","Disable Video Recording on Cypress Run","This is a configuration I tend to forget and have to rely on tracking down the answer. I'm not the biggest fan of the Cypress docs, so I decided to write this up for personal reference and figured some of you might find it helpful too.",{"name":12,"image":13},"2023-02-04T00:00:00.000Z","disable-video-recording-on-cypress-run",[534,535,537,538,539,540],{"name":19,"content":529},{"name":21,"content":536},"https://codybontecou.com/images/disable-video-recording-on-cypress-run.png",{"name":24,"content":529},{"name":26,"content":528},{"name":28,"content":528},{"name":30,"content":528},"https://codybontecou.com/disable-video-recording-on-cypress-run.html",[16,543],"Configuration",{"type":36,"children":545,"toc":606},[546,552,558,567,573,596,602],{"type":39,"tag":40,"props":547,"children":548},{"id":6},[549],{"type":39,"tag":44,"props":550,"children":551},{"value":46},[],{"type":39,"tag":60,"props":553,"children":555},{"id":554},"code-snippet",[556],{"type":57,"value":557},"Code Snippet",{"type":39,"tag":67,"props":559,"children":562},{"className":560,"code":561,"language":116,"meta":6},[118],"// cypress.config.ts\nimport { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  video: false,\n})\n",[563],{"type":39,"tag":75,"props":564,"children":565},{"__ignoreMap":6},[566],{"type":57,"value":561},{"type":39,"tag":60,"props":568,"children":570},{"id":569},"resources",[571],{"type":57,"value":572},"Resources",{"type":39,"tag":232,"props":574,"children":575},{},[576,586],{"type":39,"tag":236,"props":577,"children":578},{},[579],{"type":39,"tag":184,"props":580,"children":583},{"href":581,"rel":582},"https://github.com/cypress-io/cypress/issues/867",[188],[584],{"type":57,"value":585},"Github Discussion",{"type":39,"tag":236,"props":587,"children":588},{},[589],{"type":39,"tag":184,"props":590,"children":593},{"href":591,"rel":592},"https://docs.cypress.io/guides/references/configuration#Videos",[188],[594],{"type":57,"value":595},"Docs",{"type":39,"tag":60,"props":597,"children":599},{"id":598},"inspiration",[600],{"type":57,"value":601},"Inspiration",{"type":39,"tag":53,"props":603,"children":604},{},[605],{"type":57,"value":529},{"title":6,"searchDepth":510,"depth":510,"links":607},[608,609,610],{"id":554,"depth":510,"text":557},{"id":569,"depth":510,"text":572},{"id":598,"depth":510,"text":601},"content:disable-video-recording-on-cypress-run.md","disable-video-recording-on-cypress-run.md",{"_path":614,"_dir":6,"_draft":7,"_partial":7,"_locale":6,"title":615,"description":616,"type":10,"author":617,"date":618,"last_modified_date":618,"slug":619,"dropdown":620,"topics":621,"meta":625,"canonicalUrl":633,"body":634,"_type":521,"_id":818,"_source":523,"_file":819,"_stem":619,"_extension":525},"/lets-setup-nuxt-3-with-cypress","Lets setup Nuxt 3 with Cypress","Cypress is an excellent E2E testing tool. Let's set it up in a fresh Nuxt 3 project to connect two modern web tools.",{"name":12,"image":13},"2023-02-02T00:00:00.000Z","lets-setup-nuxt-3-with-cypress","NuxtJS",[622,623,341,624],"nuxt","cypress","testing",[626,627,629,630,631,632],{"name":19,"content":616},{"name":21,"content":628},"https://codybontecou.com/images/lets-setup-nuxt-3-with-cypress.png",{"name":24,"content":616},{"name":26,"content":615},{"name":28,"content":615},{"name":30,"content":615},"https://codybontecou.com/lets-setup-nuxt-3-with-cypress.html",{"type":36,"children":635,"toc":813},[636,642,650,663,668,672,680,684,693,728,734,746,767,778,789,794,799],{"type":39,"tag":40,"props":637,"children":638},{"id":6},[639],{"type":39,"tag":44,"props":640,"children":641},{"value":46},[],{"type":39,"tag":49,"props":643,"children":644},{},[645],{"type":39,"tag":53,"props":646,"children":647},{},[648],{"type":57,"value":649},"This is a quick guide on setting up Cypress End-to-End Testing with Nuxt 3.",{"type":39,"tag":53,"props":651,"children":652},{},[653,655,661],{"type":57,"value":654},"I noticed ",{"type":39,"tag":184,"props":656,"children":659},{"href":657,"rel":658},"https://github.com/cypress-io/cypress/discussions/21184",[188],[660],{"type":57,"value":191},{"type":57,"value":662}," about users struggling to get Cypress working with Nuxt 3.",{"type":39,"tag":53,"props":664,"children":665},{},[666],{"type":57,"value":667},"I found the setup straightforward and decided to share how to do it.",{"type":39,"tag":60,"props":669,"children":670},{"id":62},[671],{"type":57,"value":65},{"type":39,"tag":67,"props":673,"children":675},{"className":674,"code":69,"language":70,"meta":6},[72],[676],{"type":39,"tag":75,"props":677,"children":678},{"__ignoreMap":6},[679],{"type":57,"value":69},{"type":39,"tag":60,"props":681,"children":682},{"id":81},[683],{"type":57,"value":84},{"type":39,"tag":67,"props":685,"children":688},{"className":686,"code":687,"language":70,"meta":6},[72],"npm install cypress --save-dev\nnpx cypress open\n",[689],{"type":39,"tag":75,"props":690,"children":691},{"__ignoreMap":6},[692],{"type":57,"value":687},{"type":39,"tag":53,"props":694,"children":695},{},[696,698,703,705,711,713,719,721,727],{"type":57,"value":697},"Running ",{"type":39,"tag":75,"props":699,"children":701},{"className":700},[],[702],{"type":57,"value":317},{"type":57,"value":704}," should spawn the cypress test runner. Click ",{"type":39,"tag":75,"props":706,"children":708},{"className":707},[],[709],{"type":57,"value":710},"E2E Testing",{"type":57,"value":712},", then ",{"type":39,"tag":75,"props":714,"children":716},{"className":715},[],[717],{"type":57,"value":718},"Chrome",{"type":57,"value":720}," for the browser option, and then click ",{"type":39,"tag":75,"props":722,"children":724},{"className":723},[],[725],{"type":57,"value":726},"Start E2E Testing in Chrome",{"type":57,"value":202},{"type":39,"tag":60,"props":729,"children":731},{"id":730},"cypress-e2e-tests",[732],{"type":57,"value":733},"Cypress E2E Tests",{"type":39,"tag":53,"props":735,"children":736},{},[737,739,744],{"type":57,"value":738},"During the Cypress initialization, the ",{"type":39,"tag":75,"props":740,"children":742},{"className":741},[],[743],{"type":57,"value":623},{"type":57,"value":745}," folder should have been created.",{"type":39,"tag":53,"props":747,"children":748},{},[749,751,757,759,765],{"type":57,"value":750},"By default, Cypress looks for any ",{"type":39,"tag":75,"props":752,"children":754},{"className":753},[],[755],{"type":57,"value":756},"*.cy.*",{"type":57,"value":758}," file within your ",{"type":39,"tag":75,"props":760,"children":762},{"className":761},[],[763],{"type":57,"value":764},"cypress/e2e",{"type":57,"value":766}," directory.",{"type":39,"tag":53,"props":768,"children":769},{},[770,772],{"type":57,"value":771},"For simplicity's sake, I have the following test in ",{"type":39,"tag":75,"props":773,"children":775},{"className":774},[],[776],{"type":57,"value":777},"cypress/e2e/spec.cy.js",{"type":39,"tag":67,"props":779,"children":784},{"className":780,"code":782,"language":783,"meta":6},[781],"language-js","// cypress/e2e/spec.cy.js\ndescribe('template spec', () => {\n  it('passes', () => {\n    cy.visit('http://localhost:3000/')\n  })\n})\n","js",[785],{"type":39,"tag":75,"props":786,"children":787},{"__ignoreMap":6},[788],{"type":57,"value":782},{"type":39,"tag":53,"props":790,"children":791},{},[792],{"type":57,"value":793},"This test should pass while your Nuxt 3 application runs on port 3000. It just opens the browser and asserts it loaded.",{"type":39,"tag":53,"props":795,"children":796},{},[797],{"type":57,"value":798},"And that's it. We now have Cypress E2E tests running against our Nuxt 3 application. Hope you enjoyed.",{"type":39,"tag":53,"props":800,"children":801},{},[802,804,811],{"type":57,"value":803},"Here's the ",{"type":39,"tag":184,"props":805,"children":808},{"href":806,"rel":807},"https://github.com/CodyBontecou/lets-setup-nuxt-3-with-cypress",[188],[809],{"type":57,"value":810},"Github Repo",{"type":57,"value":812}," for reference.",{"title":6,"searchDepth":510,"depth":510,"links":814},[815,816,817],{"id":62,"depth":510,"text":65},{"id":81,"depth":510,"text":84},{"id":730,"depth":510,"text":733},"content:lets-setup-nuxt-3-with-cypress.md","lets-setup-nuxt-3-with-cypress.md",1730739753392]