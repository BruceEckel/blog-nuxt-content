{"_path":"/using-url-query-params-in-nuxt-3","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Using URL Query Params in Nuxt 3","description":"Use Nuxt3's useRoute function to use URL parameters to determine state.","type":"post","author":{"name":"Cody Bontecou","image":"https://codybontecou.com/images/cody-abstract.jpeg"},"date":"2022-02-15T00:00:00.000Z","category":"tutorials","dropdown":"NuxtJS","tags":["vue","Vue","Vite","Route","nuxt"],"meta":[{"name":"og:title","content":"Using URL Query Params in Nuxt 3"},{"name":"og:description","content":"Use Nuxt3's useRoute function to use URL parameters to determine state."},{"name":"og:image","content":"https://codybontecou.com/images/using-url-query-params-in-nuxt-3-meta.png"},{"name":"og:image:alt","content":"Using URL Query Params in Nuxt 3"},{"name":"og:title","content":"Using URL Query Params in Nuxt 3"},{"name":"twitter:title","content":"Using URL Query Params in Nuxt 3"},{"name":"twitter:text:title","content":"Using URL Query Params in Nuxt 3"}],"canonicalUrl":"https://codybontecou.com/using-url-query-params-in-nuxt-3.html","topics":["nuxt","vue router","composition"],"created_at":"2024-10-31T14:26","last_modified":"2024-11-09T21:19","body":{"type":"root","children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is a continuation of my previous "},{"type":"element","tag":"a","props":{"href":"https://codybontecou.com/silently-update-url-nuxt-3.html","rel":["nofollow"]},"children":[{"type":"text","value":"post"}]},{"type":"text","value":" on how to set query parameters in Nuxt 3. We'll be continuing with the code written there so make sure you check it out."}]}]},{"type":"element","tag":"h2","props":{"id":"the-problem-were-solving"},"children":[{"type":"text","value":"The problem we're solving"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We left off with our URL looking like "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"localhost:3000/test?streamer=faker"}]},{"type":"text","value":". This is nice but contained a few cases that are less than ideal."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Because the URL parameter is being updated using our input's v-model, if the page is refreshed, we lose that local state and the value stored in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"twitchStreamer"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"using-useroute-in-nuxt"},"children":[{"type":"text","value":"Using useRoute in Nuxt"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NuxtJS relies on "},{"type":"element","tag":"a","props":{"href":"https://router.vuejs.org/","rel":["nofollow"]},"children":[{"type":"text","value":"vue-router"}]},{"type":"text","value":" for most of its routing logic."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In our example, we are using the Composition API, one of the new features built into Nuxt 3."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to get our route, we use bring "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useRoute()"}]},{"type":"text","value":" into our "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"setup()"}]},{"type":"text","value":". Nuxt 3 auto-imports "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useRoute()"}]},{"type":"text","value":" so we can chose to be explicit or implicit."}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"setup() {\n  const route = useRoute()\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"setup() {\n  const route = useRoute()\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Having our route unlocks all of the benefits of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"vue-router"}]},{"type":"text","value":", including access to our query params!"}]},{"type":"element","tag":"h2","props":{"id":"making-the-query-param-persist"},"children":[{"type":"text","value":"Making the query param persist"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With access to our route, we can check the query variable (what's after the = in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"streamer="}]},{"type":"text","value":") using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"route.query.streamer"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Easy!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I now use this logic alongside a "},{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator","rel":["nofollow"]},"children":[{"type":"text","value":"ternary operator"}]},{"type":"text","value":" with the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"twitchStreamer"}]},{"type":"text","value":" variable."}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, every time the page is navigated to or refreshed, our "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"twitchStreamer"}]},{"type":"text","value":" will check if our "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"route"}]},{"type":"text","value":" has a streamer query parameter."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If it does, our "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"twitchStreamer"}]},{"type":"text","value":" will contain the parameter's value. Otherwise, it'll be an empty string."}]},{"type":"element","tag":"h2","props":{"id":"final-code-snippet"},"children":[{"type":"text","value":"Final code snippet"}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<!-- pages/example.vue -->\n<template>\n  <input v-model=\"twitchStreamer\" />\n</template>\n\n<script>\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n\n    watch(twitchStreamer, (twitchStreamer, previous) => {\n      router.push({\n        path: '/test',\n        query: { streamer: twitchStreamer },\n      })\n    })\n\n    return { twitchStreamer }\n</script>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!-- pages/example.vue -->\n<template>\n  <input v-model=\"twitchStreamer\" />\n</template>\n\n<script>\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const twitchStreamer = ref(route.query.streamer ? route.query.streamer : '')\n\n    watch(twitchStreamer, (twitchStreamer, previous) => {\n      router.push({\n        path: '/test',\n        query: { streamer: twitchStreamer },\n      })\n    })\n\n    return { twitchStreamer }\n</script>\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"the-problem-were-solving","depth":2,"text":"The problem we're solving"},{"id":"using-useroute-in-nuxt","depth":2,"text":"Using useRoute in Nuxt"},{"id":"making-the-query-param-persist","depth":2,"text":"Making the query param persist"},{"id":"final-code-snippet","depth":2,"text":"Final code snippet"}]}},"_type":"markdown","_id":"content:using-url-query-params-in-nuxt-3.md","_source":"content","_file":"using-url-query-params-in-nuxt-3.md","_stem":"using-url-query-params-in-nuxt-3","_extension":"md"}