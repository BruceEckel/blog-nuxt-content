[{"_path":"/vuejs-emit-multiple-values-from-child-to-parent","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"VueJS Custom Event - Emit Multiple Values","description":"Use a VueJS's custom event to emit multiple parameters between components.","type":"post","author":{"name":"Cody Bontecou","image":"https://codybontecou.com/images/cody-abstract.jpeg"},"date":"2020-09-07T00:00:00.000Z","category":"tutorials","dropdown":"VueJS","tags":["vue","Vue","nuxt","Nuxt","Code"],"meta":[{"name":"og:title","content":"VueJS Custom Event - Emit Multiple Values"},{"name":"og:description","content":"Use a VueJS's custom event to emit multiple parameters between components."},{"name":"og:image","content":"https://codybontecou.com/images/vuejs-emit-multiple-params-meta.png"},{"name":"og:image:alt","content":"Emit Multiple Values from Child to Parent in a VueJS Custom Event with code snippet showcasing example provided in blog post."},{"name":"og:title","content":"Emit Multiple Values from Child to Parent in a VueJS Custom Event"},{"name":"twitter:title","content":"Emit Multiple Values from Child to Parent in a VueJS Custom Event"},{"name":"twitter:text:title","content":"Emit Multiple Values from Child to Parent in a VueJS Custom Event"}],"canonicalUrl":"https://codybontecou.com/vuejs-emit-multiple-values-from-child-to-parent.html","newsletter":false,"topics":["vue","events","components","composition"],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"emit-multiple-values-from-child-to-parent-in-a-vuejs-custom-event"},"children":[{"type":"text","value":"Emit Multiple Values from Child to Parent in a VueJS Custom Event"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"VueJS custom events are a great way to communicate between child and parent components."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I was recently was in need of a way to pass more than one value from child to parent within a single custom event. The "},{"type":"element","tag":"a","props":{"href":"https://vuejs.org/v2/guide/components-custom-events.html","rel":["nofollow"]},"children":[{"type":"text","value":"VueJS Docs"}]},{"type":"text","value":" do not provide any example showcasing this and instead I needed to refer to some comments within a Stack Overflow thread."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is what I found."}]},{"type":"element","tag":"h2","props":{"id":"to-emit-more-than-one-parameter-its-best-to-pass-the-data-as-an-object"},"children":[{"type":"text","value":"To emit more than one parameter, it's best to pass the data as an object:"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"this.$emit('success', {\n  username: 'CodyBontecou',\n  error: false,\n})\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"this.$emit('success', {\n  username: 'CodyBontecou',\n  error: false,\n})\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"VueJS's custom events only accepts two parameters:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The name of the event. In this case, the event name is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"success"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Data you want to pass. This can be a string, object, number, boolean, or function."}]}]},{"type":"element","tag":"h2","props":{"id":"access-the-parameters-from-the-parent-component-using-an-event-listener"},"children":[{"type":"text","value":"Access the parameters from the parent component using an event listener:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We emitted the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"success"}]},{"type":"text","value":" event from the child component. This event can be captured within the parent component where the child is rendered using the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"@"}]},{"type":"text","value":" sign, in this case, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"@success"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"@success calls the onSuccess method when success is emitted from the child component."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The username and message params are destructured from the object passed into the success emit and are now usable within the onSuccuss function to do as you please."}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"<LoginForm @success=\"onSuccess\" />\n\nmethods: {\n  onSuccess({ username, error }) {\n    ...\n  },\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<LoginForm @success=\"onSuccess\" />\n\nmethods: {\n  onSuccess({ username, error }) {\n    ...\n  },\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It took me a little while to find the solution to this problem, so I figured it was best to document it within a blog post for others to benefit from."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I hope it helped!"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"to-emit-more-than-one-parameter-its-best-to-pass-the-data-as-an-object","depth":2,"text":"To emit more than one parameter, it's best to pass the data as an object:"},{"id":"access-the-parameters-from-the-parent-component-using-an-event-listener","depth":2,"text":"Access the parameters from the parent component using an event listener:"}]}},"_type":"markdown","_id":"content:vuejs-emit-multiple-values-from-child-to-parent.md","_source":"content","_file":"vuejs-emit-multiple-values-from-child-to-parent.md","_stem":"vuejs-emit-multiple-values-from-child-to-parent","_extension":"md"},{"_path":"/time-to-read-article-component","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Building a VueJS component to estimate the expected reading time of an article.","description":"The estimated reading time has become prevalent in most major spaces that provides articles and reading materials. Build this functionality into your site using a VueJS component.","type":"post","author":{"name":"Cody Bontecou","image":"https://codybontecou.com/images/cody-abstract.jpeg"},"date":"2020-07-05T00:00:00.000Z","category":"tutorials","dropdown":"VueJS","tags":["VuePress","JavaScript","CSS","Refactor","Vue","Medium"],"meta":[{"name":"og:image","content":"https://codybontecou.com/images/header-meta-component.png"},{"name":"og:image:alt","content":"Code preview of the time to read article component."},{"name":"og:title","content":"Building a VueJS component to estimate the expected reading time of an article."},{"name":"twitter:title","content":"Building a VueJS component to estimate the expected reading time of an article."},{"name":"twitter:text:title","content":"Building a VueJS component to estimate the expected reading time of an article."}],"canonicalUrl":"https://codybontecou.com/reading-time-vuejs-component.html","topics":["vue","javascript","css","components"],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"className":["text-4xl","font-semibold"],"id":"vuejs-component-to-estimate-the-reading-time-of-an-article"},"children":[{"type":"text","value":"VueJS component to estimate the reading time of an article."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The estimated reading time has become prevalent in most major spaces that provides articles and reading materials. I decided to look into how to calculate it myself and found it's quite simple."}]}]},{"type":"element","tag":"p","props":{"className":["mt-8","font-semibold","text-gray-800"]},"children":[{"type":"text","value":"A big thank you to Michal Burrows' "},{"type":"element","tag":"a","props":{"href":"https://dev.to/michaelburrows/calculate-the-estimated-reading-time-of-an-article-using-javascript-2k9l","target":"_blank"},"children":[{"type":"text","value":"post"}]},{"type":"text","value":" for providing me with the baseline of this source code."}]},{"type":"element","tag":"h2","props":{"id":"steps-to-estimate-the-reading-time"},"children":[{"type":"text","value":"Steps to estimate the reading time"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You get the container of the content that you wish to read."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Count all of the words"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Provide average words read per minute by your target audience."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Divide the number of words by the average words per minute."}]}]},{"type":"element","tag":"h2","props":{"id":"code-example"},"children":[{"type":"text","value":"Code Example"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When placed into a VueJS component, it looks like this:"}]},{"type":"element","tag":"pre","props":{"className":["language-vue"],"code":"<template>\n  <span> {{ timeToRead }} minute read </span>\n</template>\n\n<script>\nfunction readingTime(text) {\n  const wpm = 225\n  const words = text.trim().split(/\\s+/).length\n  return Math.ceil(words / wpm)\n}\n\nexport default {\n  data() {\n    return {\n      timeToRead: undefined,\n    }\n  },\n  props: {\n    text: {\n      type: String,\n      required: true,\n    },\n  },\n  mounted() {\n    this.timeToRead = readingTime(this.text)\n  },\n}\n</script>\n","language":"vue","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<template>\n  <span> {{ timeToRead }} minute read </span>\n</template>\n\n<script>\nfunction readingTime(text) {\n  const wpm = 225\n  const words = text.trim().split(/\\s+/).length\n  return Math.ceil(words / wpm)\n}\n\nexport default {\n  data() {\n    return {\n      timeToRead: undefined,\n    }\n  },\n  props: {\n    text: {\n      type: String,\n      required: true,\n    },\n  },\n  mounted() {\n    this.timeToRead = readingTime(this.text)\n  },\n}\n</script>\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"steps-to-estimate-the-reading-time","depth":2,"text":"Steps to estimate the reading time"},{"id":"code-example","depth":2,"text":"Code Example"}]}},"_type":"markdown","_id":"content:time-to-read-article-component.md","_source":"content","_file":"time-to-read-article-component.md","_stem":"time-to-read-article-component","_extension":"md"}]